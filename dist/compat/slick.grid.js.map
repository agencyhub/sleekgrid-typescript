{
  "version": 3,
  "sources": ["../../src/grid/index.ts", "../../src/grid/column.ts", "global-externals:_", "../../src/grid/internal.ts", "../../src/grid/gridoptions.ts", "../../src/grid/grid.ts"],
  "sourcesContent": ["export * from \"./column\";\nexport * from \"./eventargs\";\nexport * from \"./editor\";\nexport * from \"./formatting\";\nexport * from \"./gridoptions\";\nexport * from \"./grid\";\n", "import type { GroupTotals } from \"../core/group\";\nimport type { Grid } from \"./grid\";\nimport type { Editor, ValidationResult } from \"./editor\";\nimport type { AsyncPostCleanup, AsyncPostRender, ColumnFormatter } from \"./formatting\";\n\nexport interface Column<TItem = any> {\n    asyncPostRender?: AsyncPostRender<TItem>;\n    asyncPostRenderCleanup?: AsyncPostCleanup<TItem>;\n    behavior?: any;\n    cannotTriggerInsert?: boolean;\n    cssClass?: string;\n    defaultSortAsc?: boolean;\n    editor?: Editor;\n    field: string;\n    frozen?: boolean;\n    focusable?: boolean;\n    footerCssClass?: string;\n    formatter?: ColumnFormatter<TItem>;\n    groupTotalsFormatter?: (p1?: GroupTotals<TItem>, p2?: Column<TItem>, grid?: Grid<TItem>) => string;\n    headerCssClass?: string;\n    id?: string;\n    maxWidth?: any;\n    minWidth?: number;\n    name?: string;\n    nameIsHtml?: boolean;\n    previousWidth?: number;\n    referencedFields?: string[];\n    rerenderOnResize?: boolean;\n    resizable?: boolean;\n    selectable?: boolean;\n    sortable?: boolean;\n    sortOrder?: number;\n    toolTip?: string;\n    validator?: (value: any) => ValidationResult;\n    visible?: boolean;\n    width?: number;\n}\n\nexport const columnDefaults: Partial<Column> = {\n    name: \"\",\n    nameIsHtml: false,\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    footerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n};\n\nexport interface ColumnMetadata<TItem = any> {\n    colspan: number | '*';\n    formatter?: ColumnFormatter<TItem>;\n}\n\nexport interface ColumnSort {\n    columnId: string;\n    sortAsc?: boolean;\n}\n\nexport interface ItemMetadata<TItem = any> {\n    columns?: { [key: string]: ColumnMetadata<TItem> };\n    formatter?: ColumnFormatter<TItem>;\n}\n\n", "const { Event, EventData, GlobalEditorLock, keyCode, NonDataRow, preClickClassName, Range } = Slick;export {\n     Event, EventData, GlobalEditorLock, keyCode, NonDataRow, preClickClassName, Range\n};", "import type { Column } from \"./column\";\nimport type { GridOptions } from \"./gridoptions\";\n\n// shared across all grids on the page\nlet maxSupportedCssHeight: number;  // browser's breaking point\nlet scrollbarDimensions: { width: number, height: number };\n\nexport function adjustFrozenColumnCompat(columns: Column[], options: GridOptions) {\n    if (options?.frozenColumn == null) {\n        delete options.frozenColumn;\n        return;\n    }\n\n    var toFreeze = options.frozenColumn + 1;\n    options.frozenColumn = -1;\n    var i = 0;\n    while (i < columns.length) {\n        var col = columns[i++];\n        if (toFreeze > 0 && col.visible !== false) {\n            col.frozen = true;\n            options.frozenColumn++;\n            toFreeze--;\n        }\n        else if (col.frozen !== undefined)\n            delete col.frozen;\n    }\n}\n\nexport function attrEncode(s: string) {\n    if (s == null)\n        return '';\n\n    return s\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\");\n}\n\nexport function defaultFormatter(_r: number, _c: number, value: any) {\n    return htmlEncode(value);\n}\n\nexport function disableSelection(target: HTMLElement) {\n    if (target) {\n        target.setAttribute('unselectable', 'on');\n        target.style.userSelect = \"none\";\n        target.addEventListener('selectstart', () => false);\n    }\n}\n\nexport function getMaxSupportedCssHeight(): number {\n    return maxSupportedCssHeight ?? ((navigator.userAgent.toLowerCase().match(/gecko\\//) ? 4000000 : 32000000));\n}\n\nexport function getScrollBarDimensions(recalc?: boolean) {\n    if (!scrollbarDimensions || recalc) {\n        var c = document.body.appendChild(H('div', {\n            style: 'position:absolute;top:-10000px;left:-10000px;width:100px;height:100px;overflow: scroll;border:0'\n        }));\n        scrollbarDimensions = {\n            width: Math.round(c.offsetWidth - c.clientWidth),\n            height: Math.round(c.offsetWidth - c.clientHeight)\n        };\n        c.remove();\n    }\n    return scrollbarDimensions;\n}\n\nexport function H<K extends keyof HTMLElementTagNameMap>(tag: K, attr?: { [key: string]: (string | boolean) }, ...children: Node[]): HTMLElementTagNameMap[K] {\n    var el = document.createElement(tag);\n    var k: string, v: (string | boolean), c: Node;\n    if (attr) {\n        for (k in attr) {\n            v = attr[k];\n            if (v != null && v !== false)\n                el.setAttribute(k, v === true ? '' : v);\n        }\n    }\n    if (children) {\n        for (c of children)\n            el.appendChild(c);\n    }\n    return el;\n}\n\nexport function htmlEncode(s: string) {\n    return (s + \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\nexport function simpleArrayEquals(arr1: number[], arr2: number[]) {\n    if (!Array.isArray(arr1) || !Array.isArray(arr2) || arr1.length !== arr2.length)\n        return false;\n    arr1.sort();\n    arr2.sort();\n    for (var i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Helper to sort visible cols, while keeping invisible cols sticky to\n * the previous visible col. For example, if columns are currently in order\n * A, B, C, D, E, F, G, H and desired order is G, D, F (assuming A, B, C, E\n * were invisible) the result is A, B, G, H, D, E, F.\n */\n export function sortToDesiredOrderAndKeepRest(columns: Column[], idOrder: string[]): Column[] {\n    if (idOrder.length == 0)\n        return columns;\n\n    var orderById: { [key: string]: number } = {},\n        colIdxById: { [key: string]: number } = {},\n        result: Column[] = [];\n\n    for (var i = 0; i < idOrder.length; i++)\n        orderById[idOrder[i]] = i;\n\n    for (i = 0; i < columns.length; i++)\n        colIdxById[columns[i].id] = i;\n\n    function takeFrom(i: number) {\n        for (var j = i; j < columns.length; j++) {\n            var c = columns[j];\n            if (i != j && orderById[c.id] != null)\n                break;\n            result.push(c);\n            colIdxById[c.id] = null;\n        }\n    }\n\n    if (orderById[columns[0].id] == null)\n        takeFrom(0);\n\n    for (var id of idOrder) {\n        i = colIdxById[id];\n        if (i != null)\n            takeFrom(i);\n    }\n\n    for (i = 0; i < columns.length; i++) {\n        var c = columns[i];\n        if (colIdxById[c.id] != null) {\n            result.push(c);\n            colIdxById[c.id] = null;\n        }\n    }\n\n    return result;\n}\n\nexport function addUiStateHover() {\n    (this as HTMLElement)?.classList?.add(\"ui-state-hover\");\n}\n\nexport function removeUiStateHover() {\n    (this as HTMLElement)?.classList?.remove(\"ui-state-hover\");\n}\n\nexport interface CachedRow {\n    rowNodeL: HTMLDivElement,\n    rowNodeR: HTMLDivElement,\n    // ColSpans of rendered cells (by column idx).\n    // Can also be used for checking whether a cell has been rendered.\n    cellColSpans: number[],\n\n    // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n    cellNodesByColumnIdx: { [key: number]: HTMLElement },\n\n    // Column indices of cell nodes that have been rendered, but not yet indexed in\n    // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n    // end of the row.\n    cellRenderQueue: number[]\n}\n\nexport interface GoToResult {\n    row: number;\n    cell: number;\n    posX: number;\n}\n\nexport interface PostProcessCleanupEntry {\n    groupId: number,\n    cellNode?: HTMLElement,\n    columnIdx?: number,\n    rowNodeL?: HTMLDivElement;\n    rowNodeR?: HTMLDivElement;\n    rowIdx?: number;\n}\n", "import type { Column } from \"./column\";\nimport { EditorLock, GlobalEditorLock } from \"../core/editlock\";\nimport type { EditCommand, EditorFactory } from \"./editor\";\nimport type { ColumnFormatter, FormatterFactory } from \"./formatting\";\nimport { defaultFormatter } from \"./internal\";\n\nexport interface GridOptions<TItem = any> {\n    addNewRowCssClass?: string;\n    alwaysAllowHorizontalScroll?: boolean;\n    alwaysShowVerticalScroll?: boolean;\n    asyncEditorLoadDelay?: number;\n    asyncEditorLoading?: boolean;\n    asyncPostCleanupDelay?: number;\n    asyncPostRenderDelay?: number;\n    autoEdit?: boolean;\n    autoHeight?: boolean;\n    cellFlashingCssClass?: string;\n    cellHighlightCssClass?: string;\n    columns?: Column<TItem>[];\n    createPreHeaderPanel?: boolean;\n    dataItemColumnValueExtractor?: (item: TItem, column: Column<TItem>) => void;\n    defaultColumnWidth?: number;\n    defaultFormatter?: ColumnFormatter<TItem>;\n    editable?: boolean;\n    editCommandHandler?: (item: TItem, column: Column<TItem>, command: EditCommand) => void;\n    editorFactory?: EditorFactory;\n    editorLock?: EditorLock;\n    enableAddRow?: boolean;\n    enableAsyncPostRender?: boolean;\n    enableAsyncPostRenderCleanup?: boolean;\n    enableCellNavigation?: boolean;\n    enableCellRangeSelection?: boolean;\n    enableColumnReorder?: boolean;\n    enableRowReordering?: boolean;\n    enableTabKeyNavigation?: boolean;\n    enableTextSelectionOnCells?: boolean;\n    explicitInitialization?: boolean;\n    footerRowHeight?: number;\n    forceFitColumns?: boolean;\n    forceSyncScrolling?: boolean;\n    formatterFactory?: FormatterFactory;\n    frozenBottom?: boolean;\n    frozenColumn?: number;\n    frozenRow?: number;\n    fullWidthRows?: boolean;\n    groupingPanel?: boolean,\n    groupingPanelHeight?: number;\n    headerRowHeight?: number;\n    leaveSpaceForNewRows?: boolean;\n    minBuffer?: number;\n    multiColumnSort?: boolean;\n    multiSelect?: boolean;\n    preHeaderPanelHeight?: number;\n    renderAllCells?: boolean;\n    rowHeight?: number;\n    selectedCellCssClass?: string;\n    showCellSelection?: boolean;\n    showColumnHeader?: boolean;\n    showFooterRow?: boolean;\n    showGroupingPanel?: boolean;\n    showHeaderRow?: boolean;\n    showPreHeaderPanel?: boolean;\n    showTopPanel?: boolean;\n    slickCompat?: boolean;\n    suppressActiveCellChangeOnEdit?: boolean;\n    syncColumnCellResize?: boolean;\n    topPanelHeight?: number;\n    useLegacyUI?: boolean;\n    viewportClass?: string;\n}\n\nexport const gridDefaults: GridOptions = {\n    addNewRowCssClass: \"new-row\",\n    alwaysAllowHorizontalScroll: false,\n    alwaysShowVerticalScroll: false,\n    asyncEditorLoadDelay: 100,\n    asyncEditorLoading: false,\n    asyncPostCleanupDelay: 40,\n    asyncPostRenderDelay: 50,\n    autoEdit: true,\n    autoHeight: false,\n    cellFlashingCssClass: \"flashing\",\n    dataItemColumnValueExtractor: null,\n    defaultColumnWidth: 80,\n    defaultFormatter: defaultFormatter,\n    editable: false,\n    editorFactory: null,\n    editorLock: GlobalEditorLock,\n    enableAddRow: false,\n    enableAsyncPostRender: false,\n    enableAsyncPostRenderCleanup: false,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    enableTabKeyNavigation: true,\n    enableTextSelectionOnCells: false,\n    explicitInitialization: false,\n    footerRowHeight: 32,\n    forceFitColumns: false,\n    forceSyncScrolling: false,\n    formatterFactory: null,\n    frozenBottom: false,\n    frozenRow: -1,\n    fullWidthRows: false,\n    groupingPanel: false,\n    groupingPanelHeight: 34,\n    headerRowHeight: 32,\n    leaveSpaceForNewRows: false,\n    useLegacyUI: true,\n    minBuffer: 3,\n    multiColumnSort: false,\n    multiSelect: true,\n    renderAllCells: false,\n    rowHeight: 32,\n    selectedCellCssClass: \"selected\",\n    showCellSelection: true,\n    showColumnHeader: true,\n    showFooterRow: false,\n    showGroupingPanel: true,\n    showHeaderRow: false,\n    showTopPanel: false,\n    suppressActiveCellChangeOnEdit: false,\n    topPanelHeight: 25\n}\n", "import { NonDataRow, preClickClassName } from \"../core/base\";\nimport { Column, columnDefaults, ColumnSort, ItemMetadata } from \"./column\";\nimport { EditController, EditorLock } from \"../core/editlock\";\nimport { EditCommand, Editor } from \"./editor\";\nimport { Event, IEventData, EventData, keyCode } from \"../core/event\";\nimport type { CellStylesHash, ColumnFormatter, FormatterResult } from \"./formatting\";\nimport { addUiStateHover, adjustFrozenColumnCompat, attrEncode, CachedRow, disableSelection, getMaxSupportedCssHeight, getScrollBarDimensions, GoToResult, H, htmlEncode, PostProcessCleanupEntry, removeUiStateHover, simpleArrayEquals, sortToDesiredOrderAndKeepRest } from \"./internal\";\nimport { IPlugin, Position, RowCell, SelectionModel, ViewRange } from \"./types\";\nimport { ArgsCell, ArgsGrid, ArgsAddNewRow, ArgsEditorDestroy, ArgsCellEdit, ArgsColumnNode, ArgsCellChange, ArgsCssStyle, ArgsColumn, ArgsScroll, ArgsSelectedRowsChange, ArgsSort, ArgsValidationError } from \"./eventargs\";\nimport { GroupTotals } from \"../core/group\";\nimport { gridDefaults, GridOptions } from \"./gridoptions\";\nimport { Range } from \"../core/range\";\n\n\nexport class Grid<TItem = any> {\n\n    private _absoluteColMinWidth: number;\n    private _activeCanvasNode: HTMLElement;\n    private _activeCell: number;\n    private _activeCellNode: HTMLElement = null;\n    private _activePosX: number;\n    private _activeRow: number;\n    private _activeViewportNode: HTMLElement;\n    private _actualFrozenRow: number = -1;\n    private _canvasWidth: number;\n    private _canvasWidthL: number;\n    private _canvasWidthR: number;\n    private _cellCssClasses: CellStylesHash = {};\n    private _cellHeightDiff: number = 0;\n    private _cellWidthDiff: number = 0;\n    private _colById: { [key: string]: number };\n    private _colDefaults: Partial<Column>;\n    private _colLeft: number[] = [];\n    private _colRight: number[] = [];\n    private _cols: Column<TItem>[];\n    private _columnCssRulesL: any;\n    private _columnCssRulesR: any;\n    private _currentEditor: Editor = null;\n    private _data: any;\n    private _editController: EditController;\n    private _frozenCols: number;\n    private _footerRowH: number = 0;\n    private _frozenRowsHeight: number = 0;\n    private _groupingPanelH: number = 0;\n    private _hasFrozenRows = false;\n    private _headerColumnWidthDiff: number = 0;\n    private _headerRowH: number = 0;\n    private _headersWidthL: number;\n    private _headersWidthR: number;\n    private _hEditorLoader: number = null;\n    private _hPostRender: number = null;\n    private _hPostRenderCleanup: number = null;\n    private _hRender: number = null;\n    private _ignoreScrollUntil: number = 0;\n    private _initColById: { [key: string]: number };\n    private _initCols: Column<TItem>[];\n    private _initialized = false;\n    private _jumpinessCoefficient: number;\n    private _numberOfPages: number;\n    private _numVisibleRows: number = 0;\n    private _options: GridOptions<TItem>;\n    private _page: number = 0;\n    private _pageHeight: number;\n    private _pageOffset: number = 0;\n    private _pagingActive: boolean = false;\n    private _pagingIsLastPage: boolean = false;\n    private _paneBottomH: number = 0;\n    private _paneTopH: number = 0;\n    private _plugins: IPlugin[] = [];\n    private _postProcessCleanupQueue: PostProcessCleanupEntry[] = [];\n    private _postProcessedRows: any = {};\n    private _postProcessFromRow: number = null;\n    private _postProcessGroupId: number = 0;\n    private _postProcessToRow: number = null;\n    private _realScrollHeight: number;\n    private _rowsCache: { [key: number]: CachedRow } = {};\n    private _rtl = false;\n    private _rtlE = 'right';\n    private _rtlS = 'left';\n    private _scrollDims: { width: number, height: number };\n    private _scrollLeft: number = 0;\n    private _scrollLeftPrev: number = 0;\n    private _scrolLLeftRendered: number = 0;\n    private _scrollTop: number = 0;\n    private _scrollTopPrev: number = 0;\n    private _scrollTopRendered: number = 0;\n    private _selectedRows: number[] = [];\n    private _selectionModel: SelectionModel;\n    private _serializedEditorValue: any;\n    private _sortColumns: ColumnSort[] = [];\n    private _styleNode: HTMLStyleElement;\n    private _stylesheet: any;\n    private _tabbingDirection: number = 1;\n    private _topPanelH: number = 0;\n    private _uid: string = \"sleekgrid_\" + Math.round(1000000 * Math.random());\n    private _viewportH: number;\n    private _viewportHasHScroll: boolean;\n    private _viewportHasVScroll: boolean;\n    private _viewportTopH: number = 0;\n    private _viewportW: number;\n    private _virtualHeight: number;\n    private _vScrollDir: number = 1;\n\n    private _boundAncestorScroll: HTMLElement[] = [];\n    private _canvasBottomL: HTMLDivElement;\n    private _canvasBottomR: HTMLDivElement;\n    private _canvasTopL: HTMLDivElement;\n    private _canvasTopR: HTMLDivElement;\n    private _container: HTMLElement;\n    private _focusSink1: HTMLDivElement;\n    private _focusSink2: HTMLDivElement;\n    private _groupingPanel: HTMLDivElement;\n    private _headerColsL: HTMLDivElement;\n    private _headerColsR: HTMLDivElement;\n    private _headerRowColsL: HTMLDivElement;\n    private _headerRowColsR: HTMLDivElement;\n    private _headerRowSpacerL: HTMLDivElement;\n    private _headerRowSpacerR: HTMLDivElement;\n    private _footerRowColsL: HTMLDivElement;\n    private _footerRowColsR: HTMLDivElement;\n    private _footerRowSpacerL: HTMLDivElement;\n    private _footerRowSpacerR: HTMLDivElement;\n    private _paneBottomL: HTMLDivElement;\n    private _paneBottomR: HTMLDivElement;\n    private _paneHeaderL: HTMLDivElement;\n    private _paneHeaderR: HTMLDivElement;\n    private _paneTopL: HTMLDivElement;\n    private _paneTopR: HTMLDivElement;\n    private _scrollContainerX: HTMLDivElement;\n    private _scrollContainerY: HTMLDivElement;\n    private _topPanelL: HTMLDivElement;\n    private _topPanelR: HTMLDivElement;\n    private _viewportBottomL: HTMLDivElement;\n    private _viewportBottomR: HTMLDivElement;\n    private _viewportTopL: HTMLDivElement;\n    private _viewportTopR: HTMLDivElement;\n\n    readonly onActiveCellChanged = new Event<ArgsCell>();\n    readonly onActiveCellPositionChanged = new Event<ArgsGrid>();\n    readonly onAddNewRow = new Event<ArgsAddNewRow>();\n    readonly onBeforeCellEditorDestroy = new Event<ArgsEditorDestroy>();\n    readonly onBeforeDestroy = new Event<ArgsGrid>();\n    readonly onBeforeEditCell = new Event<ArgsCellEdit>();\n    readonly onBeforeFooterRowCellDestroy = new Event<ArgsColumnNode>();\n    readonly onBeforeHeaderCellDestroy = new Event<ArgsColumnNode>();\n    readonly onBeforeHeaderRowCellDestroy = new Event<ArgsColumnNode>();\n    readonly onCellChange = new Event<ArgsCellChange>();\n    readonly onCellCssStylesChanged = new Event<ArgsCssStyle>();\n    readonly onClick = new Event<ArgsCell, JQueryMouseEventObject>();\n    readonly onColumnsReordered = new Event<ArgsGrid>();\n    readonly onColumnsResized = new Event<ArgsGrid>();\n    readonly onContextMenu = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDblClick = new Event<ArgsCell, JQueryMouseEventObject>();\n    readonly onDrag = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragEnd = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragInit = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragStart = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onFooterRowCellRendered = new Event<ArgsColumnNode>();\n    readonly onHeaderCellRendered = new Event<ArgsColumnNode>();\n    readonly onHeaderClick = new Event<ArgsColumn>();\n    readonly onHeaderContextMenu = new Event<ArgsColumn>();\n    readonly onHeaderMouseEnter = new Event<ArgsColumn, MouseEvent>();\n    readonly onHeaderMouseLeave = new Event<ArgsColumn, MouseEvent>();\n    readonly onHeaderRowCellRendered = new Event<ArgsColumnNode>();\n    readonly onKeyDown = new Event<ArgsCell, JQueryKeyEventObject>();\n    readonly onMouseEnter = new Event<ArgsGrid, MouseEvent>();\n    readonly onMouseLeave = new Event<ArgsGrid, MouseEvent>();\n    readonly onScroll = new Event<ArgsScroll>();\n    readonly onSelectedRowsChanged = new Event<ArgsSelectedRowsChange>();\n    readonly onSort = new Event<ArgsSort>();\n    readonly onValidationError = new Event<ArgsValidationError>();\n    readonly onViewportChanged = new Event<ArgsGrid>();\n\n    constructor(container: JQuery | HTMLElement, data: any, columns: Column<TItem>[], options: GridOptions<TItem>) {\n\n        this._data = data;\n\n        // settings\n\n\n        this._colDefaults = Object.assign({}, columnDefaults);\n\n        //////////////////////////////////////////////////////////////////////////////////////////////\n        // Initialization\n\n        if (typeof jQuery !== \"undefined\" && container instanceof jQuery)\n            this._container = container[0];\n        else if (container instanceof Element)\n            this._container = container as HTMLElement;\n        else if (typeof container === \"string\")\n            this._container = document.querySelector(container);\n\n        if (this._container == null) {\n            throw new Error(\"SleekGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n        }\n\n        this._container.classList.add('slick-container');\n\n        this._rtl = document.body.classList.contains('rtl') || (typeof getComputedStyle != \"undefined\" &&\n            getComputedStyle(this._container).direction == 'rtl');\n        if (this._rtl) {\n            this._rtlS = 'right';\n            this._rtlE = 'left';\n        }\n\n        if (options?.createPreHeaderPanel) {\n            // for compat, as draggable grouping plugin expects preHeaderPanel for grouping\n            if (options.groupingPanel == null)\n                options.groupingPanel = true;\n            if (options.groupingPanelHeight == null && options.preHeaderPanelHeight != null)\n                options.groupingPanelHeight = options.preHeaderPanelHeight;\n            if (options.showGroupingPanel == null && options.showPreHeaderPanel != null)\n                options.showGroupingPanel = options.showPreHeaderPanel;\n        }\n\n        options = Object.assign({}, gridDefaults, options);\n        this._options = options;\n        this.validateAndEnforceOptions();\n        this._colDefaults.width = options.defaultColumnWidth;\n\n        adjustFrozenColumnCompat(columns, this._options);\n        this.setInitialCols(columns);\n\n        this._editController = {\n            \"commitCurrentEdit\": this.commitCurrentEdit.bind(this),\n            \"cancelCurrentEdit\": this.cancelCurrentEdit.bind(this)\n        };\n\n        if (typeof $ !== \"undefined\")\n            $(this._container).empty();\n        else\n            this._container.innerHTML = '';\n\n        this._container.style.overflow = \"hidden\";\n        this._container.style.outline = \"0\";\n        this._container.classList.add(this._uid);\n\n        if (this._options.useLegacyUI)\n            this._container.classList.add(\"ui-widget\");\n\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test(getComputedStyle(this._container).position)) {\n            this._container.style.position = \"relative\";\n        }\n\n        this._container.appendChild(this._focusSink1 = H('div', {\n            class: \"slick-focus-sink\",\n            hideFocus: '',\n            style: 'position:fixed;width:0!important;height:0!important;top:0;left:0;outline:0!important;',\n            tabIndex: '0'\n        }));\n\n        if (options.groupingPanel) {\n            this._container.appendChild(this._groupingPanel = H('div', {\n                class: \"slick-grouping-panel\",\n                style: \"overflow:hidden; position:relative;\" + (!options.showGroupingPanel ? \" display: none\" : \"\")\n            }));\n\n            if (options.createPreHeaderPanel) {\n                this._groupingPanel.appendChild(H('div', { class: 'slick-preheader-panel'}));\n            }\n        }\n\n        const uisd = this._options.useLegacyUI ? ' ui-state-default' : '';\n\n        var spacerW = this.getCanvasWidth() + (this._scrollDims = getScrollBarDimensions()).width + 'px';\n\n        // -- PANE HEADER LEFT\n        this._paneHeaderL = H('div', { class: \"slick-pane slick-pane-header slick-pane-left\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-left' + uisd, style: !options.showColumnHeader && 'display: none' },\n                this._headerColsL = H('div', { class: 'slick-header-columns slick-header-columns-left', style: this._rtlS + ':-1000px' })));\n\n        // -- PANE HEADER RIGHT\n        this._paneHeaderR = H('div', { class: \"slick-pane slick-pane-header slick-pane-right\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-right' + uisd, style: !options.showColumnHeader && 'display: none' },\n                this._headerColsR = H('div', { class: 'slick-header-columns slick-header-columns-right', style: this._rtlS + ':-1000px' })));\n\n        // -- PANE TOP LEFT (headerrow left + top panel left + viewport top left + footer row right)\n        var headerRowL = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' },\n            this._headerRowColsL = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-left' }),\n            this._headerRowSpacerL = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        var topPanelLS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' },\n            this._topPanelL = H('div', { class: 'slick-top-panel', style: 'width: 10000px' }));\n\n        this._viewportTopL = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-left\", tabIndex: \"0\", hideFocus: '' },\n            this._canvasTopL = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-left\", tabIndex: \"0\", hideFocus: '' }));\n\n        var footerRowL = H('div', { class: 'slick-footerrow' + uisd, style: !options.showFooterRow && 'display: none' },\n            this._footerRowColsL = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-left' }),\n            this._footerRowSpacerL = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        this._paneTopL = H('div', { class: \"slick-pane slick-pane-top slick-pane-left\", tabIndex: \"0\" },\n            headerRowL, topPanelLS, this._viewportTopL, footerRowL);\n\n        // -- PANE TOP RIGHT (headerrow right + top panel right + viewport top right + footer row right)\n        var headerRowR = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' },\n            this._headerRowColsR = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-right' }),\n            this._headerRowSpacerR = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        var topPanelRS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' },\n            this._topPanelR = H('div', { class: 'slick-top-panel', style: 'width: 10000px' }))\n\n        this._viewportTopR = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-right\", tabIndex: \"0\", hideFocus: '' },\n            this._canvasTopR = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-right\", tabIndex: \"0\", hideFocus: '' }));\n\n        var footerRowR = H('div', { class: 'slick-footer-row' + uisd, style: !options.showFooterRow && 'display: none' },\n            this._footerRowColsR = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-right' }),\n            this._footerRowSpacerR = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        this._paneTopR = H('div', { class: \"slick-pane slick-pane-top slick-pane-right\", tabIndex: \"0\" },\n            headerRowR, topPanelRS, this._viewportTopR, footerRowR);\n\n        // -- PANE BOTTOM LEFT\n        this._paneBottomL = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-left\", tabIndex: \"0\" },\n            this._viewportBottomL = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-left\", tabIndex: \"0\", hideFocus: '' },\n                this._canvasBottomL = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-left\", tabIndex: \"0\", hideFocus: '' })));\n\n        this._paneBottomR = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-right\", tabIndex: \"0\" },\n            this._viewportBottomR = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-right\", tabIndex: \"0\", hideFocus: '' }),\n            this._canvasBottomR = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-right\", tabIndex: \"0\", hideFocus: '' }));\n\n        this._container.append(\n            this._paneHeaderL,\n            this._paneHeaderR,\n            this._paneTopL,\n            this._paneTopR,\n            this._paneBottomL,\n            this._paneBottomR,\n            this._focusSink2 = this._focusSink1.cloneNode() as HTMLDivElement);\n\n        if (options.viewportClass)\n            this.getViewports().forEach(vp => vp.classList.add(options.viewportClass,));\n\n        if (!options.explicitInitialization) {\n            this.init();\n        }\n\n        this.bindToData();\n    }\n\n    init(): void {\n        if (this._initialized)\n            return;\n\n        this._initialized = true;\n\n        this.getViewportWidth();\n        this.getViewportHeight();\n\n        // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n        // calculate the diff so we can set consistent sizes\n        this.measureCellPaddingAndBorder();\n\n         // disable all text selection in header (including input and textarea)\n        disableSelection(this._headerColsL);\n        disableSelection(this._headerColsR);\n\n        var viewports = this.getViewports();\n\n        if (typeof $ !== \"undefined\" && !this._options.enableTextSelectionOnCells) {\n            // disable text selection in grid cells except in input and textarea elements\n            // (this is IE-specific, because selectstart event will only fire in IE)\n            $(viewports).on(\"selectstart.ui\", function () {\n                return $(this).is(\"input,textarea\");\n            });\n        }\n\n        this.adjustFrozenRowOption();\n        this.setPaneVisibility();\n        this.setScroller();\n        this.setOverflow();\n\n        this.updateViewColLeftRight();\n        this.createColumnHeaders();\n        this.createColumnFooters();\n        this.setupColumnSort();\n        this.createCssRules();\n        this.resizeCanvas();\n        this.bindAncestorScrollEvents();\n\n        this._container.addEventListener(\"resize\", this.resizeCanvas);\n\n        viewports.forEach(vp => vp.addEventListener(\"scroll\", this.handleScroll.bind(this)));\n\n        if (typeof $ !== \"undefined\" && ($.fn as any).mousewheel && (this.hasFrozenColumns() || this._hasFrozenRows)) {\n            $(viewports).on(\"mousewheel\", this.handleMouseWheel.bind(this));\n        }\n\n        [this._headerColsL.parentElement, this._headerColsR.parentElement].forEach(hs => {\n            hs.addEventListener(\"contextmenu\", this.handleHeaderContextMenu.bind(this));\n            hs.addEventListener(\"click\", this.handleHeaderClick.bind(this));\n            hs.addEventListener(\"mouseenter\", e => (e.target as HTMLElement).closest(\".slick-header-column\") &&\n                this.handleHeaderMouseEnter(e));\n            hs.addEventListener(\"mouseleave\", e => (e.target as HTMLElement).closest(\".slick-header-column\") &&\n                this.handleHeaderMouseLeave(e));\n        });\n\n        this._headerRowColsL.parentElement.addEventListener('scroll', this.handleHeaderRowScroll);\n        this._headerRowColsR.parentElement.addEventListener('scroll', this.handleHeaderRowScroll);\n\n        this._footerRowColsL.parentElement.addEventListener('scroll', this.handleFooterRowScroll);\n        this._footerRowColsR.parentElement.addEventListener('scroll', this.handleFooterRowScroll);\n\n        [this._focusSink1, this._focusSink2].forEach(fs => fs.addEventListener(\"keydown\", this.handleKeyDown.bind(this)));\n\n        var canvases = Array.from(this.getCanvases());\n        canvases.forEach(canvas => {\n            canvas.addEventListener(\"keydown\", this.handleKeyDown.bind(this))\n            canvas.addEventListener(\"click\", this.handleClick.bind(this))\n            canvas.addEventListener(\"dblclick\", this.handleDblClick.bind(this))\n            canvas.addEventListener(\"contextmenu\", this.handleContextMenu.bind(this));\n        });\n\n        if (typeof $ !== \"undefined\" && ($.fn as any).drag) {\n            $(canvases)\n                .on(\"draginit\", this.handleDragInit.bind(this))\n                .on(\"dragstart\", { distance: 3 }, this.handleDragStart.bind(this))\n                .on(\"drag\", this.handleDrag.bind(this))\n                .on(\"dragend\", this.handleDragEnd.bind(this))\n        }\n\n        canvases.forEach(canvas => {\n            canvas.addEventListener(\"mouseenter\", e => (e.target as HTMLElement).closest(\".slick-cell\") &&\n                this.handleMouseEnter(e));\n            canvas.addEventListener(\"mouseleave\", e => (e.target as HTMLElement).closest(\".slick-cell\") &&\n                this.handleMouseLeave(e));\n        });\n\n        // Work around http://crbug.com/312427.\n        if (navigator.userAgent.toLowerCase().match(/webkit/) &&\n            navigator.userAgent.toLowerCase().match(/macintosh/) &&\n            typeof $ !== \"undefined\") {\n            $(canvases).on(\"mousewheel\", this.handleMouseWheel.bind(this));\n        }\n    }\n\n    private hasFrozenColumns(): boolean {\n        return this._frozenCols > 0;\n    }\n\n    registerPlugin(plugin: IPlugin): void {\n        this._plugins.unshift(plugin);\n        plugin.init(this);\n    }\n\n    unregisterPlugin(plugin: IPlugin): void {\n        for (var i = this._plugins.length; i >= 0; i--) {\n            if (this._plugins[i] === plugin) {\n                if (this._plugins[i].destroy) {\n                    this._plugins[i].destroy();\n                }\n                this._plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    getPluginByName(name: string): IPlugin {\n        for (var i = this._plugins.length - 1; i >= 0; i--) {\n            if (this._plugins[i].pluginName === name)\n                return this._plugins[i];\n        }\n    }\n\n    setSelectionModel(model: SelectionModel): void {\n        if (this._selectionModel) {\n            this._selectionModel.onSelectedRangesChanged.unsubscribe(this.handleSelectedRangesChanged);\n            if (this._selectionModel.destroy) {\n                this._selectionModel.destroy();\n            }\n        }\n\n        this._selectionModel = model;\n        if (this._selectionModel) {\n            this._selectionModel.init(this);\n            this._selectionModel.onSelectedRangesChanged.subscribe(this.handleSelectedRangesChanged);\n        }\n    }\n\n    getScrollBarDimensions(): { width: number; height: number; } {\n        return this._scrollDims;\n    }\n\n    getDisplayedScrollbarDimensions(): { width: number; height: number; } {\n        return {\n            width: this._viewportHasVScroll ? this._scrollDims.width : 0,\n            height: this._viewportHasHScroll ? this._scrollDims.height : 0\n        };\n    }\n\n    getAbsoluteColumnMinWidth() {\n        return this._absoluteColMinWidth;\n    }\n\n    getSelectionModel(): SelectionModel {\n        return this._selectionModel;\n    }\n\n    getCanvasNode(): HTMLDivElement {\n        return this._canvasTopL;\n    }\n\n    getCanvases(): JQuery {\n        var canvases = [this._canvasTopL, this._canvasTopR, this._canvasBottomL, this._canvasBottomR];\n        return typeof $ !== \"undefined\" ? $(canvases) : canvases as any;\n    }\n\n    getActiveCanvasNode(e?: IEventData): HTMLElement {\n        this.setActiveCanvasNode(e);\n        return this._activeCanvasNode;\n    }\n\n    setActiveCanvasNode(e?: IEventData): void {\n        if (e) {\n            this._activeCanvasNode = (e.target as HTMLElement).closest('.grid-canvas');\n        }\n    }\n\n    getViewportNode(): HTMLDivElement {\n        return this._viewportTopL;\n    }\n\n    private getViewports(): HTMLDivElement[] {\n        return [this._viewportTopL, this._viewportTopR, this._viewportBottomL, this._viewportBottomR];\n    }\n\n    getActiveViewportNode(e?: IEventData): HTMLElement {\n        this.setActiveViewportNode(e);\n        return this._activeViewportNode;\n    }\n\n    setActiveViewportNode(e?: IEventData) {\n        if (e) {\n            this._activeViewportNode = (e.target as HTMLElement).closest('.slick-viewport');\n        }\n    }\n\n    private calcHeaderWidths(): void {\n        this._headersWidthL = this._headersWidthR = 0;\n\n        var scrollWidth = this._scrollDims.width;\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0, ii = cols.length; i < ii; i++) {\n            var width = cols[i].width;\n\n            if (frozenCols > 0 && i >= frozenCols) {\n                this._headersWidthR += width;\n            } else {\n                this._headersWidthL += width;\n            }\n        }\n\n        if (frozenCols > 0) {\n            this._headersWidthL = this._headersWidthL + 1000;\n\n            this._headersWidthR = Math.max(this._headersWidthR, this._viewportW) + this._headersWidthL;\n            this._headersWidthR += scrollWidth;\n        } else {\n            this._headersWidthL += scrollWidth;\n            this._headersWidthL = Math.max(this._headersWidthL, this._viewportW) + 1000;\n        }\n    }\n\n    private getCanvasWidth(): number {\n        var availableWidth = this._viewportHasVScroll ? this._viewportW - this._scrollDims.width : this._viewportW;\n\n        var cols = this._cols, i = cols.length, frozenCols = this._frozenCols;\n\n        this._canvasWidthL = this._canvasWidthR = 0;\n\n        while (i--) {\n            if (frozenCols > 0 && i >= frozenCols) {\n                this._canvasWidthR += cols[i].width;\n            } else {\n                this._canvasWidthL += cols[i].width;\n            }\n        }\n\n        var totalRowWidth = this._canvasWidthL + this._canvasWidthR;\n\n        return this._options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n    }\n\n    private updateCanvasWidth(forceColumnWidthsUpdate?: boolean): void {\n        var oldCanvasWidth = this._canvasWidth;\n        var oldCanvasWidthL = this._canvasWidthL;\n        var oldCanvasWidthR = this._canvasWidthR;\n        var widthChanged;\n        this._canvasWidth = this.getCanvasWidth();\n        var scrollWidth = this._scrollDims.width;\n\n        widthChanged = this._canvasWidth !== oldCanvasWidth || this._canvasWidthL !== oldCanvasWidthL || this._canvasWidthR !== oldCanvasWidthR;\n\n        if (widthChanged || this.hasFrozenColumns() || this._hasFrozenRows) {\n            var canvasWidthL = this._canvasWidthL + 'px'\n            var canvasWidthR = this._canvasWidthR + 'px';\n\n            this._canvasTopL.style.width = canvasWidthL;\n\n            this.calcHeaderWidths();\n            this._headerColsL.style.width = this._headersWidthL + 'px';\n            this._headerColsR.style.width = this._headersWidthR + 'px';\n\n            if (this._groupingPanel) {\n                this._groupingPanel.style.width = this._canvasWidth + 'px';\n            }\n\n            if (this.hasFrozenColumns()) {\n                var viewportMinus = (this._viewportW - this._canvasWidthL) + 'px';\n\n                this._canvasTopR.style.width = canvasWidthR;\n                this._paneHeaderL.style.width = canvasWidthL;\n                this._paneHeaderR.style[this._rtlS] = canvasWidthL;\n                this._paneHeaderR.style.width = viewportMinus;\n\n                this._paneTopL.style.width = canvasWidthL;\n                this._paneTopR.style[this._rtlS] = canvasWidthL;\n                this._paneTopR.style.width = viewportMinus;\n\n                this._headerRowColsL.style.width = canvasWidthL;\n                this._headerRowColsL.parentElement.style.width = canvasWidthL;\n                this._headerRowColsR.style.width = canvasWidthR;\n                this._headerRowColsR.parentElement.style.width = viewportMinus;\n\n                this._footerRowColsL.style.width = canvasWidthL;\n                this._footerRowColsL.parentElement.style.width = canvasWidthL;\n                this._footerRowColsR.style.width = canvasWidthR;\n                this._footerRowColsR.parentElement.style.width = viewportMinus;\n\n                this._viewportTopL.style.width = canvasWidthL;\n                this._viewportTopR.style.width = viewportMinus;\n\n                if (this._hasFrozenRows) {\n                    this._paneBottomL.style.width = canvasWidthL;\n                    this._paneBottomR.style[this._rtlS] = canvasWidthL;\n\n                    this._viewportBottomL.style.width = canvasWidthL;\n                    this._viewportBottomR.style.width = viewportMinus;\n\n                    this._canvasBottomL.style.width = canvasWidthL;\n                    this._canvasBottomR.style.width = canvasWidthR;\n                }\n            } else {\n                this._paneHeaderL.style.width = '100%';\n                this._paneTopL.style.width = '100%';\n                this._headerRowColsL.parentElement.style.width = '100%';\n                this._headerRowColsL.style.width = this._canvasWidth + 'px';\n                this._footerRowColsL.parentElement.style.width = '100%';\n                this._footerRowColsL.style.width = this._canvasWidth + 'px';\n                this._viewportTopL.style.width = '100%';\n\n                if (this._hasFrozenRows) {\n                    this._viewportBottomL.style.width = '100%';\n                    this._canvasBottomL.style.width = canvasWidthL;\n                }\n            }\n\n            this._viewportHasHScroll = (this._canvasWidth > this._viewportW - scrollWidth);\n        }\n\n        var w = (this._canvasWidth + (this._viewportHasVScroll ? scrollWidth : 0)) + 'px';\n\n        this._headerRowSpacerL.style.width = w;\n        this._headerRowSpacerR.style.width = w;\n        this._footerRowSpacerL.style.width = w;\n        this._footerRowSpacerR.style.width = w;\n\n        if (widthChanged || forceColumnWidthsUpdate) {\n            this.applyColumnWidths();\n        }\n    }\n\n    private bindAncestorScrollEvents(): void {\n        var elem: HTMLElement = (this._hasFrozenRows && !this._options.frozenBottom) ? this._canvasBottomL : this._canvasTopL;\n        while ((elem = elem.parentNode as HTMLElement) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == this._viewportTopL || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                elem.addEventListener('scroll', this.handleActiveCellPositionChange);\n                this._boundAncestorScroll.push(elem);\n            }\n        }\n    }\n\n    private unbindAncestorScrollEvents(): void {\n        if (this._boundAncestorScroll) {\n            for (var x of this._boundAncestorScroll)\n                x.removeEventListener('scroll', this.handleActiveCellPositionChange);\n        }\n        this._boundAncestorScroll = [];\n    }\n\n    updateColumnHeader(columnId: string, title?: string, toolTip?: string): void {\n        if (!this._initialized) { return; }\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n\n        var columnDef = this._cols[idx];\n        var header = ((this._frozenCols > 0 && idx >= this._frozenCols) ? this._headerColsR.children.item(idx - this._frozenCols) : this._headerColsL.children.item(idx)) as HTMLElement;\n        if (!header)\n            return;\n\n        if (title !== undefined) {\n            columnDef.name = title;\n        }\n        if (toolTip !== undefined) {\n            columnDef.toolTip = toolTip;\n        }\n\n        this.trigger(this.onBeforeHeaderCellDestroy, {\n            node: header,\n            column: columnDef\n        });\n\n        header.title = toolTip || \"\";\n        var child = header.firstElementChild;\n        child && (child.innerHTML = title);\n\n        this.trigger(this.onHeaderCellRendered, {\n            node: header,\n            column: columnDef\n        });\n    }\n\n    getHeader(): HTMLDivElement {\n        return this._headerColsL;\n    }\n\n    getHeaderColumn(columnIdOrIdx: string | number): HTMLDivElement {\n        var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : this.getColumnIndex(columnIdOrIdx));\n        if (idx == null)\n            return null;\n\n        return (this._frozenCols > 0 && idx >= this._frozenCols ? this._headerColsR.children.item(idx - this._frozenCols) : this._headerColsL.children.item(idx)) as HTMLDivElement;\n    }\n\n    getGroupingPanel(): HTMLDivElement {\n        return this._groupingPanel;\n    }\n\n    getPreHeaderPanel(): HTMLDivElement {\n        return this._groupingPanel?.querySelector('.slick-preheader-panel');\n    }\n\n    getHeaderRow(): HTMLDivElement {\n        return this._headerRowColsL;\n    }\n\n    getHeaderRowColumn(columnId: string): HTMLElement {\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null)\n            return;\n\n        var headerRowTarget: HTMLDivElement, frozenCols = this._frozenCols;\n\n        if (frozenCols <= 0 || idx < frozenCols) {\n            headerRowTarget = this._headerRowColsL;\n        }\n        else {\n            headerRowTarget = this._headerRowColsR;\n            idx -= frozenCols;\n        }\n\n        return headerRowTarget.childNodes.item(idx) as HTMLElement;\n    }\n\n    getFooterRow(): HTMLDivElement {\n        return this._footerRowColsL;\n    }\n\n    getFooterRowColumn(columnId: string): HTMLElement {\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null)\n            return null;\n\n        var footerRowTarget: HTMLDivElement, frozenCols = this._frozenCols;\n\n        if (frozenCols <= 0 || idx < frozenCols) {\n            footerRowTarget = this._footerRowColsL;\n        }\n        else {\n            footerRowTarget = this._footerRowColsR;\n            idx -= frozenCols;\n        }\n\n        return footerRowTarget.childNodes.item(idx) as HTMLElement;\n    }\n\n    private createColumnFooters(): void {\n        [this._footerRowColsL, this._footerRowColsR].forEach(frc => frc.querySelectorAll(\".slick-footerrow-column\")\n            .forEach((el) => {\n                var columnDef = this.getColumnFromNode(el);\n                if (columnDef) {\n                    this.trigger(this.onBeforeFooterRowCellDestroy, {\n                        node: el as HTMLElement,\n                        column: columnDef\n                    });\n                }\n            }));\n\n        const _$ = typeof $ !== \"undefined\";\n\n        if (_$) {\n            $(this._footerRowColsL).empty();\n            $(this._footerRowColsR).empty();\n        }\n        else {\n            this._footerRowColsL.innerHTML = '';\n            this._footerRowColsR.innerHTML = '';\n        }\n\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var footerRowCell = H(\"div\", { class: \"slick-footerrow-column l\" + i + \" r\" + i + (this._options.useLegacyUI ? ' ui-state-default' : '') });\n            footerRowCell.dataset.c = i.toString();\n            _$ && $(footerRowCell).data(\"column\", m);\n\n            if (m.footerCssClass)\n                footerRowCell.classList.add(m.footerCssClass);\n            else if (m.cssClass)\n                footerRowCell.classList.add(m.cssClass);\n\n            (frozenCols > 0 && i >= frozenCols ? this._footerRowColsR : this._footerRowColsL).appendChild(footerRowCell);\n\n            this.trigger(this.onFooterRowCellRendered, {\n                node: footerRowCell,\n                column: m\n            });\n        }\n    }\n\n    private formatGroupTotal(total: GroupTotals, columnDef: Column<TItem>): any {\n        if (columnDef.formatter != null) {\n            var item = new NonDataRow();\n            item[columnDef.field] = total;\n            try {\n                return columnDef.formatter(-1, -1, total, columnDef, item as any);\n            }\n            catch (e) {\n            }\n        }\n\n        //@ts-ignore\n        if (typeof total == \"number\" && typeof Q !== \"undefined\" && Q.formatNumber) {\n            if ((columnDef as any).sourceItem && (columnDef as any).sourceItem.displayFormat) {\n                //@ts-ignore\n                return Q.formatNumber(total, columnDef.sourceItem.displayFormat);\n            }\n            else\n                //@ts-ignore\n                return Q.formatNumber(total, \"#,##0.##\");\n        }\n        else\n            return htmlEncode(total?.toString());\n    }\n\n    private groupTotalText(totals: GroupTotals, columnDef: Column<TItem>, key: string): string {\n        var ltKey = (key.substring(0, 1).toUpperCase() + key.substring(1));\n        //@ts-ignore\n        var text = (typeof Q !== \"undefined\" && Q.tryGetText && Q.tryGetText(ltKey)) || ltKey;\n\n        var total = totals[key][columnDef.field];\n        total = this.formatGroupTotal(total, columnDef);\n\n        return \"<span class='aggregate agg-\" + key + \"'  title='\" + text + \"'>\" +\n            total +\n            \"</span>\";\n    }\n\n    private groupTotalsFormatter(totals: GroupTotals, columnDef: Column<TItem>): string {\n        if (!totals || !columnDef)\n            return \"\";\n\n        var text: string = null;\n        var self = this;\n\n        [\"sum\", \"avg\", \"min\", \"max\", \"cnt\"].forEach(function (key) {\n            if (text == null && totals[key] && totals[key][columnDef.field] != null) {\n                text = self.groupTotalText(totals, columnDef, key);\n                return false;\n            }\n        });\n\n        return text || \"\";\n    }\n\n    private createColumnHeaders(): void {\n        [this._headerColsL, this._headerColsR].forEach(hc => hc.querySelectorAll(\".slick-header-column\")\n            .forEach((el) => {\n                var columnDef = this.getColumnFromNode(el);\n                if (columnDef) {\n                    this.trigger(this.onBeforeHeaderCellDestroy, {\n                        node: el as HTMLElement,\n                        column: columnDef\n                    });\n                }\n            }));\n\n        const _$ = typeof $ !== \"undefined\";\n        if (_$) {\n            $(this._headerColsL).empty();\n            $(this._headerColsR).empty();\n        }\n        else {\n            this._headerColsL.innerHTML = '';\n            this._headerColsR.innerHTML = '';\n        }\n\n        this.calcHeaderWidths();\n\n        this._headerColsL.style.width = this._headersWidthL + 'px';\n        this._headerColsR.style.width = this._headersWidthR + 'px';\n\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var headerTarget = frozenCols > 0 && i >= frozenCols ? this._headerColsR : this._headerColsL;\n\n            var name = document.createElement(\"span\");\n            name.className = \"slick-column-name\";\n            if (m.nameIsHtml)\n                name.innerHTML = m.name;\n            else\n                name.innerText = m.name;\n            var header = H(\"div\", {\n                class: \"slick-header-column\" + (this._options.useLegacyUI ? \" ui-state-default \" : \"\"),\n                id: \"\" + this._uid + m.id,\n                title: m.toolTip || \"\",\n                style: \"width: \" + (m.width - this._headerColumnWidthDiff) + \"px\"\n            }, name);\n\n            header.dataset.c = i.toString();\n            _$ && $(header).data(\"column\", m);\n\n            m.headerCssClass && header.classList.add(m.headerCssClass);\n\n            i < frozenCols && header.classList.add(\"frozen\");\n\n            headerTarget.appendChild(header);\n\n            if ((this._options.enableColumnReorder || m.sortable) && this._options.useLegacyUI) {\n                header.addEventListener('mouseenter', addUiStateHover);\n                header.addEventListener('mouseleave', removeUiStateHover);\n            }\n\n            if (m.sortable) {\n                header.classList.add(\"slick-header-sortable\");\n                header.appendChild(H(\"span\", { class: \"slick-sort-indicator\" }));\n            }\n\n            this.trigger(this.onHeaderCellRendered, {\n                node: header,\n                column: m\n            });\n\n            if (this._options.showHeaderRow) {\n                var headerRowTarget = frozenCols > 0 && i >= frozenCols ? this._headerRowColsR : this._headerRowColsL;\n\n                var headerRowCell = H(\"div\", { class: \"slick-headerrow-column l\" + i + \" r\" + i + (this._options.useLegacyUI ? \" ui-state-default\" : \"\") });\n                headerRowCell.dataset.c = i.toString();\n                _$ && $(headerRowCell).data(\"column\", m);\n                headerRowTarget.appendChild(headerRowCell);\n\n                this.trigger(this.onHeaderRowCellRendered, {\n                    node: headerRowCell,\n                    column: m\n                });\n            }\n        }\n\n        this.setSortColumns(this._sortColumns);\n        this.setupColumnResize();\n        if (this._options.enableColumnReorder)\n            this.setupColumnReorder();\n    }\n\n    private setupColumnSort(): void {\n        [this._headerColsL, this._headerColsR].forEach(el => el.addEventListener(\"click\", e => {\n\n            var tgt = e.target as HTMLElement;\n            if (tgt.classList.contains(\"slick-resizable-handle\")) {\n                return;\n            }\n\n            var colNode = tgt.closest(\".slick-header-column\");\n            if (!colNode) {\n                return;\n            }\n\n            var column = this.getColumnFromNode(colNode);\n            if (column.sortable) {\n                if (!this.getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n\n                var sortOpts = null;\n                var i = 0;\n                for (; i < this._sortColumns.length; i++) {\n                    if (this._sortColumns[i].columnId == column.id) {\n                        sortOpts = this._sortColumns[i];\n                        sortOpts.sortAsc = !sortOpts.sortAsc;\n                        break;\n                    }\n                }\n\n                if (e.metaKey && this._options.multiColumnSort) {\n                    if (sortOpts) {\n                        this._sortColumns.splice(i, 1);\n                    }\n                }\n                else {\n                    if ((!e.shiftKey && !e.metaKey) || !this._options.multiColumnSort) {\n                        this._sortColumns = [];\n                    }\n\n                    if (!sortOpts) {\n                        sortOpts = { columnId: column.id, sortAsc: column.defaultSortAsc };\n                        this._sortColumns.push(sortOpts);\n                    } else if (this._sortColumns.length == 0) {\n                        this._sortColumns.push(sortOpts);\n                    }\n                }\n\n                this.setSortColumns(this._sortColumns);\n\n                if (!this._options.multiColumnSort) {\n                    this.trigger(this.onSort, {\n                        multiColumnSort: false,\n                        sortCol: column,\n                        sortAsc: sortOpts.sortAsc\n                    }, e);\n                } else {\n                    var cols = this._initCols;\n                    this.trigger(this.onSort, {\n                        multiColumnSort: true,\n                        sortCols: this._sortColumns.map(col => ({ sortCol: cols[this.getInitialColumnIndex(col.columnId)], sortAsc: col.sortAsc }))\n                    }, e);\n                }\n            }\n        }));\n    }\n\n    private setupColumnReorder(): void {\n        ($([this._headerColsL, this._headerColsR]).filter(\":ui-sortable\") as any).sortable(\"destroy\");\n        var columnScrollTimer: number = null;\n\n        var scrollColumnsRight = () => {\n            this._scrollContainerX.scrollLeft = this._scrollContainerX.scrollLeft + 10;\n        }\n\n        var scrollColumnsLeft = () => {\n            this._scrollContainerX.scrollLeft = this._scrollContainerX.scrollLeft - 10;\n        }\n\n        var canDragScroll: boolean;\n\n        var hasGrouping = this._options.groupingPanel;\n        ($([this._headerColsL, this._headerColsR]) as any).sortable({\n            containment: hasGrouping ? undefined : \"parent\",\n            distance: 3,\n            axis: hasGrouping ? undefined : \"x\",\n            cursor: \"default\",\n            tolerance: \"intersection\",\n            helper: \"clone\",\n            placeholder: \"slick-sortable-placeholder\" + (this._options.useLegacyUI ? \" ui-state-default\" : \"\") + \" slick-header-column\",\n            forcePlaceholderSize: hasGrouping ? true : undefined,\n            appendTo: hasGrouping ? \"body\" : undefined,\n            start: (_: any, ui: any) => {\n                ui.placeholder.width(ui.helper.outerWidth() - this._headerColumnWidthDiff);\n                canDragScroll = !this.hasFrozenColumns() ||\n                    (ui.placeholder.offset()[this._rtlS] + Math.round(ui.placeholder.width())) > $(this._scrollContainerX).offset()[this._rtlS];\n                $(ui.helper).addClass(\"slick-header-column-active\");\n            },\n            beforeStop: (_: any, ui: any) => {\n                $(ui.helper).removeClass(\"slick-header-column-active\");\n                if (hasGrouping) {\n                    var $headerDraggableGroupBy = $(this.getGroupingPanel());\n                    var hasDroppedColumn = $headerDraggableGroupBy\n                        .find(\".slick-dropped-grouping\").length;\n                    if (hasDroppedColumn > 0) {\n                        $headerDraggableGroupBy.find(\".slick-dropped-placeholder\").hide();\n                        $headerDraggableGroupBy.find(\".slick-dropped-grouping\").show();\n                    }\n                }\n            },\n            sort: (e: JQueryEventObject) => {\n                if (canDragScroll && (e.originalEvent as any).pageX > this._container.clientWidth) {\n                    if (!(columnScrollTimer)) {\n                        columnScrollTimer = setInterval(\n                            scrollColumnsRight, 100);\n                    }\n                } else if (canDragScroll && (e.originalEvent as any).pageX < $(this._scrollContainerX).offset().left) {\n                    if (!(columnScrollTimer)) {\n                        columnScrollTimer = setInterval(\n                            scrollColumnsLeft, 100);\n                    }\n                } else {\n                    clearInterval(columnScrollTimer);\n                    columnScrollTimer = null;\n                }\n            },\n            stop: (e: any) => {\n                var cancel = false;\n                clearInterval(columnScrollTimer);\n                columnScrollTimer = null;\n\n                if (cancel || !this.getEditorLock().commitCurrentEdit()) {\n                    ($(e.target) as any).sortable(\"cancel\");\n                    return;\n                }\n\n                ;\n                var reorderedCols = sortToDesiredOrderAndKeepRest(this._initCols,\n                    (this._headerColsL as any).sortable(\"toArray\").map((x: string) => x.substring(this._uid.length)));\n\n                reorderedCols = sortToDesiredOrderAndKeepRest(reorderedCols,\n                    (this._headerColsR as any).sortable(\"toArray\").map((x: string) => x.substring(this._uid.length)));\n\n                this.setColumns(reorderedCols);\n                this.trigger(this.onColumnsReordered, {});\n                e.stopPropagation();\n                this.setupColumnResize();\n            }\n        });\n    }\n\n    private setupColumnResize(): void {\n\n        var minPageX: number, pageX: number, maxPageX: number, cols = this._cols;\n        const columnElements = Array.from(this._headerColsL.children).concat(Array.from(this._headerColsR.children));\n\n        var j: number, k: number, c: Column<TItem>, pageX: number, minPageX: number, maxPageX: number, firstResizable: number, lastResizable: number, cols = this._cols;\n        var firstResizable: number, lastResizable: number;\n        columnElements.forEach((el, i) => {\n            el.querySelector(\"slick-resizable-handle\")?.remove();\n            if (cols[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n\n        if (firstResizable === undefined) {\n            return;\n        }\n\n        const noJQueryDrag = typeof $ === \"undefined\" || !$.fn || !($.fn as any).drag;\n        columnElements.forEach((el, i) => {\n\n            if (i < firstResizable || (this._options.forceFitColumns && i >= lastResizable)) {\n                return;\n            }\n\n            const handle = el.appendChild(document.createElement('div'));\n            handle.classList.add('slick-resizable-handle');\n            handle.draggable = true;\n           \n            var docDragOver: any = null;\n\n            const dragStart = (e: DragEvent) => {\n                if (!this.getEditorLock().commitCurrentEdit()) {\n                    !noJQueryDrag && e.preventDefault();\n                    return;\n                }\n                \n                if (noJQueryDrag) {\n                    docDragOver = (z: DragEvent) => z.preventDefault();\n                    document.addEventListener('dragover', docDragOver);\n                }\n                \n                pageX = e.pageX;\n                (e.target as HTMLElement).parentElement?.classList.add(\"slick-header-column-active\");\n                var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                // lock each column's width option to current width\n                columnElements.forEach((e, i) => {\n                    cols[i].previousWidth = (e as HTMLElement).offsetWidth;\n                });\n                if (this._options.forceFitColumns) {\n                    shrinkLeewayOnRight = 0;\n                    stretchLeewayOnRight = 0;\n                    // colums on right affect maxPageX/minPageX\n                    for (j = i + 1; j < columnElements.length; j++) {\n                        c = cols[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnRight != null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnRight = null;\n                                }\n                            }\n                            shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                        }\n                    }\n                }\n                var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                for (j = 0; j <= i; j++) {\n                    // columns on left only affect minPageX\n                    c = cols[j];\n                    if (c.resizable) {\n                        if (stretchLeewayOnLeft != null) {\n                            if (c.maxWidth) {\n                                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                            } else {\n                                stretchLeewayOnLeft = null;\n                            }\n                        }\n                        shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                    }\n                }\n                if (shrinkLeewayOnRight === null) {\n                    shrinkLeewayOnRight = 100000;\n                }\n                if (shrinkLeewayOnLeft === null) {\n                    shrinkLeewayOnLeft = 100000;\n                }\n                if (stretchLeewayOnRight === null) {\n                    stretchLeewayOnRight = 100000;\n                }\n                if (stretchLeewayOnLeft === null) {\n                    stretchLeewayOnLeft = 100000;\n                }\n                maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n                noJQueryDrag && (e.dataTransfer.effectAllowed = 'move');\n                    \n            };\n\n            const drag = (e: DragEvent) => {\n                if (!e.pageX && !e.clientX && !e.pageY && !e.clientY)\n                    return;\n                if (noJQueryDrag) {\n                    e.dataTransfer.effectAllowed = 'none';\n                    e.preventDefault();\n                }\n                var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x, j: number, k: number, c: Column;\n                if (d < 0) { // shrink column\n                    x = d;\n\n                    var newCanvasWidthL = 0, newCanvasWidthR = 0;\n\n                    for (j = i; j >= 0; j--) {\n                        c = cols[j];\n                        if (c.resizable) {\n                            actualMinWidth = Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                            if (x && c.previousWidth + x < actualMinWidth) {\n                                x += c.previousWidth - actualMinWidth;\n                                c.width = actualMinWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n\n                    var frozenCols = this._frozenCols;\n\n                    for (k = 0; k <= i; k++) {\n                        c = cols[k];\n\n                        if (frozenCols > 0 && k >= frozenCols) {\n                            newCanvasWidthR += c.width;\n                        } else {\n                            newCanvasWidthL += c.width;\n                        }\n                    }\n\n                    if (this._options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columnElements.length; j++) {\n                            c = cols[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n\n                                if (frozenCols > 0 && j >= frozenCols) {\n                                    newCanvasWidthR += c.width;\n                                } else {\n                                    newCanvasWidthL += c.width;\n                                }\n                            }\n                        }\n                    } else {\n                        for (j = i + 1; j < columnElements.length; j++) {\n                            c = cols[j];\n\n                            if (frozenCols >= 0 && j >= frozenCols) {\n                                newCanvasWidthR += c.width;\n                            } else {\n                                newCanvasWidthL += c.width;\n                            }\n                        }\n                    }\n                } else { // stretch column\n                    x = d;\n\n                    var newCanvasWidthL = 0, newCanvasWidthR = 0;\n\n                    for (j = i; j >= 0; j--) {\n                        c = cols[j];\n                        if (c.resizable) {\n                            if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                                x -= c.maxWidth - c.previousWidth;\n                                c.width = c.maxWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n\n                    for (k = 0; k <= i; k++) {\n                        c = cols[k];\n\n                        if (frozenCols > 0 && k >= frozenCols) {\n                            newCanvasWidthR += c.width;\n                        } else {\n                            newCanvasWidthL += c.width;\n                        }\n                    }\n\n                    if (this._options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columnElements.length; j++) {\n                            c = cols[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n\n                                if (frozenCols && j >= frozenCols) {\n                                    newCanvasWidthR += c.width;\n                                } else {\n                                    newCanvasWidthL += c.width;\n                                }\n                            }\n                        }\n                    } else {\n                        for (j = i + 1; j < columnElements.length; j++) {\n                            c = cols[j];\n\n                            if (frozenCols > 0 && j >= frozenCols) {\n                                newCanvasWidthR += c.width;\n                            } else {\n                                newCanvasWidthL += c.width;\n                            }\n                        }\n                    }\n                }\n\n                if (this.hasFrozenColumns() && newCanvasWidthL != this._canvasWidthL) {\n                    this._headerColsL.style.width = newCanvasWidthL + 1000 + 'px';\n                    this._paneHeaderR.style[this._rtlS] = newCanvasWidthL + 'px';\n                }\n\n                this.applyColumnHeaderWidths();\n                if (this._options.syncColumnCellResize) {\n                    this.applyColumnWidths();\n                }\n            }            \n\n            const dragEnd = (e: any) => {\n                if (docDragOver) {\n                    document.removeEventListener('dragover', docDragOver);\n                    docDragOver = null;\n                }\n                (e.target.parentElement as HTMLElement)?.classList.remove(\"slick-header-column-active\");\n                for (j = 0; j < columnElements.length; j++) {\n                    c = cols[j];\n                    var newWidth = (columnElements[j] as HTMLElement).offsetWidth;\n\n                    if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                        this.invalidateAllRows();\n                    }\n                }\n                this.updateCanvasWidth(true);\n                this.render();\n                this.trigger(this.onColumnsResized);\n            }\n\n            if (noJQueryDrag) {\n                handle.addEventListener(\"dragstart\", dragStart);\n                handle.addEventListener(\"drag\", drag);\n                handle.addEventListener(\"dragend\", dragEnd);\n                handle.addEventListener(\"dragover\", e => { e.preventDefault(); e.dataTransfer.effectAllowed = \"move\"; });\n            }\n            else {\n                ($(handle) as any)\n                    .on(\"dragstart\", dragStart)\n                    .on(\"drag\", drag)\n                    .on(\"dragend\", dragEnd);\n            }\n        });\n    }\n\n    private getVBoxDelta(el: HTMLElement): number {\n        var style = getComputedStyle(el);\n        if (style.boxSizing == 'border-box')\n            return 0;\n\n        var p = [\"border-top-width\", \"border-bottom-width\", \"padding-top\", \"padding-bottom\"];\n        var delta = 0;\n        p.forEach(val => delta += parseFloat(style.getPropertyValue(val)) || 0);\n        return delta;\n    }\n\n    private adjustFrozenRowOption(): void {\n        this._options.frozenRow = (this._options.frozenRow >= 0\n            && this._options.frozenRow < this._numVisibleRows\n        )\n            ? this._options.frozenRow\n            : -1;\n\n        if (this._options.frozenRow > -1) {\n            this._hasFrozenRows = true;\n            this._frozenRowsHeight = (this._options.frozenRow) * this._options.rowHeight;\n\n            var dataLength = this.getDataLength() || this._data.length;\n\n            this._actualFrozenRow = (this._options.frozenBottom)\n                ? (dataLength - this._options.frozenRow)\n                : this._options.frozenRow;\n        } else {\n            this._hasFrozenRows = false;\n        }\n    }\n\n    private setPaneVisibility(): void {\n        this._paneHeaderR.style.display = this._paneTopR.style.display = this.hasFrozenColumns() ? '' : 'none';\n        this._paneBottomL.style.display = this._hasFrozenRows ? '' : 'none';\n        this._paneBottomR.style.display = this._hasFrozenRows && this.hasFrozenColumns() ? '' : 'none';\n    }\n\n    private setOverflow(): void {\n\n        var frozenRows = this._hasFrozenRows;\n        var frozenCols = this.hasFrozenColumns();\n        var alwaysHS = this._options.alwaysAllowHorizontalScroll;\n        var alwaysVS = this._options.alwaysShowVerticalScroll;\n\n        this._viewportTopL.style.overflowX = this._viewportTopR.style.overflowX = (frozenRows && !alwaysHS) ? 'hidden' : (frozenCols ? 'scroll' : 'auto');\n        this._viewportTopL.style.overflowY = this._viewportBottomL.style.overflowY = (!frozenCols && alwaysVS) ? 'scroll' : (frozenCols ? 'hidden' : (frozenRows ? 'scroll' : 'auto'));\n        this._viewportTopR.style.overflowY = (alwaysVS || frozenRows) ? 'scroll' : 'auto';\n        this._viewportBottomL.style.overflowX = this._viewportBottomR.style.overflowX = (frozenCols && !alwaysHS) ? 'scroll' : 'auto';\n        this._viewportBottomR.style.overflowY = (alwaysVS) ? 'scroll' : 'auto';\n\n        if (this._options.viewportClass)\n            this.getViewports().forEach(vp => vp.classList.add(this._options.viewportClass));\n    }\n\n    private setScroller(): void {\n        if (this.hasFrozenColumns()) {\n            if (this._hasFrozenRows) {\n                if (this._options.frozenBottom) {\n                    this._scrollContainerX = this._viewportBottomR;\n                    this._scrollContainerY = this._viewportTopR;\n                } else {\n                    this._scrollContainerX = this._scrollContainerY = this._viewportBottomR;\n                }\n            } else {\n                this._scrollContainerX = this._scrollContainerY = this._viewportTopR;\n            }\n        } else {\n            if (this._hasFrozenRows) {\n                if (this._options.frozenBottom) {\n                    this._scrollContainerX = this._viewportBottomL;\n                    this._scrollContainerY = this._viewportTopL;\n                } else {\n                    this._scrollContainerX = this._scrollContainerY = this._viewportBottomL;\n                }\n            } else {\n                this._scrollContainerX = this._scrollContainerY = this._viewportTopL;\n            }\n        }\n    }\n\n    private measureCellPaddingAndBorder(): void {\n        const h = [\"border-left-width\", \"border-right-width\", \"padding-left\", \"padding-right\"];\n        const v = [\"border-top-width\", \"border-bottom-width\", \"padding-top\", \"padding-bottom\"];\n\n        var el = this._headerColsL.appendChild(H(\"div\", { class: \"slick-header-column\" + (this._options.useLegacyUI ? \" ui-state-default\" : \"\"), style: \"visibility:hidden\" }));\n        this._headerColumnWidthDiff = 0;\n        var cs = getComputedStyle(el);\n        if (cs.boxSizing != \"border-box\")\n            h.forEach(val => this._headerColumnWidthDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n        el.remove();\n\n        var r = this._canvasTopL.appendChild(H(\"div\", { class: \"slick-row\" },\n            el = H(\"div\", { class: \"slick-cell\", id: \"\", style: \"visibility: hidden\" })));\n        el.innerHTML = \"-\";\n        this._cellWidthDiff = this._cellHeightDiff = 0;\n        cs = getComputedStyle(el);\n        if (cs.boxSizing != \"border-box\") {\n            h.forEach(val => this._cellWidthDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n            v.forEach(val => this._cellHeightDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n        }\n        r.remove();\n\n        this._absoluteColMinWidth = Math.max(this._headerColumnWidthDiff, this._cellWidthDiff);\n    }\n\n    private createCssRules() {\n        var el = this._styleNode = document.createElement('style');\n        el.dataset.uid = this._uid;\n        var rowHeight = (this._options.rowHeight - this._cellHeightDiff);\n        var rules = [\n            \".\" + this._uid + \" .slick-group-header-column { \" + this._rtlS + \": 1000px; }\",\n            \".\" + this._uid + \" .slick-header-column { \" + this._rtlS + \": 1000px; }\",\n            \".\" + this._uid + \" .slick-top-panel { height:\" + this._options.topPanelHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-grouping-panel { height:\" + this._options.groupingPanelHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-headerrow-columns { height:\" + this._options.headerRowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-cell { height:\" + rowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-row { height:\" + this._options.rowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-footerrow-columns { height:\" + this._options.footerRowHeight + \"px; }\"\n        ];\n\n        var cols = this._cols;\n        for (var i = 0; i < cols.length; i++) {\n            rules.push(\".\" + this._uid + \" .l\" + i + \" { }\");\n            rules.push(\".\" + this._uid + \" .r\" + i + \" { }\");\n        }\n\n        el.appendChild(document.createTextNode(rules.join(\" \")));\n        document.head.appendChild(el);\n    }\n\n    private getColumnCssRules(idx: number): { right: any; left: any; } {\n        if (!this._stylesheet) {\n            var stylesheetFromUid = document.querySelector(\"style[data-uid='\" + this._uid + \"']\") as any\n            if (stylesheetFromUid && stylesheetFromUid.sheet) {\n                this._stylesheet = stylesheetFromUid.sheet;\n            } else {\n                var sheets = document.styleSheets;\n                for (var i = 0; i < sheets.length; i++) {\n                    if ((sheets[i].ownerNode || (sheets[i] as any).owningElement) == this._styleNode) {\n                        this._stylesheet = sheets[i];\n                        break;\n                    }\n                }\n            }\n\n            if (!this._stylesheet) {\n                throw new Error(\"Cannot find stylesheet.\");\n            }\n\n            // find and cache column CSS rules\n            this._columnCssRulesL = [];\n            this._columnCssRulesR = [];\n            var cssRules = (this._stylesheet.cssRules || this._stylesheet.rules);\n            var matches, columnIdx;\n            for (var i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substring(2, matches[0].length), 10);\n                    this._columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substring(2, matches[0].length), 10);\n                    this._columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n\n        return this._rtl ? {\n            \"right\": this._columnCssRulesL[idx],\n            \"left\": this._columnCssRulesR[idx]\n        } : {\n            \"left\": this._columnCssRulesL[idx],\n            \"right\": this._columnCssRulesR[idx]\n        }\n    }\n\n    private removeCssRules() {\n        this._styleNode.remove();\n        this._stylesheet = null;\n    }\n\n    destroy() {\n        this.getEditorLock().cancelCurrentEdit();\n\n        this.trigger(this.onBeforeDestroy);\n\n        var i = this._plugins.length;\n        while (i--) {\n            this.unregisterPlugin(this._plugins[i]);\n        }\n\n        if (this._options.enableColumnReorder) {\n            ($([this._headerColsL, this._headerColsR]).filter(\":ui-sortable\") as any).sortable(\"destroy\");\n        }\n\n        this.unbindAncestorScrollEvents();\n        $(this._container).off(\".slickgrid\");\n        this.removeCssRules();\n\n        this.getCanvases().off(\"draginit dragstart dragend drag\");\n        $(this._container).empty().removeClass(this._uid);\n\n        for (var k in this) {\n            if (!Object.prototype.hasOwnProperty.call(this, k))\n                continue;\n            if (k.startsWith('on')) {\n                var ev: any = this[k];\n                if ((ev as Event)?.clear && (ev as Event)?.subscribe)\n                    (ev as Event)?.clear();\n            }\n            delete this[k];\n        }\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n\n    private trigger<TArgs extends ArgsGrid, TEventData extends IEventData = IEventData>(\n        evt: Event<TArgs, TEventData>, args?: TArgs, e?: TEventData) {\n        e = e || new EventData() as any;\n        args = args || {} as any;\n        args.grid = this;\n        return evt.notify(args, e, this);\n    }\n\n    getEditorLock(): EditorLock {\n        return this._options.editorLock;\n    }\n\n    getEditController(): EditController {\n        return this._editController;\n    }\n\n    getColumnIndex(id: string): number {\n        return this._colById[id];\n    }\n\n    getInitialColumnIndex(id: string): number {\n        return this._initColById[id];\n    }\n\n    autosizeColumns(): void {\n        var i, c,\n            widths = [],\n            shrinkLeeway = 0,\n            total = 0,\n            prevTotal,\n            availWidth = this._viewportHasVScroll ? this._viewportW - this._scrollDims.width : this._viewportW,\n            cols = this._cols;\n\n        for (i = 0; i < cols.length; i++) {\n            c = cols[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, this._absoluteColMinWidth);\n            }\n        }\n\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < cols.length && total > availWidth; i++) {\n                c = cols[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= this._absoluteColMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, this._absoluteColMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {  // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < cols.length && total < availWidth; i++) {\n                c = cols[i];\n                var currentWidth = widths[i];\n                var growSize;\n\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += (total <= availWidth ? growSize : 0);\n            }\n            if (prevTotal >= total) {  // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n\n        var reRender = false;\n        for (i = 0; i < cols.length; i++) {\n            if (cols[i].rerenderOnResize && cols[i].width != widths[i]) {\n                reRender = true;\n            }\n            cols[i].width = widths[i];\n        }\n\n        this.applyColumnHeaderWidths();\n        this.updateCanvasWidth(true);\n        if (reRender) {\n            this.invalidateAllRows();\n            this.render();\n        }\n    }\n\n    private applyColumnHeaderWidths(): void {\n        if (!this._initialized) { return; }\n        var h: HTMLElement, cols = this._cols, colsL = cols.length, frozenCols = this._frozenCols, headersL = this._headerColsL.children, headersR = this._headerColsR.children;\n        for (var i = 0, ii = headersL.length + headersR.length; i < ii && i < colsL; i++) {\n            h = (frozenCols && i >= frozenCols ? headersR : headersL).item(frozenCols > 0 && i >= frozenCols ? i - frozenCols : i) as HTMLElement;\n            var target = cols[i].width - this._headerColumnWidthDiff;\n            if (h.offsetWidth !== target) {\n                h.style.width = target + 'px'\n            }\n        }\n\n        this.updateViewColLeftRight();\n    }\n\n    private applyColumnWidths(): void {\n        var x = 0, w, rule, cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            if (frozenCols == i)\n                x = 0;\n            w = cols[i].width;\n            rule = this.getColumnCssRules(i);\n            rule[this._rtlS].style[this._rtlS] = x + \"px\";\n            rule[this._rtlE].style[this._rtlE] = (((frozenCols > 0 && i >= frozenCols) ? this._canvasWidthR : this._canvasWidthL) - x - w) + \"px\";\n            x += w;\n        }\n    }\n\n    setSortColumn(columnId: string, ascending: boolean) {\n        this.setSortColumns([{ columnId: columnId, sortAsc: ascending }]);\n    }\n\n    setSortColumns(cols: ColumnSort[]) {\n        this._sortColumns = cols || [];\n\n        var headerColumnEls = Array.from(this._headerColsL.children).concat(Array.from(this._headerColsR.children));\n        headerColumnEls.forEach(hel => {\n            hel.classList.remove(\"slick-header-column-sorted\");\n            var si = hel.querySelector(\".slick-sort-indicator\");\n            si && si.classList.remove(\"slick-sort-indicator-asc\", \"slick-sort-indicator-desc\");\n        });\n\n        this._sortColumns.forEach(col => {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = this.getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                var header = headerColumnEls[columnIndex];\n                if (header) {\n                    header.classList.add(\"slick-header-column-sorted\");\n                    var si = header.querySelector(\".slick-sort-indicator\");\n                    si && si.classList.add(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n                }\n            }\n        });\n    }\n\n    getSortColumns(): ColumnSort[] {\n        return this._sortColumns;\n    }\n\n    private handleSelectedRangesChanged = (e: IEventData, ranges: Range[]): void => {\n        var previousSelectedRows = this._selectedRows.slice(0); // shallow copy previously selected rows for later comparison\n        this._selectedRows = [];\n        var hash = {}, cols = this._cols;\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {  // prevent duplicates\n                    this._selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (this.canCellBeSelected(j, k)) {\n                        hash[j][cols[k].id] = this._options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n\n        this.setCellCssStyles(this._options.selectedCellCssClass, hash);\n\n        if (!simpleArrayEquals(previousSelectedRows, this._selectedRows)) {\n            var caller = e && (e as any).detail && (e as any).detail.caller || 'click';\n            var newSelectedAdditions = this._selectedRows.filter(i => previousSelectedRows.indexOf(i) < 0);\n            var newSelectedDeletions = previousSelectedRows.filter(i => this._selectedRows.indexOf(i) < 0);\n\n            this.trigger(this.onSelectedRowsChanged, {\n                rows: this.getSelectedRows(),\n                previousSelectedRows: previousSelectedRows,\n                caller: caller,\n                changedSelectedRows: newSelectedAdditions,\n                changedUnselectedRows: newSelectedDeletions\n            }, e);\n        }\n\n        this._selectedRows = [];\n        var hash = {}, cols = this._cols;\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {  // prevent duplicates\n                    this._selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (this.canCellBeSelected(j, k)) {\n                        hash[j][cols[k].id] = this._options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n    }\n\n    getColumns(): Column<TItem>[] {\n        return this._cols;\n    }\n\n    getInitialColumns(): Column<TItem>[] {\n        return this._initCols;\n    }\n\n    private updateViewColLeftRight(): void {\n        this._colLeft = [];\n        this._colRight = [];\n        var x = 0, r: number, cols = this._cols, i: number, l: number = cols.length, frozenCols = this._frozenCols;\n        for (var i = 0; i < l; i++) {\n            if (frozenCols === i)\n                x = 0;\n            r = x + cols[i].width;\n            this._colLeft[i] = x;\n            this._colRight[i] = r;\n            x = r;\n        }\n    }\n\n    private setInitialCols(initCols: Column[]) {\n\n        var defs = this._colDefaults;\n        var initColById = {};\n        var frozenColumns: Column[] = [];\n        var viewCols: Column[] = [];\n        var viewColById: { [key: string]: number } = {};\n        var i: number, m: Column, k: string;\n        for (i = 0; i < initCols.length; i++) {\n            m = initCols[i];\n\n            for (k in defs) {\n                if (m[k] === undefined)\n                    m[k] = this._colDefaults[k];\n            }\n\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n\n            initColById[m.id] = i;\n\n            if (m.visible !== false) {\n                (m.frozen ? frozenColumns : viewCols).push(m);\n            }\n        }\n\n        this._frozenCols = frozenColumns.length;\n        if (frozenColumns.length > 0)\n            viewCols = frozenColumns.concat(viewCols);\n\n        for (i = 0; i < viewCols.length; i++) {\n            m = viewCols[i];\n            viewColById[m.id] = i;\n        }\n\n        this._initCols = initCols;\n        this._initColById = initColById;\n        this._cols = viewCols;\n        this._colById = viewColById;\n    }\n\n    setColumns(columns: Column<TItem>[]): void {\n        this.setInitialCols(columns);\n        this.updateViewColLeftRight();\n\n        if (this._initialized) {\n            this.setPaneVisibility();\n            this.setOverflow();\n\n            this.invalidateAllRows();\n            this.createColumnHeaders();\n            this.createColumnFooters();\n            this.updateFooterTotals();\n            this.removeCssRules();\n            this.createCssRules();\n            this.resizeCanvas();\n            this.updateCanvasWidth();\n            this.applyColumnWidths();\n            this.handleScroll();\n            this.getSelectionModel()?.refreshSelections();\n        }\n    }\n\n    getOptions(): GridOptions<TItem> {\n        return this._options;\n    }\n\n    setOptions(args: GridOptions<TItem>, suppressRender?: boolean, suppressColumnSet?: boolean, suppressSetOverflow?: boolean): void {\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n\n        this.makeActiveCellNormal();\n\n        if (args.showColumnHeader !== undefined) {\n            this.setColumnHeaderVisibility(args.showColumnHeader);\n        }\n\n        if (this._options.enableAddRow !== args.enableAddRow) {\n            this.invalidateRow(this.getDataLength());\n        }\n\n        this._options = $.extend(this._options, args);\n        this.validateAndEnforceOptions();\n        this.adjustFrozenRowOption();\n\n        this.getViewports().forEach(vp => vp.style.overflowY = this._options.autoHeight ? \"hidden\" : \"auto\");\n\n        if (!suppressSetOverflow) {\n            this.setOverflow();\n        }\n\n        if (args.columns && !suppressColumnSet) {\n            adjustFrozenColumnCompat(args.columns, this._options);\n            this.setColumns(args.columns ?? this._initCols);\n        }\n        else if (args.frozenColumn != null) {\n            adjustFrozenColumnCompat(this._initCols, this._options);\n            this.setColumns(this._initCols);\n        }\n\n        this.setScroller();\n        if (!suppressRender)\n            this.render();\n    }\n\n    private validateAndEnforceOptions(): void {\n        if (this._options.autoHeight) {\n            this._options.leaveSpaceForNewRows = false;\n        }\n    }\n\n    private viewOnRowCountChanged = () => {\n        this.updateRowCount();\n        this.render();\n    }\n\n    private viewOnRowsChanged = (_: any, args: { rows: number[] }): void => {\n        this.invalidateRows(args.rows);\n        this.render();\n        this.updateFooterTotals();\n    }\n\n    private viewOnDataChanged = (): void => {\n        this.invalidate();\n        this.render();\n    }\n\n    private bindToData(): void {\n        if (this._data) {\n            this._data.onRowCountChanged && this._data.onRowCountChanged.subscribe(this.viewOnRowCountChanged);\n            this._data.onRowsChanged && this._data.onRowsChanged.subscribe(this.viewOnRowsChanged);\n            this._data.onDataChanged && this._data.onDataChanged.subscribe(this.viewOnDataChanged);\n        }\n    }\n\n    private unbindFromData(): void {\n        if (this._data) {\n            this._data.onRowCountChanged && this._data.onRowCountChanged.unsubscribe(this.viewOnRowCountChanged);\n            this._data.onRowsChanged && this._data.onRowsChanged.unsubscribe(this.viewOnRowsChanged);\n            this._data.onDataChanged && this._data.onDataChanged.unsubscribe(this.viewOnDataChanged);\n        }\n    }\n\n    setData(newData: any, scrollToTop?: boolean) {\n        this.unbindFromData();\n        this._data = newData;\n        this.bindToData();\n        this.invalidateAllRows();\n        this.updateRowCount();\n        if (scrollToTop) {\n            this.scrollTo(0);\n        }\n    }\n\n    getData(): any {\n        return this._data;\n    }\n\n    getDataLength(): number {\n        if (this._data.getLength) {\n            return this._data.getLength();\n        } else {\n            return this._data.length;\n        }\n    }\n\n    private getDataLengthIncludingAddNew(): number {\n        return this.getDataLength() + (!this._options.enableAddRow ? 0 :\n            (!this._pagingActive || this._pagingIsLastPage ? 1 : 0));\n    }\n\n    getDataItem(i: number): TItem {\n        if (this._data.getItem) {\n            return this._data.getItem(i);\n        } else {\n            return this._data[i];\n        }\n    }\n\n    getTopPanel(): HTMLDivElement {\n        return this._topPanelL;\n    }\n\n    setTopPanelVisibility(visible: boolean): void {\n        if (this._options.showTopPanel != visible) {\n            this._options.showTopPanel = !!visible;\n            $([this._topPanelL.parentElement, this._topPanelR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    setColumnHeaderVisibility(visible: boolean, animate?: boolean) {\n        if (this._options.showColumnHeader != visible) {\n            this._options.showColumnHeader = visible;\n            var headerScroller = $([this._headerColsL.parentElement, this._headerColsR.parentElement]);\n            if (visible) {\n                if (animate) {\n                    headerScroller.slideDown(\"fast\", this.resizeCanvas);\n                } else {\n                    headerScroller.show();\n                    this.resizeCanvas();\n                }\n            } else {\n                if (animate) {\n                    headerScroller.slideUp(\"fast\", this.resizeCanvas);\n                } else {\n                    headerScroller.hide();\n                    this.resizeCanvas();\n                }\n            }\n        }\n    }\n\n    setFooterRowVisibility(visible: boolean): void {\n        if (this._options.showFooterRow != visible) {\n            this._options.showFooterRow = !!visible;\n            $([this._footerRowColsL.parentElement, this._footerRowColsR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    setGroupingPanelVisibility(visible: boolean): void {\n        if (this._options.showGroupingPanel != visible) {\n            this._options.showGroupingPanel = visible;\n            if (!this._options.groupingPanel)\n                return;\n            if (visible) {\n                $(this._groupingPanel).slideDown(\"fast\", this.resizeCanvas);\n            } else {\n                $(this._groupingPanel).slideUp(\"fast\", this.resizeCanvas);\n            }\n        }\n    }\n\n    setPreHeaderPanelVisibility(visible: boolean): void {\n        this.setGroupingPanelVisibility(visible);\n    }\n\n    setHeaderRowVisibility(visible: boolean): void {\n        if (this._options.showHeaderRow != visible) {\n            this._options.showHeaderRow = visible;\n            $([this._headerRowColsL.parentElement, this._headerRowColsR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    getContainerNode(): HTMLElement {\n        return this._container;\n    }\n\n    getUID(): string {\n        return this._uid;\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n\n    private getRowTop(row: number): number {\n        return this._options.rowHeight * row - this._pageOffset;\n    }\n\n    private getRowFromPosition(y: number): number {\n        return Math.floor((y + this._pageOffset) / this._options.rowHeight);\n    }\n\n    private scrollTo(y: number): void {\n        y = Math.max(y, 0);\n        y = Math.min(y, this._virtualHeight - Math.round($(this._scrollContainerY).height()) + ((this._viewportHasHScroll || this.hasFrozenColumns()) ? this._scrollDims.height : 0));\n\n        var oldOffset = this._pageOffset;\n\n        this._page = Math.min(this._numberOfPages - 1, Math.floor(y / this._pageHeight));\n        this._pageOffset = Math.round(this._page * this._jumpinessCoefficient);\n        var newScrollTop = y - this._pageOffset;\n\n        if (this._pageOffset != oldOffset) {\n            var range = this.getVisibleRange(newScrollTop);\n            this.cleanupRows(range);\n            this.updateRowPositions();\n        }\n\n        if (this._scrollTopPrev != newScrollTop) {\n            this._vScrollDir = (this._scrollTopPrev + oldOffset < newScrollTop + this._pageOffset) ? 1 : -1;\n\n            this._scrollTopRendered = (this._scrollTop = this._scrollTopPrev = newScrollTop);\n\n            if (this.hasFrozenColumns()) {\n                this._viewportTopL.scrollTop = newScrollTop;\n            }\n\n            if (this._hasFrozenRows) {\n                this._viewportBottomL.scrollTop = this._viewportBottomR.scrollTop = newScrollTop;\n            }\n\n            this._scrollContainerY.scrollTop = newScrollTop;\n\n            this.trigger(this.onViewportChanged);\n        }\n    }\n\n    getFormatter(row: number, column: Column<TItem>): ColumnFormatter<TItem> {\n        var data = this._data;\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row) as ItemMetadata;\n        var colsMetadata = rowMetadata && rowMetadata.columns;\n        var colOverrides = colsMetadata && (colsMetadata[column.id] || colsMetadata[this.getInitialColumnIndex(column.id)]);\n\n        return (colOverrides && colOverrides.formatter) ||\n            (rowMetadata && rowMetadata.formatter) ||\n            column.formatter ||\n            (this._options.formatterFactory && this._options.formatterFactory.getFormatter(column)) ||\n            this._options.defaultFormatter;\n    }\n\n    private getEditor(row: number, cell: number): Editor {\n        var column = this._cols[cell];\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n\n        return column.editor || (this._options.editorFactory && this._options.editorFactory.getEditor(column));\n    }\n\n    private getDataItemValueForColumn(item: TItem, columnDef: Column<TItem>): any {\n        if (this._options.dataItemColumnValueExtractor) {\n            return this._options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n\n    private appendRowHtml(stringArrayL: string[], stringArrayR: string[], row: number, range: ViewRange, dataLength: number): void {\n        var d = this.getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = \"slick-row\" +\n            (this._hasFrozenRows && row <= this._options.frozenRow ? ' frozen' : '') +\n            (dataLoading ? \" loading\" : \"\") +\n            (row === this._activeRow ? \" active\" : \"\") +\n            (row % 2 == 1 ? \" odd\" : \" even\");\n\n        if (!d) {\n            rowCss += \" \" + this._options.addNewRowCssClass;\n        }\n\n        var metadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n\n        if (metadata && metadata.cssClasses) {\n            rowCss += \" \" + metadata.cssClasses;\n        }\n\n        var frozenRowOffset = this.getFrozenRowOffset(row);\n\n        var rowHtml = \"<div class='\" + (this._options.useLegacyUI ? \"ui-widget-content \" : \"\") + rowCss + \"' style='top:\"\n            + (this.getRowTop(row) - frozenRowOffset)\n            + \"px'>\";\n\n        stringArrayL.push(rowHtml);\n\n        if (this.hasFrozenColumns()) {\n            stringArrayR.push(rowHtml);\n        }\n\n        var colspan, m, cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0, ii = cols.length; i < ii; i++) {\n            var columnData = null;\n            m = cols[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = (columnData && columnData.colspan) || 1;\n                if (colspan === \"*\") {\n                    colspan = ii - i;\n                }\n            }\n\n            // Do not render cells outside of the viewport.\n            if (this._colRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (this._colLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n\n                this.appendCellHtml(frozenCols > 0 && i >= frozenCols ? stringArrayR : stringArrayL, row, i, colspan, d, columnData);\n            }\n\n            if (colspan > 1) {\n                i += (colspan - 1);\n            }\n        }\n\n        stringArrayL.push(\"</div>\");\n\n        if (this.hasFrozenColumns()) {\n            stringArrayR.push(\"</div>\");\n        }\n    }\n\n    private appendCellHtml(sb: string[], row: number, cell: number, colspan: number, item: TItem, metadata: any): void {\n        var cols = this._cols, frozenCols = this._frozenCols, m = cols[cell];\n        var klass = \"slick-cell l\" + cell + \" r\" + Math.min(cols.length - 1, cell + colspan - 1) +\n            (m.cssClass ? \" \" + m.cssClass : \"\");\n\n        if (cell < frozenCols)\n            klass += ' frozen';\n\n        if (row === this._activeRow && cell === this._activeCell)\n            klass += \" active\";\n\n        if (metadata && metadata.cssClasses) {\n            klass += \" \" + metadata.cssClasses;\n        }\n\n        for (var key in this._cellCssClasses) {\n            if (this._cellCssClasses[key][row] && this._cellCssClasses[key][row][m.id]) {\n                klass += (\" \" + this._cellCssClasses[key][row][m.id]);\n            }\n        }\n\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        var fmtResult: FormatterResult | string;\n        if (item) {\n            var value = this.getDataItemValueForColumn(item, m);\n            fmtResult = this.getFormatter(row, m)(row, cell, value, m, item, this);\n        }\n\n        if (fmtResult == null)\n            sb.push('<div class=\"' + attrEncode(klass) + '\"></div>');\n        else if (typeof fmtResult === \"string\")\n            sb.push('<div class=\"' + attrEncode(klass) + '\">' + fmtResult + '</div>');\n        else {\n            if (fmtResult.addClass?.length)\n                klass += (\" \" + fmtResult.addClass);\n\n            sb.push('<div class=\"' + attrEncode(klass) + '\"');\n\n            if (fmtResult.addClass?.length)\n                sb.push(' data-fmtcls=\"' + attrEncode(fmtResult.addClass) + '\"');\n\n            var attrs = fmtResult.addAttrs;\n            if (attrs != null) {\n                var ks = [];\n                for (var k in attrs) {\n                    sb.push(k + '=\"' + attrEncode(attrs[k]) + '\"');\n                    ks.push(k);\n                }\n                sb.push(' data-fmtatt=\"' + attrEncode(ks.join(',')) + '\"');\n            }\n\n            var toolTip = fmtResult.toolTip;\n            if (toolTip != null && toolTip.length)\n                sb.push('tooltip=\"' + attrEncode(toolTip) + '\"');\n\n            if (fmtResult.text?.length)\n                sb.push('>' + fmtResult.text + '</div>');\n            else\n                sb.push('></div>');\n        }\n\n        this._rowsCache[row].cellRenderQueue.push(cell);\n        this._rowsCache[row].cellColSpans[cell] = colspan;\n    }\n\n    private cleanupRows(rangeToKeep: ViewRange): void {\n        var i: number;\n        for (var x in this._rowsCache) {\n            var removeFrozenRow = true;\n            i = parseInt(x, 10);\n            if (this._hasFrozenRows\n                && ((this._options.frozenBottom && i >= this._actualFrozenRow) // Frozen bottom rows\n                    || (!this._options.frozenBottom && i <= this._actualFrozenRow) // Frozen top rows\n                )\n            ) {\n                removeFrozenRow = false;\n            }\n\n            if (i !== this._activeRow\n                && (i < rangeToKeep.top || i > rangeToKeep.bottom)\n                && (removeFrozenRow)) {\n                this.removeRowFromCache(i);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    invalidate(): void {\n        this.updateRowCount();\n        this.invalidateAllRows();\n        this.render();\n        this.updateFooterTotals();\n    }\n\n    invalidateAllRows(): void {\n        if (this._currentEditor) {\n            this.makeActiveCellNormal();\n        }\n        for (var row in this._rowsCache) {\n            this.removeRowFromCache(parseInt(row, 10));\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    private queuePostProcessedRowForCleanup(cacheEntry: CachedRow, postProcessedRow: { [key: number]: any }, rowIdx: number): void {\n        this._postProcessGroupId++;\n\n        // store and detach node for later async cleanup\n        for (var x in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(x)) {\n                var columnIdx = parseInt(x, 10);\n                this._postProcessCleanupQueue.push({\n                    groupId: this._postProcessGroupId,\n                    cellNode: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n\n        this._postProcessCleanupQueue.push({\n            groupId: this._postProcessGroupId,\n            rowNodeL: cacheEntry.rowNodeL,\n            rowNodeR: cacheEntry.rowNodeR\n        });\n\n        cacheEntry.rowNodeL?.remove();\n        cacheEntry.rowNodeR?.remove();\n    }\n\n    private queuePostProcessedCellForCleanup(cellnode: HTMLElement, columnIdx: number, rowIdx: number): void {\n        this._postProcessCleanupQueue.push({\n            groupId: this._postProcessGroupId,\n            cellNode: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n\n    private removeRowFromCache(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n\n        if (this._options.enableAsyncPostRenderCleanup && this._postProcessedRows[row]) {\n            this.queuePostProcessedRowForCleanup(cacheEntry, this._postProcessedRows[row], row);\n        }\n        else {\n            cacheEntry.rowNodeL?.parentElement?.removeChild(cacheEntry.rowNodeL);\n            cacheEntry.rowNodeR?.parentElement?.removeChild(cacheEntry.rowNodeR);\n        }\n\n        delete this._rowsCache[row];\n        delete this._postProcessedRows[row];\n    }\n\n    invalidateRows(rows: number[]): void {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        this._vScrollDir = 0;\n        for (i = 0, rl = rows.length; i < rl; i++) {\n            if (this._currentEditor && this._activeRow === rows[i]) {\n                this.makeActiveCellNormal();\n            }\n            if (this._rowsCache[rows[i]]) {\n                this.removeRowFromCache(rows[i]);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    invalidateRow(row: number): void {\n        this.invalidateRows([row]);\n    }\n\n    applyFormatResultToCellNode(fmtResult: FormatterResult | string, cellNode: HTMLElement) {\n        var oldFmtCls = cellNode.dataset?.fmtcls as string;\n        if (oldFmtCls != null && oldFmtCls.length > 0) {\n            cellNode.classList.remove(...oldFmtCls.split(' '));\n            delete cellNode.dataset.fmtcls;\n        }\n\n        var oldFmtAtt = cellNode.dataset?.fmtatt as string;\n        if (oldFmtAtt != null && oldFmtAtt.length > 0) {\n            for (var k of oldFmtAtt.split(','))\n                cellNode.removeAttribute(k);\n            delete cellNode.dataset.fmtatt;\n        }\n\n        cellNode.removeAttribute('tooltip');\n\n        if (fmtResult == null) {\n            cellNode.innerHTML = '';\n            return;\n        }\n\n        if (typeof fmtResult === \"string\") {\n            cellNode.innerHTML = fmtResult;\n            return;\n        }\n\n        cellNode.innerHTML = fmtResult.text;\n\n        if (fmtResult.addClass?.length) {\n            cellNode.classList.add(...fmtResult.addClass.split(' '));\n            cellNode.dataset.fmtcls = fmtResult.addClass;\n        }\n\n        if (fmtResult.addAttrs != null) {\n            var keys = Object.keys(fmtResult.addAttrs);\n            if (keys.length) {\n                for (var k of keys) {\n                    cellNode.setAttribute(k, fmtResult.addAttrs[k]);\n                }\n                cellNode.dataset.fmtatt = keys.join(',');\n            }\n        }\n\n        if (fmtResult.toolTip?.length)\n            cellNode.setAttribute('tooltip', fmtResult.toolTip);\n    }\n\n    updateCell(row: number, cell: number): void {\n        var cellNode = this.getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n\n        var m = this._cols[cell], d = this.getDataItem(row);\n        if (this._currentEditor && this._activeRow === row && this._activeCell === cell) {\n            this._currentEditor.loadValue(d);\n        } else {\n            var fmtResult = d ? this.getFormatter(row, m)(row, cell, this.getDataItemValueForColumn(d, m), m, d) : \"\";\n            this.applyFormatResultToCellNode(fmtResult, cellNode);\n            this.invalidatePostProcessingResults(row);\n        }\n    }\n\n    updateRow(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n\n        this.ensureCellNodesInRowsCache(row);\n\n        var d = this.getDataItem(row);\n        var fmtResult: FormatterResult | string;\n\n        for (var x in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                continue;\n            }\n\n            var columnIdx = parseInt(x, 10);\n            var m = this._cols[columnIdx],\n                node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n            if (row === this._activeRow && columnIdx === this._activeCell && this._currentEditor) {\n                this._currentEditor.loadValue(d);\n            }\n            else {\n                fmtResult = d ? this.getFormatter(row, m)(row, columnIdx, this.getDataItemValueForColumn(d, m), m, d) : '';\n                this.applyFormatResultToCellNode(fmtResult, node);\n            }\n        }\n\n        this.invalidatePostProcessingResults(row);\n    }\n\n    private getViewportHeight(): number {\n        this._groupingPanelH = (this._options.groupingPanel && this._options.showGroupingPanel) ? (this._options.groupingPanelHeight + this.getVBoxDelta(this._groupingPanel)) : 0\n        this._topPanelH = this._options.showTopPanel ? (this._options.topPanelHeight + this.getVBoxDelta(this._topPanelL.parentElement)) : 0;\n        this._headerRowH = this._options.showHeaderRow ? (this._options.headerRowHeight + this.getVBoxDelta(this._headerRowColsL.parentElement)) : 0;\n        this._footerRowH = this._options.showFooterRow ? (this._options.footerRowHeight + this.getVBoxDelta(this._footerRowColsL.parentElement)) : 0;\n        \n        var headerH = (this._options.showColumnHeader) ? (parseFloat(getComputedStyle(this._headerColsL.parentElement).height) + this.getVBoxDelta(this._headerColsL.parentElement)) : 0;\n\n        if (this._options.autoHeight) {\n            this._viewportH = this._options.rowHeight * this.getDataLengthIncludingAddNew();\n\n            if (!this.hasFrozenColumns()) {\n                this._viewportH += this._groupingPanelH;\n                this._viewportH += headerH;\n                this._viewportH += this._headerRowH;\n                this._viewportH += this._footerRowH;\n                this._viewportH += this.getCanvasWidth() > this._viewportW ? this._scrollDims.height : 0;\n            }\n        } else {\n\n            var style = getComputedStyle(this._container);\n            this._viewportH = parseFloat(style.height)\n                - parseFloat(style.paddingTop)\n                - parseFloat(style.paddingBottom)\n                - headerH\n                - this._topPanelH\n                - this._headerRowH\n                - this._footerRowH\n                - this._groupingPanelH;\n        }\n\n        this._numVisibleRows = Math.ceil(this._viewportH / this._options.rowHeight);\n        return this._viewportH;\n    }\n\n    private getViewportWidth(): void {\n        this._viewportW = parseFloat(getComputedStyle(this._container).width);\n    }\n\n    resizeCanvas = (): void => {\n        if (!this._initialized) {\n            return;\n        }\n\n        this._paneTopH = 0\n        this._paneBottomH = 0\n        this._viewportTopH = 0\n\n        this.getViewportWidth();\n        this.getViewportHeight();\n\n        // Account for Frozen Rows\n        if (this._hasFrozenRows) {\n            if (this._options.frozenBottom) {\n                this._paneTopH = this._viewportH - this._frozenRowsHeight - this._scrollDims.height;\n                this._paneBottomH = this._frozenRowsHeight + this._scrollDims.height;\n            } else {\n                this._paneTopH = this._frozenRowsHeight;\n                this._paneBottomH = this._viewportH - this._frozenRowsHeight;\n            }\n        } else {\n            this._paneTopH = this._viewportH;\n        }\n\n        // The top pane includes the top panel, the header row and the footer row\n        this._paneTopH += this._topPanelH + this._headerRowH + this._footerRowH;\n\n        if (this.hasFrozenColumns() && this._options.autoHeight) {\n            this._paneTopH += this._scrollDims.height;\n        }\n\n        // The top viewport does not contain the grouping panel, top panel or header row\n        this._viewportTopH = this._paneTopH - this._topPanelH - this._headerRowH - this._footerRowH;\n\n        if (this._options.autoHeight) {\n            if (this.hasFrozenColumns()) {\n                this._container.style.height = this._paneTopH + parseFloat(getComputedStyle(this._headerColsL.parentElement).height) + 'px';\n            }\n\n            this._paneTopL.style.position = 'relative';\n        }\n        else\n            this._paneTopL.style.position = '';\n\n        this._paneTopL.style.top = (this._groupingPanelH + (parseFloat(getComputedStyle(this._paneHeaderL).height) || this._headerRowH)) + \"px\";\n        this._paneTopL.style.height = this._paneTopH + 'px';\n\n        var paneBottomTop = this._paneTopL.offsetTop + this._paneTopH;\n\n        if (!this._options.autoHeight) {\n            this._viewportTopL.style.height = this._viewportTopH + 'px';\n        }\n\n        if (this.hasFrozenColumns()) {\n            this._paneTopR.style.top = this._paneTopL.style.top;\n            this._paneTopR.style.height = this._paneTopH + 'px';\n\n            this._viewportTopR.style.height = this._viewportTopH + 'px';\n\n            if (this._hasFrozenRows) {\n                this._paneBottomL.style.top = paneBottomTop + 'px';\n                this._paneBottomL.style.height = this._paneBottomH + 'px';\n\n                this._paneBottomR.style.top = paneBottomTop + 'px';\n                this._paneBottomR.style.height = this._paneBottomH + 'px';\n\n                this._viewportBottomR.style.height = this._paneBottomH + 'px';\n            }\n        } else {\n            if (this._hasFrozenRows) {\n                this._paneBottomL.style.width = '100%';\n                this._paneBottomL.style.height = this._paneBottomH + 'px';\n\n                this._paneBottomL.style.top = paneBottomTop + 'px';\n            }\n        }\n\n        if (this._hasFrozenRows) {\n            this._viewportBottomL.style.height = this._paneBottomH + 'px';\n\n            if (this._options.frozenBottom) {\n                this._canvasBottomL.style.height = this._frozenRowsHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasBottomR.style.height = this._frozenRowsHeight + 'px';\n                }\n            } else {\n                this._canvasTopL.style.height = this._frozenRowsHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasTopR.style.height = this._frozenRowsHeight + 'px';\n                }\n            }\n        } else {\n            this._viewportTopR.style.height = this._viewportTopH + 'px';\n        }\n\n        if (!this._scrollDims || !this._scrollDims.width) {\n            this._scrollDims = getScrollBarDimensions(true);\n        }\n\n        if (this._options.forceFitColumns) {\n            this.autosizeColumns();\n        }\n\n        this.updateRowCount();\n        this.handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        this._scrolLLeftRendered = -1;\n        this.render();\n    }\n\n    updatePagingStatusFromView(pagingInfo: { pageSize: number, pageNum: number, totalPages: number }) {\n        this._pagingActive = (pagingInfo.pageSize !== 0);\n        this._pagingIsLastPage = (pagingInfo.pageNum == pagingInfo.totalPages - 1);\n    }\n\n    private updateRowCount(): void {\n        if (!this._initialized) {\n            return;\n        }\n\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        var numberOfRows = 0;\n        var oldH = (this._hasFrozenRows && !this._options.frozenBottom) ? Math.round(parseFloat(getComputedStyle(this._canvasBottomL).height)) : Math.round(parseFloat(getComputedStyle(this._canvasTopL).height));\n\n        if (this._hasFrozenRows) {\n            var numberOfRows = this.getDataLength() - this._options.frozenRow;\n        } else {\n            var numberOfRows = dataLengthIncludingAddNew + (this._options.leaveSpaceForNewRows ? this._numVisibleRows - 1 : 0);\n        }\n\n        var tempViewportH = Math.round(parseFloat(getComputedStyle(this._scrollContainerY).height));\n        var oldViewportHasVScroll = this._viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        this._viewportHasVScroll = !this._options.autoHeight && (numberOfRows * this._options.rowHeight > tempViewportH);\n\n        this.makeActiveCellNormal();\n\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var l = dataLengthIncludingAddNew - 1;\n        for (var x in this._rowsCache) {\n            var i = parseInt(x, 10);\n            if (i >= l) {\n                this.removeRowFromCache(i);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n\n        this._virtualHeight = Math.max(this._options.rowHeight * numberOfRows, tempViewportH - this._scrollDims.height);\n\n        if (this._activeCellNode && this._activeRow > l) {\n            this.resetActiveCell();\n        }\n\n        if (this._virtualHeight < getMaxSupportedCssHeight()) {\n            // just one page\n            this._realScrollHeight = this._pageHeight = this._virtualHeight;\n            this._numberOfPages = 1;\n            this._jumpinessCoefficient = 0;\n        } else {\n            // break into pages\n            this._realScrollHeight = getMaxSupportedCssHeight();\n            this._pageHeight = this._realScrollHeight / 100;\n            this._numberOfPages = Math.floor(this._virtualHeight / this._pageHeight);\n            this._jumpinessCoefficient = (this._virtualHeight - this._realScrollHeight) / (this._numberOfPages - 1);\n        }\n\n        if (this._realScrollHeight !== oldH) {\n            if (this._hasFrozenRows && !this._options.frozenBottom) {\n                this._canvasBottomL.style.height = this._realScrollHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasBottomR.style.height = this._realScrollHeight + 'px';\n                }\n            } else {\n                this._canvasTopL.style.height = this._realScrollHeight + 'px'\n                this._canvasTopR.style.height = this._realScrollHeight + 'px'\n            }\n\n            this._scrollTop = this._scrollContainerY.scrollTop;\n        }\n\n        var oldScrollTopInRange = (this._scrollTop + this._pageOffset <= this._virtualHeight - tempViewportH);\n\n        if (this._virtualHeight == 0 || this._scrollTop == 0) {\n            this._page = this._pageOffset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            this.scrollTo(this._scrollTop + this._pageOffset);\n        } else {\n            // scroll to bottom\n            this.scrollTo(this._virtualHeight - tempViewportH);\n        }\n\n        if (this._realScrollHeight != oldH && this._options.autoHeight) {\n            this.resizeCanvas();\n        }\n\n        if (this._options.forceFitColumns && oldViewportHasVScroll != this._viewportHasVScroll) {\n            this.autosizeColumns();\n        }\n        this.updateCanvasWidth(false);\n    }\n\n    /**\n     * @param viewportTop optional viewport top\n     * @param viewportLeft optional viewport left\n     * @returns viewport range\n     */\n    getViewport(viewportTop?: number, viewportLeft?: number): ViewRange {\n        return this.getVisibleRange(viewportTop, viewportLeft);\n    }\n\n    getVisibleRange(viewportTop?: number, viewportLeft?: number): ViewRange {\n        if (viewportTop == null) {\n            viewportTop = this._scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = this._scrollLeft;\n        }\n\n        return {\n            top: this.getRowFromPosition(viewportTop),\n            bottom: this.getRowFromPosition(viewportTop + this._viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + this._viewportW\n        };\n    }\n\n    getRenderedRange(viewportTop?: number, viewportLeft?: number): ViewRange {\n        var range = this.getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(this._viewportH / this._options.rowHeight);\n        var minBuffer = this._options.minBuffer || 3;\n\n        if (this._vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (this._vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(this.getDataLengthIncludingAddNew() - 1, range.bottom);\n\n        if (this._options.renderAllCells) {\n            range.leftPx = 0;\n            range.rightPx = this._canvasWidth;\n        }\n        else {\n            range.leftPx -= this._viewportW;\n            range.rightPx += this._viewportW;\n\n            range.leftPx = Math.max(0, range.leftPx);\n            range.rightPx = Math.min(this._canvasWidth, range.rightPx);\n        }\n\n        return range;\n    }\n\n    private ensureCellNodesInRowsCache(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNodeR?.lastElementChild ?? cacheEntry.rowNodeL?.lastElementChild;\n                while (lastChild && cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild as HTMLElement;\n                    lastChild = lastChild.previousElementSibling;\n\n                    if (lastChild == null)\n                        lastChild = cacheEntry.rowNodeL?.lastElementChild;\n                }\n            }\n        }\n    }\n\n    private cleanUpCells(range: ViewRange, row: number): void {\n        // Ignore frozen rows\n        if (this._hasFrozenRows\n            && ((this._options.frozenBottom && row > this._actualFrozenRow) // Frozen bottom rows\n                || (row <= this._actualFrozenRow)  // Frozen top rows\n            )\n        ) {\n            return;\n        }\n\n        var totalCellsRemoved = 0;\n        var cacheEntry = this._rowsCache[row];\n\n        // Remove cells outside the range.\n        var cellsToRemove = [], frozenCols = this._frozenCols;\n        for (var x in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                continue;\n            }\n\n            var i = parseInt(x, 10);\n\n            // Ignore frozen columns\n            if (i < frozenCols) {\n                continue;\n            }\n\n            var colspan = cacheEntry.cellColSpans[i], cols = this._cols;\n            if (this._colLeft[i] > range.rightPx || this._colRight[Math.min(cols.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == this._activeRow && i === this._activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n\n        var cellToRemove, node;\n        this._postProcessGroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n\n            if (this._options.enableAsyncPostRenderCleanup && this._postProcessedRows[row] && this._postProcessedRows[row][cellToRemove]) {\n                this.queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                node.parentElement.removeChild(node);\n            }\n\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (this._postProcessedRows[row]) {\n                delete this._postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n\n    private cleanUpAndRenderCells(range: ViewRange) {\n        var cacheEntry;\n        var stringArray: string[] = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        var cols = this._cols;\n\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = this._rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            this.ensureCellNodesInRowsCache(row);\n\n            this.cleanUpCells(range, row);\n\n            // Render missing cells.\n            cellsAdded = 0;\n\n            var metadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n\n            var d = this.getDataItem(row);\n\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = cols.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (this._colLeft[i] > range.rightPx) {\n                    break;\n                }\n\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += (colspan > 1 ? colspan - 1 : 0);\n                    continue;\n                }\n\n                var columnData = null;\n                colspan = 1;\n                if (metadata) {\n                    columnData = metadata[cols[i].id] || metadata[i];\n                    colspan = (columnData && columnData.colspan) || 1;\n                    if (colspan === \"*\") {\n                        colspan = ii - i;\n                    }\n                }\n\n                if (this._colRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    this.appendCellHtml(stringArray, row, i, colspan, d, columnData);\n                    cellsAdded++;\n                }\n\n                i += (colspan > 1 ? colspan - 1 : 0);\n            }\n\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n\n        if (!stringArray.length) {\n            return;\n        }\n\n        var x = document.createElement(\"div\");\n        x.innerHTML = stringArray.join(\"\");\n\n        var processedRow;\n        var node: HTMLElement, frozenCols = this._frozenCols;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = this._rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastElementChild as HTMLElement;\n\n                if (frozenCols > 0 && columnIdx >= frozenCols) {\n                    cacheEntry.rowNodeR.appendChild(node);\n                } else {\n                    cacheEntry.rowNodeL.appendChild(node);\n                }\n\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n\n    private renderRows(range: ViewRange): void {\n        var stringArrayL: string[] = [],\n            stringArrayR: string[] = [],\n            rows = [],\n            needToReselectCell = false,\n            dataLength = this.getDataLength();\n\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (this._rowsCache[i] || (this._hasFrozenRows && this._options.frozenBottom && i == dataLength)) {\n                continue;\n            }\n            rows.push(i);\n\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            this._rowsCache[i] = {\n                rowNodeL: null,\n                rowNodeR: null,\n\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                cellColSpans: [],\n\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                cellNodesByColumnIdx: [],\n\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                cellRenderQueue: []\n            };\n\n            this.appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n            if (this._activeCellNode && this._activeRow === i) {\n                needToReselectCell = true;\n            }\n        }\n\n        if (!rows.length) {\n            return;\n        }\n\n        var l = document.createElement(\"div\"),\n            r = document.createElement(\"div\");\n\n        l.innerHTML = stringArrayL.join(\"\");\n        r.innerHTML = stringArrayR.join(\"\");\n\n        var frozenRows = this._hasFrozenRows, actualFrozen = this._actualFrozenRow, frozenCols = this._frozenCols > 0;\n        var ctl = this._canvasTopL, ctr = this._canvasTopR, cbl = this._canvasBottomL, cbr = this._canvasBottomR;\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            var item = this._rowsCache[rows[i]];\n            item.rowNodeL = l.firstElementChild as HTMLDivElement;\n            item.rowNodeR = r.firstElementChild as HTMLDivElement;\n            if (frozenRows && (rows[i] >= actualFrozen)) {\n                item.rowNodeL && cbl.appendChild(item.rowNodeL);\n                frozenCols && item.rowNodeR && cbr.appendChild(item.rowNodeR);\n            }\n            else {\n                item.rowNodeL && ctl.appendChild(item.rowNodeL);\n                frozenCols && item.rowNodeR && ctr.appendChild(item.rowNodeR);\n            }\n        }\n\n        if (needToReselectCell) {\n            this._activeCellNode = this.getCellNode(this._activeRow, this._activeCell);\n        }\n    }\n\n    private startPostProcessing(): void {\n        if (!this._options.enableAsyncPostRender) {\n            return;\n        }\n\n        clearTimeout(this._hPostRender);\n\n        if (this._options.asyncPostRenderDelay < 0) {\n            this.asyncPostProcessRows();\n        } else {\n            this._hPostRender = setTimeout(this.asyncPostProcessRows.bind(this), this._options.asyncPostRenderDelay);\n        }\n    }\n\n    private startPostProcessingCleanup(): void {\n        if (!this._options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n\n        clearTimeout(this._hPostRenderCleanup);\n\n        if (this._options.asyncPostCleanupDelay < 0) {\n            this.asyncPostProcessCleanupRows();\n        }\n        else {\n            this._hPostRenderCleanup = setTimeout(this.asyncPostProcessCleanupRows.bind(this), this._options.asyncPostCleanupDelay);\n        }\n    }\n\n    private invalidatePostProcessingResults(row: number): void {\n        if (this._options.enableAsyncPostRenderCleanup) {\n            // change status of columns to be re-rendered\n            for (var columnIdx in this._postProcessedRows[row]) {\n                if (this._postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                    this._postProcessedRows[row][columnIdx] = 'C';\n                }\n            }\n        }\n        else {\n            delete this._postProcessedRows[row];\n        }\n\n        this._postProcessFromRow = Math.min(this._postProcessFromRow, row);\n        this._postProcessToRow = Math.max(this._postProcessToRow, row);\n        this.startPostProcessing();\n    }\n\n    private updateRowPositions(): void {\n        for (var row in this._rowsCache) {\n            var c = this._rowsCache[row];\n            var p = this.getRowTop(parseInt(row, 10)) + \"px\";\n            c.rowNodeL && (c.rowNodeL.style.top = p);\n            c.rowNodeR && (c.rowNodeR.style.top = p);\n        }\n    }\n\n    private updateFooterTotals(): void {\n        if (!this._options.showFooterRow || !this._initialized)\n            return;\n\n        var totals = null;\n        if (this._data.getGrandTotals) {\n            totals = this._data.getGrandTotals();\n        }\n\n        var cols = this._cols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var content;\n            if (m.field && totals) {\n                content = (m.groupTotalsFormatter && m.groupTotalsFormatter(totals, m, this)) ||\n                    (this.groupTotalsFormatter && this.groupTotalsFormatter(totals, m)) || \"\";\n            }\n\n            this.getFooterRowColumn(m.id).innerHTML = content;\n        }\n    }\n\n    private render(): void {\n        if (!this._initialized) { return; }\n        var visible = this.getVisibleRange();\n        var rendered = this.getRenderedRange();\n\n        // remove rows no longer in the viewport\n        this.cleanupRows(rendered);\n\n        // add new rows & missing cells in existing rows\n        if (this._scrolLLeftRendered != this._scrollLeft) {\n\n            if (this._hasFrozenRows) {\n\n                var renderedFrozenRows = Object.assign({}, rendered);\n\n                if (this._options.frozenBottom) {\n\n                    renderedFrozenRows.top = this._actualFrozenRow;\n                    renderedFrozenRows.bottom = this.getDataLength();\n                }\n                else {\n\n                    renderedFrozenRows.top = 0;\n                    renderedFrozenRows.bottom = this._options.frozenRow;\n                }\n\n                this.cleanUpAndRenderCells(renderedFrozenRows);\n            }\n\n            this.cleanUpAndRenderCells(rendered);\n        }\n\n        // render missing rows\n        this.renderRows(rendered);\n\n        // Render frozen rows\n        if (this._hasFrozenRows) {\n            if (this._options.frozenBottom) {\n                this.renderRows({\n                    top: this._actualFrozenRow, bottom: this.getDataLength() - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\n                });\n            }\n            else {\n                this.renderRows({\n                    top: 0, bottom: this._options.frozenRow - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\n                });\n            }\n        }\n\n        this._postProcessFromRow = visible.top;\n        this._postProcessToRow = Math.min(this.getDataLengthIncludingAddNew() - 1, visible.bottom);\n        this.startPostProcessing();\n\n        this._scrollTopRendered = this._scrollTop;\n        this._scrolLLeftRendered = this._scrollLeft;\n        this._hRender = null;\n    }\n\n    private handleHeaderRowScroll = (): void => {\n        if (this._ignoreScrollUntil >= new Date().getTime())\n            return;\n\n        var scrollLeft = (this.hasFrozenColumns ? this._headerRowColsR.parentElement.scrollLeft : this._headerRowColsL.parentElement.scrollLeft);\n        if (scrollLeft != this._scrollContainerX.scrollLeft) {\n            this._scrollContainerX.scrollLeft = scrollLeft;\n        }\n    }\n\n    private handleFooterRowScroll = (): void => {\n        if (this._ignoreScrollUntil >= new Date().getTime())\n            return;\n\n        var scrollLeft = (this.hasFrozenColumns ? this._footerRowColsR.parentElement.scrollLeft : this._footerRowColsL.parentElement.scrollLeft);\n        if (scrollLeft != this._scrollContainerX.scrollLeft) {\n            this._scrollContainerX.scrollLeft = scrollLeft;\n        }\n    }\n\n    private handleMouseWheel(e: JQueryEventObject, delta: number, deltaX: number, deltaY: number): void {\n        deltaX = (typeof deltaX == \"undefined\" ? (e as any).originalEvent.deltaX : deltaX) || 0;\n        deltaY = (typeof deltaY == \"undefined\" ? (e as any).originalEvent.deltaY : deltaY) || 0;\n        this._scrollTop = Math.max(0, this._scrollContainerY.scrollTop - (deltaY * this._options.rowHeight));\n        this._scrollLeft = this._scrollContainerX.scrollLeft + (deltaX * 10);\n        var handled = this._handleScroll(true);\n        if (handled)\n            e.preventDefault();\n    }\n\n    private handleScroll(): boolean {\n        this._scrollTop = this._scrollContainerY.scrollTop;\n        this._scrollLeft = this._scrollContainerX.scrollLeft;\n        return this._handleScroll(false);\n    }\n\n    private _handleScroll(isMouseWheel?: boolean): boolean {\n        var maxScrollDistanceY = this._scrollContainerY.scrollHeight - this._scrollContainerY.clientHeight;\n        var maxScrollDistanceX = this._scrollContainerY.scrollWidth - this._scrollContainerY.clientWidth;\n\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\n        // Sometimes seen in Chrome.\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\n\n        // Ceiling the max scroll values\n        if (this._scrollTop > maxScrollDistanceY) {\n            this._scrollTop = maxScrollDistanceY;\n        }\n        if (this._scrollLeft > maxScrollDistanceX) {\n            this._scrollLeft = maxScrollDistanceX;\n        }\n\n        var vScrollDist = Math.abs(this._scrollTop - this._scrollTopPrev);\n        var hScrollDist = Math.abs(this._scrollLeft - this._scrollLeftPrev);\n\n        if (hScrollDist || vScrollDist)\n            this._ignoreScrollUntil = new Date().getTime() + 100;\n\n        if (hScrollDist) {\n            this._scrollLeftPrev = this._scrollLeft;\n\n            this._scrollContainerX.scrollLeft = this._scrollLeft;\n\n            if (this.hasFrozenColumns()) {\n                this._headerColsR.parentElement.scrollLeft = this._scrollLeft;\n                this._topPanelR.parentElement.scrollLeft = this._scrollLeft;\n                this._headerRowColsR.parentElement.scrollLeft = this._scrollLeft;\n                this._footerRowColsR.parentElement.scrollLeft = this._scrollLeft;\n                if (this._hasFrozenRows) {\n                    this._viewportTopR.scrollLeft = this._scrollLeft;\n                }\n            } else {\n                this._headerColsL.parentElement.scrollLeft = this._scrollLeft;\n                this._topPanelL.parentElement.scrollLeft = this._scrollLeft;\n                this._headerRowColsL.parentElement.scrollLeft = this._scrollLeft;\n                this._footerRowColsL.parentElement.scrollLeft = this._scrollLeft;\n                if (this._hasFrozenRows) {\n                    this._viewportTopL.scrollLeft = this._scrollLeft;\n                }\n            }\n        }\n\n        if (vScrollDist) {\n            this._vScrollDir = this._scrollTopPrev < this._scrollTop ? 1 : -1;\n            this._scrollTopPrev = this._scrollTop;\n\n            if (isMouseWheel) {\n                this._scrollContainerY.scrollTop = this._scrollTop;\n            }\n\n            if (this.hasFrozenColumns()) {\n                if (this._hasFrozenRows && !this._options.frozenBottom) {\n                    this._viewportBottomL.scrollTop = this._scrollTop;\n                } else {\n                    this._viewportTopL.scrollTop = this._scrollTop;\n                }\n            }\n\n            // switch virtual pages if needed\n            if (vScrollDist < this._viewportH) {\n                this.scrollTo(this._scrollTop + this._pageOffset);\n            } else {\n                var oldOffset = this._pageOffset;\n                if (this._realScrollHeight == this._viewportH) {\n                    this._page = 0;\n                } else {\n                    this._page = Math.min(this._numberOfPages - 1, Math.floor(this._scrollTop * ((this._virtualHeight - this._viewportH) / (this._realScrollHeight - this._viewportH)) * (1 / this._pageHeight)));\n                }\n                this._pageOffset = Math.round(this._page * this._jumpinessCoefficient);\n                if (oldOffset != this._pageOffset) {\n                    this.invalidateAllRows();\n                }\n            }\n        }\n\n        if (hScrollDist || vScrollDist) {\n            if (this._hRender) {\n                clearTimeout(this._hRender);\n            }\n\n            if (Math.abs(this._scrollTopRendered - this._scrollTop) > 20 ||\n                Math.abs(this._scrolLLeftRendered - this._scrollLeft) > 20) {\n                if (this._options.forceSyncScrolling || (\n                    Math.abs(this._scrollTopRendered - this._scrollTop) < this._viewportH &&\n                    Math.abs(this._scrolLLeftRendered - this._scrollLeft) < this._viewportW)) {\n                    this.render();\n                } else {\n                    this._hRender = setTimeout(this.render.bind(this), 50);\n                }\n\n                this.trigger(this.onViewportChanged);\n            }\n        }\n\n        this.trigger(this.onScroll, { scrollLeft: this._scrollLeft, scrollTop: this._scrollTop });\n\n        return !!(hScrollDist || vScrollDist);\n    }\n\n    private asyncPostProcessRows(): void {\n        var dataLength = this.getDataLength();\n        var cols = this._cols;\n        while (this._postProcessFromRow <= this._postProcessToRow) {\n            var row = (this._vScrollDir >= 0) ? this._postProcessFromRow++ : this._postProcessToRow--;\n            var cacheEntry = this._rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n\n            if (!this._postProcessedRows[row]) {\n                this._postProcessedRows[row] = {};\n            }\n\n            this.ensureCellNodesInRowsCache(row);\n            for (var x in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                    continue;\n                }\n\n                var columnIdx = parseInt(x, 10);\n\n                var m = cols[columnIdx];\n                var processedStatus = this._postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=render\n                if (processedStatus !== 'R') {\n                    if (m.asyncPostRender || m.asyncPostRenderCleanup) {\n                        var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                        if (node) {\n                            m.asyncPostRender && m.asyncPostRender(node, row, this.getDataItem(row), m, processedStatus === 'C');\n                        }\n                    }\n                    this._postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n\n            if (this._options.asyncPostRenderDelay >= 0) {\n                this._hPostRender = setTimeout(this.asyncPostProcessRows.bind(this), this._options.asyncPostRenderDelay);\n                return;\n            }\n        }\n    }\n\n    private asyncPostProcessCleanupRows(): void {\n        var cols = this._cols;\n        while (this._postProcessCleanupQueue.length > 0) {\n            var groupId = this._postProcessCleanupQueue[0].groupId;\n\n            // loop through all queue members with this groupID\n            while (this._postProcessCleanupQueue.length > 0 && this._postProcessCleanupQueue[0].groupId == groupId) {\n                var entry = this._postProcessCleanupQueue.shift();\n                entry.rowNodeL && entry.rowNodeL.remove();\n                entry.rowNodeR && entry.rowNodeR.remove();\n                if (entry.cellNode != null) {\n                    var column = cols[entry.columnIdx];\n                    if (column && column.asyncPostRenderCleanup) {\n                        column.asyncPostRenderCleanup(entry.cellNode, entry.rowIdx, column);\n                        entry.cellNode.remove();\n                    }\n                }\n            }\n\n            // call this function again after the specified delay\n            if (this._options.asyncPostRenderDelay >= 0) {\n                this._hPostRenderCleanup = setTimeout(this.asyncPostProcessCleanupRows.bind(this), this._options.asyncPostCleanupDelay);\n                return;\n            }\n        }\n    }\n\n    private updateCellCssStylesOnRenderedRows(addedHash: CellStylesHash, removedHash: CellStylesHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in this._rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = this.getCellNode(parseInt(row, 10), this.getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = this.getCellNode(parseInt(row, 10), this.getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    addCellCssStyles(key: string, hash: CellStylesHash): void {\n        if (this._cellCssClasses[key]) {\n            throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n        }\n\n        this._cellCssClasses[key] = hash;\n        this.updateCellCssStylesOnRenderedRows(hash, null);\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: hash });\n    }\n\n    removeCellCssStyles(key: string): void {\n        if (!this._cellCssClasses[key]) {\n            return;\n        }\n\n        this.updateCellCssStylesOnRenderedRows(null, this._cellCssClasses[key]);\n        delete this._cellCssClasses[key];\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: null });\n    }\n\n    setCellCssStyles(key: string, hash: CellStylesHash): void {\n        var prevHash = this._cellCssClasses[key];\n\n        this._cellCssClasses[key] = hash;\n        this.updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: hash });\n    }\n\n    getCellCssStyles(key: string): CellStylesHash {\n        return this._cellCssClasses[key];\n    }\n\n    flashCell(row: number, cell: number, speed?: number): void {\n        speed = speed || 100;\n        if (this._rowsCache[row]) {\n            var $cell = $(this.getCellNode(row, cell));\n            toggleCellClass(4);\n        }\n\n        var klass = this._options.cellFlashingCssClass;\n\n        function toggleCellClass(times: number) {\n            if (!times) {\n                return;\n            }\n            setTimeout(function () {\n                $cell.queue(function () {\n                    $cell.toggleClass(klass).dequeue();\n                    toggleCellClass(times - 1);\n                });\n            }, speed);\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n\n    private handleDragInit(e: JQueryEventObject, dd: any): boolean {\n        var cell = this.getCellFromEvent(e);\n        if (!cell || !this.cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n\n        var retval = this.trigger(this.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n\n    private handleDragStart(e: JQueryEventObject, dd: any): boolean {\n        var cell = this.getCellFromEvent(e);\n        if (!cell || !this.cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n\n        var retval = this.trigger(this.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n\n        return false;\n    }\n\n    private handleDrag(e: JQueryEventObject, dd: any): any {\n        return this.trigger(this.onDrag, dd, e);\n    }\n\n    private handleDragEnd(e: JQueryEventObject, dd: any): void {\n        this.trigger(this.onDragEnd, dd, e);\n    }\n\n    private handleKeyDown(e: JQueryKeyEventObject): void {\n        this.trigger(this.onKeyDown, { row: this._activeRow, cell: this._activeCell }, e);\n        var handled = e.isImmediatePropagationStopped && e.isImmediatePropagationStopped();\n\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey) {\n                if (this._options.editable && this._currentEditor && this._currentEditor.keyCaptureList) {\n                    if (this._currentEditor.keyCaptureList.indexOf(e.which) >= 0) {\n                        return;\n                    }\n                }\n\n                if (e.which == keyCode.HOME) {\n                    if (e.ctrlKey) {\n                        this.navigateTop();\n                        handled = true;\n                    }\n                    else\n                        handled = this.navigateRowStart();\n                }\n                else if (e.which == keyCode.END) {\n                    if (e.ctrlKey) {\n                        this.navigateBottom();\n                        handled = true;\n                    }\n                    else\n                        handled = this.navigateRowEnd();\n                }\n            }\n        }\n\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n\n                if (this._options.editable && this._currentEditor && this._currentEditor.keyCaptureList) {\n                    if (this._currentEditor.keyCaptureList.indexOf(e.which) >= 0) {\n                        return;\n                    }\n                }\n\n                if (e.which == keyCode.ESCAPE) {\n                    if (!this.getEditorLock().isActive()) {\n                        return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    this.cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGEDOWN) {\n                    this.navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGEUP) {\n                    this.navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = this.navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = this.navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = this.navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = this.navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    if (this._options.enableTabKeyNavigation)\n                        handled = this.navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (this._options.editable) {\n                        if (this._currentEditor) {\n                            // adding new row\n                            if (this._activeRow === this.getDataLength()) {\n                                this.navigateDown();\n                            } else {\n                                this.commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (this.getEditorLock().commitCurrentEdit()) {\n                                this.makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = this.navigatePrev();\n            }\n        }\n\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                (e.originalEvent as JQueryKeyEventObject).keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            }\n            // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n\n    private handleClick(e: JQueryMouseEventObject): void {\n        if (!this._currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")) {\n                this.setFocus();\n            }\n        }\n\n        var cell = this.getCellFromEvent(e as any);\n        if (!cell || (this._currentEditor != null && this._activeRow == cell.row && this._activeCell == cell.cell)) {\n            return;\n        }\n\n        this.trigger(this.onClick, { row: cell.row, cell: cell.cell }, e);\n        if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n            return;\n        }\n\n        if (this.canCellBeActive(cell.row, cell.cell)) {\n            if (!this.getEditorLock().isActive() || this.getEditorLock().commitCurrentEdit()) {\n\n                var preClickModeOn = (e.target && e.target.classList.contains(preClickClassName));\n                var column = this._cols[cell.cell];\n                var suppressActiveCellChangedEvent = !!(this._options.editable && column && column.editor && this._options.suppressActiveCellChangeOnEdit);\n                this.setActiveCellInternal(this.getCellNode(cell.row, cell.cell), null, preClickModeOn, suppressActiveCellChangedEvent, e);\n            }\n        }\n    }\n\n    private handleContextMenu(e: JQueryMouseEventObject): void {\n        var $cell = $(e.target).closest(\".slick-cell\", this._container);\n        if ($cell.length === 0) {\n            return;\n        }\n\n        // are we editing this cell?\n        if (this._activeCellNode === $cell[0] && this._currentEditor != null) {\n            return;\n        }\n\n        this.trigger(this.onContextMenu, {}, e);\n    }\n\n    private handleDblClick(e: JQueryMouseEventObject): void {\n        var cell = this.getCellFromEvent(e as any);\n        if (!cell || (this._currentEditor != null && this._activeRow == cell.row && this._activeCell == cell.cell)) {\n            return;\n        }\n\n        this.trigger(this.onDblClick, { row: cell.row, cell: cell.cell }, e);\n        if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\n            return;\n        }\n\n        if (this._options.editable) {\n            this.gotoCell(cell.row, cell.cell, true);\n        }\n    }\n\n    private handleHeaderMouseEnter(e: MouseEvent): void {\n        const column = this.getColumnFromNode(e.target as HTMLElement)\n        column && this.trigger(this.onHeaderMouseEnter, { column }, e);\n    }\n\n    private handleHeaderMouseLeave(e: MouseEvent): void {\n        const column = this.getColumnFromNode(e.target as HTMLElement)\n        column && this.trigger(this.onHeaderMouseLeave, { column }, e);\n    }\n\n    private handleHeaderContextMenu(e: JQueryMouseEventObject): void {\n        var header = e.target.closest(\".slick-header-column\");\n        var column = this.getColumnFromNode(header);\n        column && this.trigger(this.onHeaderContextMenu, { column }, e);\n    }\n\n    private handleHeaderClick(e: JQueryMouseEventObject): void {\n        var header = e.target.closest(\".slick-header-column\");\n        var column = this.getColumnFromNode(header);\n        column && this.trigger(this.onHeaderClick, { column: column }, e);\n    }\n\n    private handleMouseEnter(e: MouseEvent): void {\n        this.trigger(this.onMouseEnter, {}, e);\n    }\n\n    private handleMouseLeave(e: MouseEvent): void {\n        this.trigger(this.onMouseLeave, {}, e);\n    }\n\n    private cellExists(row: number, cell: number): boolean {\n        return !(row < 0 || row >= this.getDataLength() || cell < 0 || cell >= this._cols.length);\n    }\n\n    getCellFromPoint(x: number, y: number): { row: number; cell: number; } {\n        var row = this.getRowFromPosition(y);\n        var cell = 0;\n        var cols = this._cols;\n        var w = 0;\n        for (var i = 0; i < cols.length && w < x; i++) {\n            w += cols[i].width;\n            cell++;\n        }\n\n        if (cell < 0) {\n            cell = 0;\n        }\n\n        return { row: row, cell: cell - 1 };\n    }\n\n    getCellFromNode(cellNode: Element): number {\n        if (cellNode == null)\n            return null;\n\n        var c = (cellNode as HTMLElement).dataset.c;\n        if (c != null)\n            return parseInt(c, 10);\n\n        // read column number from .l<columnNumber> CSS class\n        var cls = /\\sl(\\d+)\\s/.exec(' ' + cellNode.className + ' ');\n        if (!cls) {\n            return null;\n        }\n        return parseInt(cls[1], 10);\n    }\n\n    getColumnFromNode(cellNode: Element): Column<TItem> {\n        if (cellNode == null)\n            return null;\n\n        var cell = this.getCellFromNode(cellNode);\n        if (cell === null && typeof $ !== \"undefined\")\n            return $(cell).data(\"column\") as Column<TItem>;\n\n        return this._cols[cell];\n    }\n\n    getRowFromNode(rowNode: Element): number {\n        if (rowNode != null) {\n            for (var row in this._rowsCache) {\n                var c = this._rowsCache[row];\n                if (c.rowNodeL === rowNode || c.rowNodeR === rowNode)\n                    return parseInt(row, 10);\n            }\n        }\n        return null;\n    }\n\n    private getFrozenRowOffset(row: number): any {\n        var offset =\n            (this._hasFrozenRows)\n                ? (this._options.frozenBottom)\n                    ? (row >= this._actualFrozenRow)\n                        ? (this._realScrollHeight < this._viewportTopH)\n                            ? (this._actualFrozenRow * this._options.rowHeight)\n                            : this._realScrollHeight\n                        : 0\n                    : (row >= this._actualFrozenRow)\n                        ? this._frozenRowsHeight\n                        : 0\n                : 0;\n\n        return offset;\n    }\n\n    getCellFromEvent(e: any): { row: number; cell: number; } {\n        var row, cell;\n        var cellEl = (e.target as HTMLElement).closest(\".slick-cell\") as HTMLElement;\n        if (!cellEl) {\n            return null;\n        }\n\n        row = this.getRowFromNode(cellEl.parentNode as HTMLElement);\n\n        if (this._hasFrozenRows) {\n\n            var bcr = cellEl.closest('.grid-canvas').getBoundingClientRect();\n\n            var rowOffset = 0;\n            var isBottom = cellEl.closest('.grid-canvas-bottom') != null;\n\n            if (isBottom) {\n                rowOffset = (this._options.frozenBottom) ? Math.round(parseFloat(getComputedStyle(this._canvasTopL).height)) : this._frozenRowsHeight;\n            }\n\n            row = this.getCellFromPoint(e.clientX - bcr[this._rtlS] - document.body.scrollLeft, e.clientY - bcr.top + document.body.scrollTop + rowOffset + document.body.scrollTop).row;\n        }\n\n        cell = this.getCellFromNode(cellEl);\n\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                \"row\": row,\n                \"cell\": cell\n            };\n        }\n    }\n\n    getCellNodeBox(row: number, cell: number): { top: number; right: number; bottom: number; left: number; } {\n        if (!this.cellExists(row, cell)) {\n            return null;\n        }\n\n        var frozenRowOffset = this.getFrozenRowOffset(row);\n        var cols = this._cols, frozenCols = this._frozenCols;\n        var y1 = this.getRowTop(row) - frozenRowOffset;\n        var y2 = y1 + this._options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += cols[i].width;\n            if (i == frozenCols - 1) {\n                x1 = 0;\n            }\n        }\n        var x2 = x1 + cols[cell].width;\n\n        return this._rtl ? {\n            top: y1,\n            right: x1,\n            bottom: y2,\n            left: x2\n        } : {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n\n    resetActiveCell(): void {\n        this.setActiveCellInternal(null, false);\n    }\n\n    focus(): void {\n        this.setFocus();\n    }\n\n    private setFocus(): void {\n        if (this._tabbingDirection == -1) {\n            this._focusSink1.focus();\n        } else {\n            this._focusSink2.focus();\n        }\n    }\n\n    scrollCellIntoView(row: number, cell: number, doPaging?: boolean): void {\n        this.scrollRowIntoView(row, doPaging);\n\n        if (cell < this._frozenCols)\n            return;\n\n        var colspan = this.getColspan(row, cell);\n        this.internalScrollColumnIntoView(this._colLeft[cell], this._colRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n\n    scrollColumnIntoView(cell: number): void {\n        this.internalScrollColumnIntoView(this._colLeft[cell], this._colRight[cell]);\n    }\n\n    internalScrollColumnIntoView(left: number, right: number): void {\n\n        var scrollRight = this._scrollLeft + parseFloat(getComputedStyle(this._scrollContainerX).width) -\n            (this._viewportHasVScroll ? this._scrollDims.width : 0);\n\n        var target;\n        if (left < this._scrollLeft)\n            target = left;\n        else if (right > scrollRight)\n            target = Math.min(left, right - this._scrollContainerX.clientWidth);\n        else\n            return;\n\n        this._scrollContainerX.scrollLeft = target;\n        this.handleScroll();\n        this.render();\n    }\n\n    private setActiveCellInternal(newCell: HTMLElement, opt_editMode?: boolean, preClickModeOn?: boolean, suppressActiveCellChangedEvent?: boolean, e?: any): void {\n        if (this._activeCellNode != null) {\n            this.makeActiveCellNormal();\n            this._activeCellNode.classList.remove(\"active\");\n            var c = this._rowsCache[this._activeRow];\n            if (c) {\n                c.rowNodeL && c.rowNodeL.classList.remove(\"active\");\n                c.rowNodeR && c.rowNodeR.classList.remove(\"active\");\n            }\n        }\n\n        this._activeCellNode = newCell;\n\n        if (this._activeCellNode != null) {\n            var bcl = this._activeCellNode.getBoundingClientRect();\n\n            var rowOffset = Math.floor(this._activeCellNode.closest('.grid-canvas').getBoundingClientRect().top + document.body.scrollTop);\n            var isBottom = this._activeCellNode.closest('.grid-canvas-bottom') != null;\n\n            if (this._hasFrozenRows && isBottom) {\n                rowOffset -= (this._options.frozenBottom)\n                    ? Math.round(parseFloat(getComputedStyle(this._canvasTopL).height))\n                    : this._frozenRowsHeight;\n            }\n\n            var cell = this.getCellFromPoint(bcl[this._rtlS] + document.body.scrollLeft, Math.ceil(bcl.top + document.body.scrollTop) - rowOffset);\n\n            this._activeRow = cell.row;\n            this._activeCell = this._activePosX = this.getCellFromNode(this._activeCellNode);\n\n            if (this._options.showCellSelection) {\n                this._activeCellNode.classList.add(\"active\");\n                var c = this._rowsCache[this._activeRow];\n                if (c) {\n                    c.rowNodeL && c.rowNodeL.classList.add(\"active\");\n                    c.rowNodeR && c.rowNodeR.classList.add(\"active\");\n                }\n            }\n\n            if (opt_editMode == null) {\n                opt_editMode = (this._activeRow == this.getDataLength()) || this._options.autoEdit;\n            }\n\n            if (this._options.editable && opt_editMode && this.isCellPotentiallyEditable(this._activeRow, this._activeCell)) {\n                clearTimeout(this._hEditorLoader);\n\n                if (this._options.asyncEditorLoading) {\n                    this._hEditorLoader = setTimeout(() => {\n                        this.makeActiveCellEditable(undefined, preClickModeOn, e);\n                    }, this._options.asyncEditorLoadDelay);\n                } else {\n                    this.makeActiveCellEditable(undefined, preClickModeOn, e);\n                }\n            }\n        } else {\n            this._activeRow = this._activeCell = null;\n        }\n\n        if (!suppressActiveCellChangedEvent) {\n            this.trigger(this.onActiveCellChanged, this.getActiveCell() as ArgsCell);\n        }\n    }\n\n    clearTextSelection(): void {\n        if ((document as any).selection && (document as any).selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                (document as any).selection.empty();\n            } catch (e) { }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n\n    private isCellPotentiallyEditable(row: number, cell: number): boolean {\n        var dataLength = this.getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !this.getDataItem(row)) {\n            return false;\n        }\n\n        // are we in the Add New row?  can we create new from this cell?\n        if (this._cols[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n\n        // does this cell have an editor?\n        if (!this.getEditor(row, cell)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private makeActiveCellNormal(): void {\n        if (!this._currentEditor) {\n            return;\n        }\n        this.trigger(this.onBeforeCellEditorDestroy, { editor: this._currentEditor });\n        this._currentEditor.destroy();\n        this._currentEditor = null;\n\n        if (this._activeCellNode) {\n            var d = this.getDataItem(this._activeRow);\n            this._activeCellNode.classList.remove(\"editable\", \"invalid\");\n            if (d) {\n                var column = this._cols[this._activeCell];\n                var fmtResult = d ? this.getFormatter(this._activeRow, column)(this._activeRow, this._activeCell,\n                    this.getDataItemValueForColumn(d, column), column, d) : \"\";\n                this.applyFormatResultToCellNode(fmtResult, this._activeCellNode);\n                this.invalidatePostProcessingResults(this._activeRow);\n            }\n        }\n\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            this.clearTextSelection();\n        }\n\n        this.getEditorLock().deactivate(this._editController);\n    }\n\n    editActiveCell(editor?: Editor): void {\n        this.makeActiveCellEditable(editor);\n    }\n\n    private makeActiveCellEditable(editor?: Editor, preClickModeOn?: boolean, e?: any): void {\n        if (!this._activeCellNode) {\n            return;\n        }\n        if (!this._options.editable) {\n            throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n        }\n\n        // cancel pending async call if there is one\n        clearTimeout(this._hEditorLoader);\n\n        if (!this.isCellPotentiallyEditable(this._activeRow, this._activeCell)) {\n            return;\n        }\n\n        var columnDef = this._cols[this._activeCell];\n        var item = this.getDataItem(this._activeRow);\n\n        if (this.trigger(this.onBeforeEditCell, { row: this._activeRow, cell: this._activeCell, item: item, column: columnDef }) === false) {\n            this.setFocus();\n            return;\n        }\n\n        this.getEditorLock().activate(this._editController);\n        this._activeCellNode.classList.add(\"editable\");\n\n        var useEditor = editor || this.getEditor(this._activeRow, this._activeCell);\n\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            this._activeCellNode.innerHTML = \"\";\n        }\n\n        var metadata = this._data.getItemMetadata && this._data.getItemMetadata(this._activeRow);\n        metadata = metadata && metadata.columns;\n        var columnMetaData = metadata && (metadata[columnDef.id] || metadata[this._activeCell]);\n\n        this._currentEditor = new useEditor({\n            grid: this,\n            gridPosition: this.absBox(this._container),\n            position: this.absBox(this._activeCellNode),\n            container: this._activeCellNode,\n            column: columnDef,\n            item: item || {},\n            event: e,\n            commitChanges: this.commitEditAndSetFocus,\n            cancelChanges: this.cancelEditAndSetFocus\n        });\n\n        if (item) {\n            this._currentEditor.loadValue(item);\n            if (preClickModeOn && this._currentEditor.preClick) {\n                this._currentEditor.preClick();\n            }\n        }\n\n        this._serializedEditorValue = this._currentEditor.serializeValue();\n\n        if (this._currentEditor.position) {\n            this.handleActiveCellPositionChange();\n        }\n    }\n\n    private commitEditAndSetFocus(): void {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (this.getEditorLock().commitCurrentEdit()) {\n            this.setFocus();\n            if (this._options.autoEdit) {\n                this.navigateDown();\n            }\n        }\n    }\n\n    private cancelEditAndSetFocus(): void {\n        if (this.getEditorLock().cancelCurrentEdit()) {\n            this.setFocus();\n        }\n    }\n\n    private absBox(elem: HTMLElement): Position {\n        var box: Position = {\n            top: elem.offsetTop,\n            bottom: 0,\n            width: elem.offsetWidth,\n            height: elem.offsetHeight,\n            visible: true\n        };\n\n        box[this._rtlS] = elem.offsetLeft;\n        box[this._rtlE] = 0;\n\n        box.bottom = box.top + box.height;\n        box[this._rtlE] = box[this._rtlS] + box.width;\n\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode as HTMLElement) != document.body) {\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && getComputedStyle(elem).overflowY !== \"visible\") {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && getComputedStyle(elem).overflowX != \"visible\") {\n                box.visible = box[this._rtlE] > elem.scrollLeft && box[this._rtlS] < elem.scrollLeft + elem.clientWidth;\n            }\n\n            box[this._rtlS] -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n\n            if (elem === offsetParent) {\n                box.right += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n\n            box.bottom = box.top + box.height;\n            box[this._rtlE] = box[this._rtlS] + box.width;\n        }\n\n        return box;\n    }\n\n    private getActiveCellPosition(): Position {\n        return this.absBox(this._activeCellNode);\n    }\n\n    getGridPosition(): Position {\n        return this.absBox(this._container);\n    }\n\n    private handleActiveCellPositionChange = (): void => {\n        if (!this._activeCellNode) {\n            return;\n        }\n\n        this.trigger(this.onActiveCellPositionChanged, {});\n\n        if (this._currentEditor) {\n            var cellBox = this.getActiveCellPosition();\n            if (this._currentEditor.show && this._currentEditor.hide) {\n                if (!cellBox.visible) {\n                    this._currentEditor.hide();\n                } else {\n                    this._currentEditor.show();\n                }\n            }\n\n            if (this._currentEditor.position) {\n                this._currentEditor.position(cellBox);\n            }\n        }\n    }\n\n    getCellEditor(): Editor {\n        return this._currentEditor;\n    }\n\n    getActiveCell(): RowCell {\n        if (!this._activeCellNode) {\n            return null;\n        } else {\n            return { row: this._activeRow, cell: this._activeCell };\n        }\n    }\n\n    getActiveCellNode(): HTMLElement {\n        return this._activeCellNode;\n    }\n\n    scrollActiveCellIntoView(): void {\n        if (this._activeRow != null && this._activeCell != null) {\n            this.scrollCellIntoView(this._activeRow, this._activeCell);\n        }\n    }\n\n    scrollRowIntoView(row: number, doPaging?: boolean): void {\n\n        if (!this._hasFrozenRows ||\n            (!this._options.frozenBottom && row > this._actualFrozenRow - 1) ||\n            (this._options.frozenBottom && row < this._actualFrozenRow - 1)) {\n\n            var viewportScrollH = Math.round(parseFloat(getComputedStyle(this._scrollContainerY).height));\n\n            var rowNumber = (this._hasFrozenRows && !this._options.frozenBottom ? row - this._options.frozenRow : row);\n\n            // if frozen row on top subtract number of frozen row\n            var rowAtTop = rowNumber * this._options.rowHeight;\n            var rowAtBottom = (rowNumber + 1) * this._options.rowHeight\n                - viewportScrollH\n                + (this._viewportHasHScroll ? this._scrollDims.height : 0);\n\n            // need to page down?\n            if ((rowNumber + 1) * this._options.rowHeight > this._scrollTop + viewportScrollH + this._pageOffset) {\n                this.scrollTo(doPaging ? rowAtTop : rowAtBottom);\n                this.render();\n            }\n            // or page up?\n            else if (rowNumber * this._options.rowHeight < this._scrollTop + this._pageOffset) {\n                this.scrollTo(doPaging ? rowAtBottom : rowAtTop);\n                this.render();\n            }\n        }\n    }\n\n    scrollRowToTop(row: number): void {\n        this.scrollTo(row * this._options.rowHeight);\n        this.render();\n    }\n\n    private scrollPage(dir: number): void {\n        var deltaRows = dir * this._numVisibleRows;\n        this.scrollTo((this.getRowFromPosition(this._scrollTop) + deltaRows) * this._options.rowHeight);\n        this.render();\n\n        if (this._options.enableCellNavigation && this._activeRow != null) {\n            var row = this._activeRow + deltaRows;\n            var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n\n            var cell = 0, prevCell = null;\n            var prevActivePosX = this._activePosX;\n            while (cell <= this._activePosX) {\n                if (this.canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += this.getColspan(row, cell);\n            }\n\n            if (prevCell != null) {\n                this.setActiveCellInternal(this.getCellNode(row, prevCell));\n                this._activePosX = prevActivePosX;\n            } else {\n                this.resetActiveCell();\n            }\n        }\n    }\n\n    navigatePageDown(): void {\n        this.scrollPage(1);\n    }\n\n    navigatePageUp(): void {\n        this.scrollPage(-1);\n    }\n\n    navigateTop(): void {\n        this.navigateToRow(0);\n    }\n\n    navigateBottom(): void {\n        this.navigateToRow(this.getDataLength() - 1);\n    }\n\n    navigateToRow(row: number) {\n        var dataLength = this.getDataLength();\n        if (!dataLength) {\n            return true;\n        }\n\n        if (row < 0)\n            row = 0;\n        else if (row >= dataLength)\n            row = dataLength - 1;\n\n        this.scrollCellIntoView(row, 0, true);\n\n        if (this._options.enableCellNavigation && this._activeRow != null) {\n            var cell = 0, prevCell = null;\n            var prevActivePosX = this._activePosX;\n            while (cell <= this._activePosX) {\n                if (this.canCellBeActive(row, cell))\n                    prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (prevCell != null) {\n                this.setActiveCellInternal(this.getCellNode(row, prevCell));\n                this._activePosX = prevActivePosX;\n            }\n            else\n                this.resetActiveCell();\n        }\n\n        return true;\n    }\n\n    getColspan(row: number, cell: number): number {\n        var itemMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row) as ItemMetadata;\n        if (!itemMetadata || !itemMetadata.columns) {\n            return 1;\n        }\n\n        var cols = this._cols;\n        var columnData = cols[cell] && (itemMetadata.columns[cols[cell].id] || itemMetadata.columns[cell]);\n        var colspan = (columnData && columnData.colspan);\n        if (colspan === \"*\") {\n            colspan = cols.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n\n        return colspan;\n    }\n\n    private findFirstFocusableCell(row: number): number {\n        var cell = 0;\n        var cols = this._cols;\n        while (cell < cols.length) {\n            if (this.canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += this.getColspan(row, cell);\n        }\n        return null;\n    }\n\n    private findLastFocusableCell(row: number): number {\n        var cell = 0;\n        var lastFocusableCell = null;\n        var cols = this._cols;\n        while (cell < cols.length) {\n            if (this.canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += this.getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n\n    private gotoRight(row?: number, cell?: number, posX?: number): GoToResult {\n        var cols = this._cols;\n        if (cell >= cols.length) {\n            return null;\n        }\n\n        do {\n            cell += this.getColspan(row, cell);\n        }\n        while (cell < cols.length && !this.canCellBeActive(row, cell));\n\n        if (cell < cols.length) {\n            return {\n                row: row,\n                cell: cell,\n                posX: cell\n            };\n        }\n        return null;\n    }\n\n    private gotoLeft(row?: number, cell?: number, posX?: number): GoToResult {\n        if (cell <= 0) {\n            return null;\n        }\n\n        var firstFocusableCell = this.findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n\n        var prev = {\n            row: row,\n            cell: firstFocusableCell,\n            posX: firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = this.gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n\n    private gotoDown(row?: number, cell?: number, posX?: number): GoToResult {\n        var prevCell;\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (this.canCellBeActive(row, prevCell)) {\n                return {\n                    row: row,\n                    cell: prevCell,\n                    posX: posX\n                };\n            }\n        }\n    }\n\n    private gotoUp(row?: number, cell?: number, posX?: number): GoToResult {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (this.canCellBeActive(row, prevCell)) {\n                return {\n                    row: row,\n                    cell: prevCell,\n                    posX: posX\n                };\n            }\n        }\n    }\n\n    private gotoNext(row?: number, cell?: number, posX?: number): GoToResult {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (this.canCellBeActive(row, cell)) {\n                return {\n                    row: row,\n                    cell: cell,\n                    posX: cell\n                };\n            }\n        }\n\n        var pos = this.gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = this.findFirstFocusableCell(row);\n            if (firstFocusableCell != null) {\n                return {\n                    row: row,\n                    cell: firstFocusableCell,\n                    posX: firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n\n    private gotoPrev(row?: number, cell?: number, posX?: number): { row: number; cell: number; posX: number; } {\n        var cols = this._cols;\n        if (row == null && cell == null) {\n            row = this.getDataLengthIncludingAddNew() - 1;\n            cell = posX = cols.length - 1;\n            if (this.canCellBeActive(row, cell)) {\n                return {\n                    row: row,\n                    cell: cell,\n                    posX: cell\n                };\n            }\n        }\n\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = this.gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n\n            cell = 0;\n            lastSelectableCell = this.findLastFocusableCell(row);\n            if (lastSelectableCell != null) {\n                pos = {\n                    row: row,\n                    cell: lastSelectableCell,\n                    posX: lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n\n    private gotoRowStart(row: number) {\n        var newCell = this.findFirstFocusableCell(row);\n        if (newCell === null)\n            return null;\n\n        return {\n            row: row,\n            cell: newCell,\n            posX: newCell\n        };\n    }\n\n    private gotoRowEnd(row: number) {\n        var newCell = this.findLastFocusableCell(row);\n        if (newCell === null)\n            return null;\n\n        return {\n            row: row,\n            cell: newCell,\n            posX: newCell\n        };\n    }\n\n    navigateRight(): boolean {\n        return this.navigate(\"right\");\n    }\n\n    navigateLeft(): boolean {\n        return this.navigate(\"left\");\n    }\n\n    navigateDown(): boolean {\n        return this.navigate(\"down\");\n    }\n\n    navigateUp(): boolean {\n        return this.navigate(\"up\");\n    }\n\n    navigateNext(): boolean {\n        return this.navigate(\"next\");\n    }\n\n    navigatePrev(): boolean {\n        return this.navigate(\"prev\");\n    }\n\n    navigateRowStart(): boolean {\n        return this.navigate(\"home\");\n    }\n\n    navigateRowEnd(): boolean {\n        return this.navigate(\"end\");\n    }\n\n    /**\n     * @param {string} dir Navigation direction.\n     * @return {boolean} Whether navigation resulted in a change of active cell.\n     */\n    navigate(dir: string): boolean {\n        if (!this._options.enableCellNavigation) {\n            return false;\n        }\n\n        if (!this._activeCellNode && dir != \"prev\" && dir != \"next\") {\n            return false;\n        }\n\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        this.setFocus();\n\n        var tabbingDirections = {\n            up: -1,\n            down: 1,\n            prev: -1,\n            next: 1,\n            home: -1,\n            end: 1\n        };\n\n        tabbingDirections[this._rtlS] = -1;\n        tabbingDirections[this._rtlE] = 1;\n\n        this._tabbingDirection = tabbingDirections[dir];\n\n        var stepFunctions = {\n            up: this.gotoUp,\n            down: this.gotoDown,\n            prev: this.gotoPrev,\n            next: this.gotoNext,\n            home: this.gotoRowStart,\n            end: this.gotoRowEnd\n        };\n\n        stepFunctions[this._rtlS] = this.gotoLeft;\n        stepFunctions[this._rtlE] = this.gotoRight;\n\n        var stepFn = stepFunctions[dir].bind(this);\n        var pos = stepFn(this._activeRow, this._activeCell, this._activePosX);\n        if (pos) {\n            if (this._hasFrozenRows && this._options.frozenBottom && pos.row == this.getDataLength()) {\n                return;\n            }\n\n            var isAddNewRow = (pos.row == this.getDataLength());\n\n            if ((!this._options.frozenBottom && pos.row >= this._actualFrozenRow)\n                || (this._options.frozenBottom && pos.row < this._actualFrozenRow)\n            ) {\n                this.scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            }\n\n            this.setActiveCellInternal(this.getCellNode(pos.row, pos.cell))\n            this._activePosX = pos.posX;\n            return true;\n        } else {\n            this.setActiveCellInternal(this.getCellNode(this._activeRow, this._activeCell));\n            return false;\n        }\n    }\n\n    getCellNode(row: number, cell: number): HTMLElement {\n        if (this._rowsCache[row]) {\n            this.ensureCellNodesInRowsCache(row);\n            return this._rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n\n    setActiveCell(row: number, cell: number) {\n        if (!this._initialized) { return; }\n        var cols = this._cols;\n        if (row > this.getDataLength() || row < 0 || cell >= cols.length || cell < 0) {\n            return;\n        }\n\n        if (!this._options.enableCellNavigation) {\n            return;\n        }\n\n        this.scrollCellIntoView(row, cell, false);\n        this.setActiveCellInternal(this.getCellNode(row, cell), false);\n    }\n\n    private canCellBeActive(row: number, cell: number): boolean {\n        var cols = this._cols;\n        if (!this._options.enableCellNavigation || row >= this.getDataLengthIncludingAddNew() ||\n            row < 0 || cell >= cols.length || cell < 0) {\n            return false;\n        }\n\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === \"boolean\") {\n            return rowMetadata.focusable;\n        }\n\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && cols[cell] && columnMetadata[cols[cell].id] && typeof columnMetadata[cols[cell].id].focusable === \"boolean\") {\n            return columnMetadata[cols[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\") {\n            return columnMetadata[cell].focusable;\n        }\n\n        return cols[cell].focusable;\n    }\n\n    canCellBeSelected(row: number, cell: number) {\n        var cols = this._cols;\n        if (row >= this.getDataLength() || row < 0 || cell >= cols.length || cell < 0) {\n            return false;\n        }\n\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === \"boolean\") {\n            return rowMetadata.selectable;\n        }\n\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[cols[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === \"boolean\") {\n            return columnMetadata.selectable;\n        }\n\n        return cols[cell].selectable;\n    }\n\n    gotoCell(row: number, cell: number, forceEdit?: boolean) {\n        if (!this._initialized) { return; }\n        if (!this.canCellBeActive(row, cell)) {\n            return;\n        }\n\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n\n        this.scrollCellIntoView(row, cell, false);\n\n        var newCell = this.getCellNode(row, cell);\n\n        // if selecting the 'add new' row, start editing right away\n        this.setActiveCellInternal(newCell, forceEdit || (row === this.getDataLength()) || this._options.autoEdit);\n\n        // if no editor was created, set the focus back on the grid\n        if (!this._currentEditor) {\n            this.setFocus();\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n\n    commitCurrentEdit(): boolean {\n        var item = this.getDataItem(this._activeRow);\n        var column = this._cols[this._activeCell];\n        var self = this;\n\n        if (this._currentEditor) {\n            if (this._currentEditor.isValueChanged()) {\n                var validationResults = this._currentEditor.validate();\n\n                if (validationResults.valid) {\n                    if (this._activeRow < this.getDataLength()) {\n                        var editCommand: EditCommand = {\n                            row: this._activeRow,\n                            cell: self._activeCell,\n                            editor: this._currentEditor,\n                            serializedValue: this._currentEditor.serializeValue(),\n                            prevSerializedValue: this._serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                self.updateRow(this.row);\n                                self.trigger(self.onCellChange, {\n                                    row: this.activeRow,\n                                    cell: self._activeCell,\n                                    item: item\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                self.updateRow(this.row);\n                                self.trigger(self.onCellChange, {\n                                    row: this.activeRow,\n                                    cell: self._activeCell,\n                                    item: item\n                                });\n                            }\n                        };\n\n                        if (this._options.editCommandHandler) {\n                            this.makeActiveCellNormal();\n                            this._options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            this.makeActiveCellNormal();\n                        }\n\n                    } else {\n                        var newItem = {} as TItem;\n                        this._currentEditor.applyValue(newItem, this._currentEditor.serializeValue());\n                        this.makeActiveCellNormal();\n                        this.trigger(this.onAddNewRow, { item: newItem, column: column });\n                    }\n\n                    // check whether the lock has been re-acquired by event handlers\n                    return !this.getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    this._activeCellNode.classList.remove(\"invalid\");\n                    this._activeCellNode.offsetWidth;  // force layout\n                    this._activeCellNode.classList.add(\"invalid\");\n\n                    this.trigger(this.onValidationError, {\n                        editor: this._currentEditor,\n                        cellNode: this._activeCellNode,\n                        validationResults: validationResults,\n                        row: this._activeRow,\n                        cell: this._activeCell,\n                        column: column\n                    });\n\n                    this._currentEditor.focus();\n                    return false;\n                }\n            }\n\n            this.makeActiveCellNormal();\n        }\n        return true;\n    }\n\n    private cancelCurrentEdit() {\n        this.makeActiveCellNormal();\n        return true;\n    }\n\n    private rowsToRanges(rows: number[]): Range[] {\n        var ranges = [];\n        var lastCell = this._cols.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n\n    getSelectedRows(): number[] {\n        if (!this._selectionModel) {\n            throw \"Selection model is not set\";\n        }\n        return this._selectedRows;\n    }\n\n    setSelectedRows(rows: number[]) {\n        if (!this._selectionModel) {\n            throw \"Selection model is not set\";\n        }\n        this._selectionModel.setSelectedRanges(this.rowsToRanges(rows));\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACsCO,MAAM,iBAAkC;AAAA,IAC3C,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,YAAY;AAAA,EAChB;;;AClDA,MAAM,EAAE,OAAO,WAAW,kBAAkB,SAAS,YAAY,mBAAmB,MAAM,IAAI;;;ACI9F,MAAI;AACJ,MAAI;AAEG,WAAS,yBAAyB,SAAmB,SAAsB;AAC9E,SAAI,mCAAS,iBAAgB,MAAM;AAC/B,aAAO,QAAQ;AACf;AAAA,IACJ;AAEA,QAAI,WAAW,QAAQ,eAAe;AACtC,YAAQ,eAAe;AACvB,QAAI,IAAI;AACR,WAAO,IAAI,QAAQ,QAAQ;AACvB,UAAI,MAAM,QAAQ;AAClB,UAAI,WAAW,KAAK,IAAI,YAAY,OAAO;AACvC,YAAI,SAAS;AACb,gBAAQ;AACR;AAAA,MACJ,WACS,IAAI,WAAW;AACpB,eAAO,IAAI;AAAA,IACnB;AAAA,EACJ;AAEO,WAAS,WAAW,GAAW;AAClC,QAAI,KAAK;AACL,aAAO;AAEX,WAAO,EACF,QAAQ,MAAM,OAAO,EACrB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,MAAM,EACpB,QAAQ,MAAM,QAAQ;AAAA,EAC/B;AAEO,WAAS,iBAAiB,IAAY,IAAY,OAAY;AACjE,WAAO,WAAW,KAAK;AAAA,EAC3B;AAEO,WAAS,iBAAiB,QAAqB;AAClD,QAAI,QAAQ;AACR,aAAO,aAAa,gBAAgB,IAAI;AACxC,aAAO,MAAM,aAAa;AAC1B,aAAO,iBAAiB,eAAe,MAAM,KAAK;AAAA,IACtD;AAAA,EACJ;AAEO,WAAS,2BAAmC;AAC/C,WAAO,wDAA2B,UAAU,UAAU,YAAY,EAAE,MAAM,SAAS,IAAI,MAAU;AAAA,EACrG;AAEO,WAAS,uBAAuB,QAAkB;AACrD,QAAI,CAAC,uBAAuB,QAAQ;AAChC,UAAI,IAAI,SAAS,KAAK,YAAY,EAAE,OAAO;AAAA,QACvC,OAAO;AAAA,MACX,CAAC,CAAC;AACF,4BAAsB;AAAA,QAClB,OAAO,KAAK,MAAM,EAAE,cAAc,EAAE,WAAW;AAAA,QAC/C,QAAQ,KAAK,MAAM,EAAE,cAAc,EAAE,YAAY;AAAA,MACrD;AACA,QAAE,OAAO;AAAA,IACb;AACA,WAAO;AAAA,EACX;AAEO,WAAS,EAAyC,KAAQ,SAAiD,UAA4C;AAC1J,QAAI,KAAK,SAAS,cAAc,GAAG;AACnC,QAAI,GAAW,GAAuB;AACtC,QAAI,MAAM;AACN,WAAK,KAAK,MAAM;AACZ,YAAI,KAAK;AACT,YAAI,KAAK,QAAQ,MAAM;AACnB,aAAG,aAAa,GAAG,MAAM,OAAO,KAAK,CAAC;AAAA,MAC9C;AAAA,IACJ;AACA,QAAI,UAAU;AACV,WAAK,KAAK;AACN,WAAG,YAAY,CAAC;AAAA,IACxB;AACA,WAAO;AAAA,EACX;AAEO,WAAS,WAAW,GAAW;AAClC,YAAQ,IAAI,IAAI,QAAQ,MAAM,OAAO,EAAE,QAAQ,MAAM,MAAM,EAAE,QAAQ,MAAM,MAAM;AAAA,EACrF;AAEO,WAAS,kBAAkB,MAAgB,MAAgB;AAC9D,QAAI,CAAC,MAAM,QAAQ,IAAI,KAAK,CAAC,MAAM,QAAQ,IAAI,KAAK,KAAK,WAAW,KAAK;AACrE,aAAO;AACX,SAAK,KAAK;AACV,SAAK,KAAK;AACV,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,UAAI,KAAK,OAAO,KAAK;AACjB,eAAO;AAAA,IACf;AACA,WAAO;AAAA,EACX;AAQQ,WAAS,8BAA8B,SAAmB,SAA6B;AAC3F,QAAI,QAAQ,UAAU;AAClB,aAAO;AAEX,QAAI,YAAuC,CAAC,GACxC,aAAwC,CAAC,GACzC,SAAmB,CAAC;AAExB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ;AAChC,gBAAU,QAAQ,MAAM;AAE5B,SAAK,IAAI,GAAG,IAAI,QAAQ,QAAQ;AAC5B,iBAAW,QAAQ,GAAG,MAAM;AAEhC,aAAS,SAASA,IAAW;AACzB,eAAS,IAAIA,IAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,YAAIC,KAAI,QAAQ;AAChB,YAAID,MAAK,KAAK,UAAUC,GAAE,OAAO;AAC7B;AACJ,eAAO,KAAKA,EAAC;AACb,mBAAWA,GAAE,MAAM;AAAA,MACvB;AAAA,IACJ;AAEA,QAAI,UAAU,QAAQ,GAAG,OAAO;AAC5B,eAAS,CAAC;AAEd,aAAS,MAAM,SAAS;AACpB,UAAI,WAAW;AACf,UAAI,KAAK;AACL,iBAAS,CAAC;AAAA,IAClB;AAEA,SAAK,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACjC,UAAI,IAAI,QAAQ;AAChB,UAAI,WAAW,EAAE,OAAO,MAAM;AAC1B,eAAO,KAAK,CAAC;AACb,mBAAW,EAAE,MAAM;AAAA,MACvB;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,kBAAkB;AAxJlC;AAyJI,KAAC,kCAAsB,cAAtB,mBAAiC,IAAI;AAAA,EAC1C;AAEO,WAAS,qBAAqB;AA5JrC;AA6JI,KAAC,kCAAsB,cAAtB,mBAAiC,OAAO;AAAA,EAC7C;;;ACvFO,MAAM,eAA4B;AAAA,IACrC,mBAAmB;AAAA,IACnB,6BAA6B;AAAA,IAC7B,0BAA0B;AAAA,IAC1B,sBAAsB;AAAA,IACtB,oBAAoB;AAAA,IACpB,uBAAuB;AAAA,IACvB,sBAAsB;AAAA,IACtB,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,sBAAsB;AAAA,IACtB,8BAA8B;AAAA,IAC9B,oBAAoB;AAAA,IACpB;AAAA,IACA,UAAU;AAAA,IACV,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,uBAAuB;AAAA,IACvB,8BAA8B;AAAA,IAC9B,sBAAsB;AAAA,IACtB,qBAAqB;AAAA,IACrB,wBAAwB;AAAA,IACxB,4BAA4B;AAAA,IAC5B,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,WAAW;AAAA,IACX,eAAe;AAAA,IACf,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,sBAAsB;AAAA,IACtB,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,cAAc;AAAA,IACd,gCAAgC;AAAA,IAChC,gBAAgB;AAAA,EACpB;;;AC5GO,MAAM,OAAN,MAAwB;AAAA,IA+J3B,YAAY,WAAiC,MAAW,SAA0B,SAA6B;AA1J/G,WAAQ,kBAA+B;AAIvC,WAAQ,mBAA2B;AAInC,WAAQ,kBAAkC,CAAC;AAC3C,WAAQ,kBAA0B;AAClC,WAAQ,iBAAyB;AAGjC,WAAQ,WAAqB,CAAC;AAC9B,WAAQ,YAAsB,CAAC;AAI/B,WAAQ,iBAAyB;AAIjC,WAAQ,cAAsB;AAC9B,WAAQ,oBAA4B;AACpC,WAAQ,kBAA0B;AAClC,WAAQ,iBAAiB;AACzB,WAAQ,yBAAiC;AACzC,WAAQ,cAAsB;AAG9B,WAAQ,iBAAyB;AACjC,WAAQ,eAAuB;AAC/B,WAAQ,sBAA8B;AACtC,WAAQ,WAAmB;AAC3B,WAAQ,qBAA6B;AAGrC,WAAQ,eAAe;AAGvB,WAAQ,kBAA0B;AAElC,WAAQ,QAAgB;AAExB,WAAQ,cAAsB;AAC9B,WAAQ,gBAAyB;AACjC,WAAQ,oBAA6B;AACrC,WAAQ,eAAuB;AAC/B,WAAQ,YAAoB;AAC5B,WAAQ,WAAsB,CAAC;AAC/B,WAAQ,2BAAsD,CAAC;AAC/D,WAAQ,qBAA0B,CAAC;AACnC,WAAQ,sBAA8B;AACtC,WAAQ,sBAA8B;AACtC,WAAQ,oBAA4B;AAEpC,WAAQ,aAA2C,CAAC;AACpD,WAAQ,OAAO;AACf,WAAQ,QAAQ;AAChB,WAAQ,QAAQ;AAEhB,WAAQ,cAAsB;AAC9B,WAAQ,kBAA0B;AAClC,WAAQ,sBAA8B;AACtC,WAAQ,aAAqB;AAC7B,WAAQ,iBAAyB;AACjC,WAAQ,qBAA6B;AACrC,WAAQ,gBAA0B,CAAC;AAGnC,WAAQ,eAA6B,CAAC;AAGtC,WAAQ,oBAA4B;AACpC,WAAQ,aAAqB;AAC7B,WAAQ,OAAe,eAAe,KAAK,MAAM,MAAU,KAAK,OAAO,CAAC;AAIxE,WAAQ,gBAAwB;AAGhC,WAAQ,cAAsB;AAE9B,WAAQ,uBAAsC,CAAC;AAkC/C,WAAS,sBAAsB,IAAI,MAAgB;AACnD,WAAS,8BAA8B,IAAI,MAAgB;AAC3D,WAAS,cAAc,IAAI,MAAqB;AAChD,WAAS,4BAA4B,IAAI,MAAyB;AAClE,WAAS,kBAAkB,IAAI,MAAgB;AAC/C,WAAS,mBAAmB,IAAI,MAAoB;AACpD,WAAS,+BAA+B,IAAI,MAAsB;AAClE,WAAS,4BAA4B,IAAI,MAAsB;AAC/D,WAAS,+BAA+B,IAAI,MAAsB;AAClE,WAAS,eAAe,IAAI,MAAsB;AAClD,WAAS,yBAAyB,IAAI,MAAoB;AAC1D,WAAS,UAAU,IAAI,MAAwC;AAC/D,WAAS,qBAAqB,IAAI,MAAgB;AAClD,WAAS,mBAAmB,IAAI,MAAgB;AAChD,WAAS,gBAAgB,IAAI,MAAmC;AAChE,WAAS,aAAa,IAAI,MAAwC;AAClE,WAAS,SAAS,IAAI,MAAmC;AACzD,WAAS,YAAY,IAAI,MAAmC;AAC5D,WAAS,aAAa,IAAI,MAAmC;AAC7D,WAAS,cAAc,IAAI,MAAmC;AAC9D,WAAS,0BAA0B,IAAI,MAAsB;AAC7D,WAAS,uBAAuB,IAAI,MAAsB;AAC1D,WAAS,gBAAgB,IAAI,MAAkB;AAC/C,WAAS,sBAAsB,IAAI,MAAkB;AACrD,WAAS,qBAAqB,IAAI,MAA8B;AAChE,WAAS,qBAAqB,IAAI,MAA8B;AAChE,WAAS,0BAA0B,IAAI,MAAsB;AAC7D,WAAS,YAAY,IAAI,MAAsC;AAC/D,WAAS,eAAe,IAAI,MAA4B;AACxD,WAAS,eAAe,IAAI,MAA4B;AACxD,WAAS,WAAW,IAAI,MAAkB;AAC1C,WAAS,wBAAwB,IAAI,MAA8B;AACnE,WAAS,SAAS,IAAI,MAAgB;AACtC,WAAS,oBAAoB,IAAI,MAA2B;AAC5D,WAAS,oBAAoB,IAAI,MAAgB;AAwlDjD,WAAQ,8BAA8B,CAAC,GAAe,WAA0B;AAC5E,YAAI,uBAAuB,KAAK,cAAc,MAAM,CAAC;AACrD,aAAK,gBAAgB,CAAC;AACtB,YAAI,OAAO,CAAC,GAAG,OAAO,KAAK;AAC3B,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,mBAAS,IAAI,OAAO,GAAG,SAAS,KAAK,OAAO,GAAG,OAAO,KAAK;AACvD,gBAAI,CAAC,KAAK,IAAI;AACV,mBAAK,cAAc,KAAK,CAAC;AACzB,mBAAK,KAAK,CAAC;AAAA,YACf;AACA,qBAAS,IAAI,OAAO,GAAG,UAAU,KAAK,OAAO,GAAG,QAAQ,KAAK;AACzD,kBAAI,KAAK,kBAAkB,GAAG,CAAC,GAAG;AAC9B,qBAAK,GAAG,KAAK,GAAG,MAAM,KAAK,SAAS;AAAA,cACxC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,aAAK,iBAAiB,KAAK,SAAS,sBAAsB,IAAI;AAE9D,YAAI,CAAC,kBAAkB,sBAAsB,KAAK,aAAa,GAAG;AAC9D,cAAI,SAAS,KAAM,EAAU,UAAW,EAAU,OAAO,UAAU;AACnE,cAAI,uBAAuB,KAAK,cAAc,OAAO,CAAAC,OAAK,qBAAqB,QAAQA,EAAC,IAAI,CAAC;AAC7F,cAAI,uBAAuB,qBAAqB,OAAO,CAAAA,OAAK,KAAK,cAAc,QAAQA,EAAC,IAAI,CAAC;AAE7F,eAAK,QAAQ,KAAK,uBAAuB;AAAA,YACrC,MAAM,KAAK,gBAAgB;AAAA,YAC3B;AAAA,YACA;AAAA,YACA,qBAAqB;AAAA,YACrB,uBAAuB;AAAA,UAC3B,GAAG,CAAC;AAAA,QACR;AAEA,aAAK,gBAAgB,CAAC;AACtB,YAAI,OAAO,CAAC,GAAG,OAAO,KAAK;AAC3B,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,mBAAS,IAAI,OAAO,GAAG,SAAS,KAAK,OAAO,GAAG,OAAO,KAAK;AACvD,gBAAI,CAAC,KAAK,IAAI;AACV,mBAAK,cAAc,KAAK,CAAC;AACzB,mBAAK,KAAK,CAAC;AAAA,YACf;AACA,qBAAS,IAAI,OAAO,GAAG,UAAU,KAAK,OAAO,GAAG,QAAQ,KAAK;AACzD,kBAAI,KAAK,kBAAkB,GAAG,CAAC,GAAG;AAC9B,qBAAK,GAAG,KAAK,GAAG,MAAM,KAAK,SAAS;AAAA,cACxC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AA6IA,WAAQ,wBAAwB,MAAM;AAClC,aAAK,eAAe;AACpB,aAAK,OAAO;AAAA,MAChB;AAEA,WAAQ,oBAAoB,CAAC,GAAQ,SAAmC;AACpE,aAAK,eAAe,KAAK,IAAI;AAC7B,aAAK,OAAO;AACZ,aAAK,mBAAmB;AAAA,MAC5B;AAEA,WAAQ,oBAAoB,MAAY;AACpC,aAAK,WAAW;AAChB,aAAK,OAAO;AAAA,MAChB;AA6kBA,0BAAe,MAAY;AACvB,YAAI,CAAC,KAAK,cAAc;AACpB;AAAA,QACJ;AAEA,aAAK,YAAY;AACjB,aAAK,eAAe;AACpB,aAAK,gBAAgB;AAErB,aAAK,iBAAiB;AACtB,aAAK,kBAAkB;AAGvB,YAAI,KAAK,gBAAgB;AACrB,cAAI,KAAK,SAAS,cAAc;AAC5B,iBAAK,YAAY,KAAK,aAAa,KAAK,oBAAoB,KAAK,YAAY;AAC7E,iBAAK,eAAe,KAAK,oBAAoB,KAAK,YAAY;AAAA,UAClE,OAAO;AACH,iBAAK,YAAY,KAAK;AACtB,iBAAK,eAAe,KAAK,aAAa,KAAK;AAAA,UAC/C;AAAA,QACJ,OAAO;AACH,eAAK,YAAY,KAAK;AAAA,QAC1B;AAGA,aAAK,aAAa,KAAK,aAAa,KAAK,cAAc,KAAK;AAE5D,YAAI,KAAK,iBAAiB,KAAK,KAAK,SAAS,YAAY;AACrD,eAAK,aAAa,KAAK,YAAY;AAAA,QACvC;AAGA,aAAK,gBAAgB,KAAK,YAAY,KAAK,aAAa,KAAK,cAAc,KAAK;AAEhF,YAAI,KAAK,SAAS,YAAY;AAC1B,cAAI,KAAK,iBAAiB,GAAG;AACzB,iBAAK,WAAW,MAAM,SAAS,KAAK,YAAY,WAAW,iBAAiB,KAAK,aAAa,aAAa,EAAE,MAAM,IAAI;AAAA,UAC3H;AAEA,eAAK,UAAU,MAAM,WAAW;AAAA,QACpC;AAEI,eAAK,UAAU,MAAM,WAAW;AAEpC,aAAK,UAAU,MAAM,MAAO,KAAK,mBAAmB,WAAW,iBAAiB,KAAK,YAAY,EAAE,MAAM,KAAK,KAAK,eAAgB;AACnI,aAAK,UAAU,MAAM,SAAS,KAAK,YAAY;AAE/C,YAAI,gBAAgB,KAAK,UAAU,YAAY,KAAK;AAEpD,YAAI,CAAC,KAAK,SAAS,YAAY;AAC3B,eAAK,cAAc,MAAM,SAAS,KAAK,gBAAgB;AAAA,QAC3D;AAEA,YAAI,KAAK,iBAAiB,GAAG;AACzB,eAAK,UAAU,MAAM,MAAM,KAAK,UAAU,MAAM;AAChD,eAAK,UAAU,MAAM,SAAS,KAAK,YAAY;AAE/C,eAAK,cAAc,MAAM,SAAS,KAAK,gBAAgB;AAEvD,cAAI,KAAK,gBAAgB;AACrB,iBAAK,aAAa,MAAM,MAAM,gBAAgB;AAC9C,iBAAK,aAAa,MAAM,SAAS,KAAK,eAAe;AAErD,iBAAK,aAAa,MAAM,MAAM,gBAAgB;AAC9C,iBAAK,aAAa,MAAM,SAAS,KAAK,eAAe;AAErD,iBAAK,iBAAiB,MAAM,SAAS,KAAK,eAAe;AAAA,UAC7D;AAAA,QACJ,OAAO;AACH,cAAI,KAAK,gBAAgB;AACrB,iBAAK,aAAa,MAAM,QAAQ;AAChC,iBAAK,aAAa,MAAM,SAAS,KAAK,eAAe;AAErD,iBAAK,aAAa,MAAM,MAAM,gBAAgB;AAAA,UAClD;AAAA,QACJ;AAEA,YAAI,KAAK,gBAAgB;AACrB,eAAK,iBAAiB,MAAM,SAAS,KAAK,eAAe;AAEzD,cAAI,KAAK,SAAS,cAAc;AAC5B,iBAAK,eAAe,MAAM,SAAS,KAAK,oBAAoB;AAE5D,gBAAI,KAAK,iBAAiB,GAAG;AACzB,mBAAK,eAAe,MAAM,SAAS,KAAK,oBAAoB;AAAA,YAChE;AAAA,UACJ,OAAO;AACH,iBAAK,YAAY,MAAM,SAAS,KAAK,oBAAoB;AAEzD,gBAAI,KAAK,iBAAiB,GAAG;AACzB,mBAAK,YAAY,MAAM,SAAS,KAAK,oBAAoB;AAAA,YAC7D;AAAA,UACJ;AAAA,QACJ,OAAO;AACH,eAAK,cAAc,MAAM,SAAS,KAAK,gBAAgB;AAAA,QAC3D;AAEA,YAAI,CAAC,KAAK,eAAe,CAAC,KAAK,YAAY,OAAO;AAC9C,eAAK,cAAc,uBAAuB,IAAI;AAAA,QAClD;AAEA,YAAI,KAAK,SAAS,iBAAiB;AAC/B,eAAK,gBAAgB;AAAA,QACzB;AAEA,aAAK,eAAe;AACpB,aAAK,aAAa;AAElB,aAAK,sBAAsB;AAC3B,aAAK,OAAO;AAAA,MAChB;AA+gBA,WAAQ,wBAAwB,MAAY;AACxC,YAAI,KAAK,sBAAsB,IAAI,KAAK,EAAE,QAAQ;AAC9C;AAEJ,YAAI,aAAc,KAAK,mBAAmB,KAAK,gBAAgB,cAAc,aAAa,KAAK,gBAAgB,cAAc;AAC7H,YAAI,cAAc,KAAK,kBAAkB,YAAY;AACjD,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAEA,WAAQ,wBAAwB,MAAY;AACxC,YAAI,KAAK,sBAAsB,IAAI,KAAK,EAAE,QAAQ;AAC9C;AAEJ,YAAI,aAAc,KAAK,mBAAmB,KAAK,gBAAgB,cAAc,aAAa,KAAK,gBAAgB,cAAc;AAC7H,YAAI,cAAc,KAAK,kBAAkB,YAAY;AACjD,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAi8BA,WAAQ,iCAAiC,MAAY;AACjD,YAAI,CAAC,KAAK,iBAAiB;AACvB;AAAA,QACJ;AAEA,aAAK,QAAQ,KAAK,6BAA6B,CAAC,CAAC;AAEjD,YAAI,KAAK,gBAAgB;AACrB,cAAI,UAAU,KAAK,sBAAsB;AACzC,cAAI,KAAK,eAAe,QAAQ,KAAK,eAAe,MAAM;AACtD,gBAAI,CAAC,QAAQ,SAAS;AAClB,mBAAK,eAAe,KAAK;AAAA,YAC7B,OAAO;AACH,mBAAK,eAAe,KAAK;AAAA,YAC7B;AAAA,UACJ;AAEA,cAAI,KAAK,eAAe,UAAU;AAC9B,iBAAK,eAAe,SAAS,OAAO;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AAn9HI,WAAK,QAAQ;AAKb,WAAK,eAAe,OAAO,OAAO,CAAC,GAAG,cAAc;AAKpD,UAAI,OAAO,WAAW,eAAe,qBAAqB;AACtD,aAAK,aAAa,UAAU;AAAA,eACvB,qBAAqB;AAC1B,aAAK,aAAa;AAAA,eACb,OAAO,cAAc;AAC1B,aAAK,aAAa,SAAS,cAAc,SAAS;AAEtD,UAAI,KAAK,cAAc,MAAM;AACzB,cAAM,IAAI,MAAM,2CAA2C,YAAY,6BAA6B;AAAA,MACxG;AAEA,WAAK,WAAW,UAAU,IAAI,iBAAiB;AAE/C,WAAK,OAAO,SAAS,KAAK,UAAU,SAAS,KAAK,KAAM,OAAO,oBAAoB,eAC/E,iBAAiB,KAAK,UAAU,EAAE,aAAa;AACnD,UAAI,KAAK,MAAM;AACX,aAAK,QAAQ;AACb,aAAK,QAAQ;AAAA,MACjB;AAEA,UAAI,mCAAS,sBAAsB;AAE/B,YAAI,QAAQ,iBAAiB;AACzB,kBAAQ,gBAAgB;AAC5B,YAAI,QAAQ,uBAAuB,QAAQ,QAAQ,wBAAwB;AACvE,kBAAQ,sBAAsB,QAAQ;AAC1C,YAAI,QAAQ,qBAAqB,QAAQ,QAAQ,sBAAsB;AACnE,kBAAQ,oBAAoB,QAAQ;AAAA,MAC5C;AAEA,gBAAU,OAAO,OAAO,CAAC,GAAG,cAAc,OAAO;AACjD,WAAK,WAAW;AAChB,WAAK,0BAA0B;AAC/B,WAAK,aAAa,QAAQ,QAAQ;AAElC,+BAAyB,SAAS,KAAK,QAAQ;AAC/C,WAAK,eAAe,OAAO;AAE3B,WAAK,kBAAkB;AAAA,QACnB,qBAAqB,KAAK,kBAAkB,KAAK,IAAI;AAAA,QACrD,qBAAqB,KAAK,kBAAkB,KAAK,IAAI;AAAA,MACzD;AAEA,UAAI,OAAO,MAAM;AACb,UAAE,KAAK,UAAU,EAAE,MAAM;AAAA;AAEzB,aAAK,WAAW,YAAY;AAEhC,WAAK,WAAW,MAAM,WAAW;AACjC,WAAK,WAAW,MAAM,UAAU;AAChC,WAAK,WAAW,UAAU,IAAI,KAAK,IAAI;AAEvC,UAAI,KAAK,SAAS;AACd,aAAK,WAAW,UAAU,IAAI,WAAW;AAG7C,UAAI,CAAC,0BAA0B,KAAK,iBAAiB,KAAK,UAAU,EAAE,QAAQ,GAAG;AAC7E,aAAK,WAAW,MAAM,WAAW;AAAA,MACrC;AAEA,WAAK,WAAW,YAAY,KAAK,cAAc,EAAE,OAAO;AAAA,QACpD,OAAO;AAAA,QACP,WAAW;AAAA,QACX,OAAO;AAAA,QACP,UAAU;AAAA,MACd,CAAC,CAAC;AAEF,UAAI,QAAQ,eAAe;AACvB,aAAK,WAAW,YAAY,KAAK,iBAAiB,EAAE,OAAO;AAAA,UACvD,OAAO;AAAA,UACP,OAAO,yCAAyC,CAAC,QAAQ,oBAAoB,mBAAmB;AAAA,QACpG,CAAC,CAAC;AAEF,YAAI,QAAQ,sBAAsB;AAC9B,eAAK,eAAe,YAAY,EAAE,OAAO,EAAE,OAAO,wBAAuB,CAAC,CAAC;AAAA,QAC/E;AAAA,MACJ;AAEA,YAAM,OAAO,KAAK,SAAS,cAAc,sBAAsB;AAE/D,UAAI,UAAU,KAAK,eAAe,KAAK,KAAK,cAAc,uBAAuB,GAAG,QAAQ;AAG5F,WAAK,eAAe;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,gDAAgD,UAAU,IAAI;AAAA,QAChG;AAAA,UAAE;AAAA,UAAO,EAAE,OAAO,mCAAmC,MAAM,OAAO,CAAC,QAAQ,oBAAoB,gBAAgB;AAAA,UAC3G,KAAK,eAAe,EAAE,OAAO,EAAE,OAAO,kDAAkD,OAAO,KAAK,QAAQ,WAAW,CAAC;AAAA,QAAC;AAAA,MAAC;AAGlI,WAAK,eAAe;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,iDAAiD,UAAU,IAAI;AAAA,QACjG;AAAA,UAAE;AAAA,UAAO,EAAE,OAAO,oCAAoC,MAAM,OAAO,CAAC,QAAQ,oBAAoB,gBAAgB;AAAA,UAC5G,KAAK,eAAe,EAAE,OAAO,EAAE,OAAO,mDAAmD,OAAO,KAAK,QAAQ,WAAW,CAAC;AAAA,QAAC;AAAA,MAAC;AAGnI,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,oBAAoB,MAAM,OAAO,CAAC,QAAQ,iBAAiB,gBAAgB;AAAA,QAC1G,KAAK,kBAAkB,EAAE,OAAO,EAAE,OAAO,uDAAuD,CAAC;AAAA,QACjG,KAAK,oBAAoB,EAAE,OAAO,EAAE,OAAO,4DAA4D,OAAO,QAAQ,CAAC;AAAA,MAAC;AAE5H,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,6BAA6B,MAAM,OAAO,CAAC,QAAQ,gBAAgB,gBAAgB;AAAA,QAClH,KAAK,aAAa,EAAE,OAAO,EAAE,OAAO,mBAAmB,OAAO,iBAAiB,CAAC;AAAA,MAAC;AAErF,WAAK,gBAAgB;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,yDAAyD,UAAU,KAAK,WAAW,GAAG;AAAA,QACzH,KAAK,cAAc,EAAE,OAAO,EAAE,OAAO,gDAAgD,UAAU,KAAK,WAAW,GAAG,CAAC;AAAA,MAAC;AAExH,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,oBAAoB,MAAM,OAAO,CAAC,QAAQ,iBAAiB,gBAAgB;AAAA,QAC1G,KAAK,kBAAkB,EAAE,OAAO,EAAE,OAAO,uDAAuD,CAAC;AAAA,QACjG,KAAK,oBAAoB,EAAE,OAAO,EAAE,OAAO,4DAA4D,OAAO,QAAQ,CAAC;AAAA,MAAC;AAE5H,WAAK,YAAY;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,6CAA6C,UAAU,IAAI;AAAA,QAC1F;AAAA,QAAY;AAAA,QAAY,KAAK;AAAA,QAAe;AAAA,MAAU;AAG1D,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,oBAAoB,MAAM,OAAO,CAAC,QAAQ,iBAAiB,gBAAgB;AAAA,QAC1G,KAAK,kBAAkB,EAAE,OAAO,EAAE,OAAO,wDAAwD,CAAC;AAAA,QAClG,KAAK,oBAAoB,EAAE,OAAO,EAAE,OAAO,4DAA4D,OAAO,QAAQ,CAAC;AAAA,MAAC;AAE5H,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,6BAA6B,MAAM,OAAO,CAAC,QAAQ,gBAAgB,gBAAgB;AAAA,QAClH,KAAK,aAAa,EAAE,OAAO,EAAE,OAAO,mBAAmB,OAAO,iBAAiB,CAAC;AAAA,MAAC;AAErF,WAAK,gBAAgB;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,0DAA0D,UAAU,KAAK,WAAW,GAAG;AAAA,QAC1H,KAAK,cAAc,EAAE,OAAO,EAAE,OAAO,iDAAiD,UAAU,KAAK,WAAW,GAAG,CAAC;AAAA,MAAC;AAEzH,UAAI,aAAa;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,qBAAqB,MAAM,OAAO,CAAC,QAAQ,iBAAiB,gBAAgB;AAAA,QAC3G,KAAK,kBAAkB,EAAE,OAAO,EAAE,OAAO,wDAAwD,CAAC;AAAA,QAClG,KAAK,oBAAoB,EAAE,OAAO,EAAE,OAAO,4DAA4D,OAAO,QAAQ,CAAC;AAAA,MAAC;AAE5H,WAAK,YAAY;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,8CAA8C,UAAU,IAAI;AAAA,QAC3F;AAAA,QAAY;AAAA,QAAY,KAAK;AAAA,QAAe;AAAA,MAAU;AAG1D,WAAK,eAAe;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,gDAAgD,UAAU,IAAI;AAAA,QAChG,KAAK,mBAAmB;AAAA,UAAE;AAAA,UAAO,EAAE,OAAO,4DAA4D,UAAU,KAAK,WAAW,GAAG;AAAA,UAC/H,KAAK,iBAAiB,EAAE,OAAO,EAAE,OAAO,mDAAmD,UAAU,KAAK,WAAW,GAAG,CAAC;AAAA,QAAC;AAAA,MAAC;AAEnI,WAAK,eAAe;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,iDAAiD,UAAU,IAAI;AAAA,QACjG,KAAK,mBAAmB,EAAE,OAAO,EAAE,OAAO,6DAA6D,UAAU,KAAK,WAAW,GAAG,CAAC;AAAA,QACrI,KAAK,iBAAiB,EAAE,OAAO,EAAE,OAAO,oDAAoD,UAAU,KAAK,WAAW,GAAG,CAAC;AAAA,MAAC;AAE/H,WAAK,WAAW;AAAA,QACZ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,cAAc,KAAK,YAAY,UAAU;AAAA,MAAmB;AAErE,UAAI,QAAQ;AACR,aAAK,aAAa,EAAE,QAAQ,QAAM,GAAG,UAAU,IAAI,QAAQ,aAAc,CAAC;AAE9E,UAAI,CAAC,QAAQ,wBAAwB;AACjC,aAAK,KAAK;AAAA,MACd;AAEA,WAAK,WAAW;AAAA,IACpB;AAAA,IAEA,OAAa;AACT,UAAI,KAAK;AACL;AAEJ,WAAK,eAAe;AAEpB,WAAK,iBAAiB;AACtB,WAAK,kBAAkB;AAIvB,WAAK,4BAA4B;AAGjC,uBAAiB,KAAK,YAAY;AAClC,uBAAiB,KAAK,YAAY;AAElC,UAAI,YAAY,KAAK,aAAa;AAElC,UAAI,OAAO,MAAM,eAAe,CAAC,KAAK,SAAS,4BAA4B;AAGvE,UAAE,SAAS,EAAE,GAAG,kBAAkB,WAAY;AAC1C,iBAAO,EAAE,IAAI,EAAE,GAAG,gBAAgB;AAAA,QACtC,CAAC;AAAA,MACL;AAEA,WAAK,sBAAsB;AAC3B,WAAK,kBAAkB;AACvB,WAAK,YAAY;AACjB,WAAK,YAAY;AAEjB,WAAK,uBAAuB;AAC5B,WAAK,oBAAoB;AACzB,WAAK,oBAAoB;AACzB,WAAK,gBAAgB;AACrB,WAAK,eAAe;AACpB,WAAK,aAAa;AAClB,WAAK,yBAAyB;AAE9B,WAAK,WAAW,iBAAiB,UAAU,KAAK,YAAY;AAE5D,gBAAU,QAAQ,QAAM,GAAG,iBAAiB,UAAU,KAAK,aAAa,KAAK,IAAI,CAAC,CAAC;AAEnF,UAAI,OAAO,MAAM,eAAgB,EAAE,GAAW,eAAe,KAAK,iBAAiB,KAAK,KAAK,iBAAiB;AAC1G,UAAE,SAAS,EAAE,GAAG,cAAc,KAAK,iBAAiB,KAAK,IAAI,CAAC;AAAA,MAClE;AAEA,OAAC,KAAK,aAAa,eAAe,KAAK,aAAa,aAAa,EAAE,QAAQ,QAAM;AAC7E,WAAG,iBAAiB,eAAe,KAAK,wBAAwB,KAAK,IAAI,CAAC;AAC1E,WAAG,iBAAiB,SAAS,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAC9D,WAAG,iBAAiB,cAAc,OAAM,EAAE,OAAuB,QAAQ,sBAAsB,KAC3F,KAAK,uBAAuB,CAAC,CAAC;AAClC,WAAG,iBAAiB,cAAc,OAAM,EAAE,OAAuB,QAAQ,sBAAsB,KAC3F,KAAK,uBAAuB,CAAC,CAAC;AAAA,MACtC,CAAC;AAED,WAAK,gBAAgB,cAAc,iBAAiB,UAAU,KAAK,qBAAqB;AACxF,WAAK,gBAAgB,cAAc,iBAAiB,UAAU,KAAK,qBAAqB;AAExF,WAAK,gBAAgB,cAAc,iBAAiB,UAAU,KAAK,qBAAqB;AACxF,WAAK,gBAAgB,cAAc,iBAAiB,UAAU,KAAK,qBAAqB;AAExF,OAAC,KAAK,aAAa,KAAK,WAAW,EAAE,QAAQ,QAAM,GAAG,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC,CAAC;AAEhH,UAAI,WAAW,MAAM,KAAK,KAAK,YAAY,CAAC;AAC5C,eAAS,QAAQ,YAAU;AACvB,eAAO,iBAAiB,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;AAChE,eAAO,iBAAiB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAC5D,eAAO,iBAAiB,YAAY,KAAK,eAAe,KAAK,IAAI,CAAC;AAClE,eAAO,iBAAiB,eAAe,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAAA,MAC5E,CAAC;AAED,UAAI,OAAO,MAAM,eAAgB,EAAE,GAAW,MAAM;AAChD,UAAE,QAAQ,EACL,GAAG,YAAY,KAAK,eAAe,KAAK,IAAI,CAAC,EAC7C,GAAG,aAAa,EAAE,UAAU,EAAE,GAAG,KAAK,gBAAgB,KAAK,IAAI,CAAC,EAChE,GAAG,QAAQ,KAAK,WAAW,KAAK,IAAI,CAAC,EACrC,GAAG,WAAW,KAAK,cAAc,KAAK,IAAI,CAAC;AAAA,MACpD;AAEA,eAAS,QAAQ,YAAU;AACvB,eAAO,iBAAiB,cAAc,OAAM,EAAE,OAAuB,QAAQ,aAAa,KACtF,KAAK,iBAAiB,CAAC,CAAC;AAC5B,eAAO,iBAAiB,cAAc,OAAM,EAAE,OAAuB,QAAQ,aAAa,KACtF,KAAK,iBAAiB,CAAC,CAAC;AAAA,MAChC,CAAC;AAGD,UAAI,UAAU,UAAU,YAAY,EAAE,MAAM,QAAQ,KAChD,UAAU,UAAU,YAAY,EAAE,MAAM,WAAW,KACnD,OAAO,MAAM,aAAa;AAC1B,UAAE,QAAQ,EAAE,GAAG,cAAc,KAAK,iBAAiB,KAAK,IAAI,CAAC;AAAA,MACjE;AAAA,IACJ;AAAA,IAEQ,mBAA4B;AAChC,aAAO,KAAK,cAAc;AAAA,IAC9B;AAAA,IAEA,eAAe,QAAuB;AAClC,WAAK,SAAS,QAAQ,MAAM;AAC5B,aAAO,KAAK,IAAI;AAAA,IACpB;AAAA,IAEA,iBAAiB,QAAuB;AACpC,eAAS,IAAI,KAAK,SAAS,QAAQ,KAAK,GAAG,KAAK;AAC5C,YAAI,KAAK,SAAS,OAAO,QAAQ;AAC7B,cAAI,KAAK,SAAS,GAAG,SAAS;AAC1B,iBAAK,SAAS,GAAG,QAAQ;AAAA,UAC7B;AACA,eAAK,SAAS,OAAO,GAAG,CAAC;AACzB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,gBAAgB,MAAuB;AACnC,eAAS,IAAI,KAAK,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAChD,YAAI,KAAK,SAAS,GAAG,eAAe;AAChC,iBAAO,KAAK,SAAS;AAAA,MAC7B;AAAA,IACJ;AAAA,IAEA,kBAAkB,OAA6B;AAC3C,UAAI,KAAK,iBAAiB;AACtB,aAAK,gBAAgB,wBAAwB,YAAY,KAAK,2BAA2B;AACzF,YAAI,KAAK,gBAAgB,SAAS;AAC9B,eAAK,gBAAgB,QAAQ;AAAA,QACjC;AAAA,MACJ;AAEA,WAAK,kBAAkB;AACvB,UAAI,KAAK,iBAAiB;AACtB,aAAK,gBAAgB,KAAK,IAAI;AAC9B,aAAK,gBAAgB,wBAAwB,UAAU,KAAK,2BAA2B;AAAA,MAC3F;AAAA,IACJ;AAAA,IAEA,yBAA6D;AACzD,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,kCAAsE;AAClE,aAAO;AAAA,QACH,OAAO,KAAK,sBAAsB,KAAK,YAAY,QAAQ;AAAA,QAC3D,QAAQ,KAAK,sBAAsB,KAAK,YAAY,SAAS;AAAA,MACjE;AAAA,IACJ;AAAA,IAEA,4BAA4B;AACxB,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,oBAAoC;AAChC,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,gBAAgC;AAC5B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,cAAsB;AAClB,UAAI,WAAW,CAAC,KAAK,aAAa,KAAK,aAAa,KAAK,gBAAgB,KAAK,cAAc;AAC5F,aAAO,OAAO,MAAM,cAAc,EAAE,QAAQ,IAAI;AAAA,IACpD;AAAA,IAEA,oBAAoB,GAA6B;AAC7C,WAAK,oBAAoB,CAAC;AAC1B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,oBAAoB,GAAsB;AACtC,UAAI,GAAG;AACH,aAAK,oBAAqB,EAAE,OAAuB,QAAQ,cAAc;AAAA,MAC7E;AAAA,IACJ;AAAA,IAEA,kBAAkC;AAC9B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEQ,eAAiC;AACrC,aAAO,CAAC,KAAK,eAAe,KAAK,eAAe,KAAK,kBAAkB,KAAK,gBAAgB;AAAA,IAChG;AAAA,IAEA,sBAAsB,GAA6B;AAC/C,WAAK,sBAAsB,CAAC;AAC5B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,sBAAsB,GAAgB;AAClC,UAAI,GAAG;AACH,aAAK,sBAAuB,EAAE,OAAuB,QAAQ,iBAAiB;AAAA,MAClF;AAAA,IACJ;AAAA,IAEQ,mBAAyB;AAC7B,WAAK,iBAAiB,KAAK,iBAAiB;AAE5C,UAAI,cAAc,KAAK,YAAY;AACnC,UAAI,OAAO,KAAK,OAAO,aAAa,KAAK;AACzC,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC3C,YAAI,QAAQ,KAAK,GAAG;AAEpB,YAAI,aAAa,KAAK,KAAK,YAAY;AACnC,eAAK,kBAAkB;AAAA,QAC3B,OAAO;AACH,eAAK,kBAAkB;AAAA,QAC3B;AAAA,MACJ;AAEA,UAAI,aAAa,GAAG;AAChB,aAAK,iBAAiB,KAAK,iBAAiB;AAE5C,aAAK,iBAAiB,KAAK,IAAI,KAAK,gBAAgB,KAAK,UAAU,IAAI,KAAK;AAC5E,aAAK,kBAAkB;AAAA,MAC3B,OAAO;AACH,aAAK,kBAAkB;AACvB,aAAK,iBAAiB,KAAK,IAAI,KAAK,gBAAgB,KAAK,UAAU,IAAI;AAAA,MAC3E;AAAA,IACJ;AAAA,IAEQ,iBAAyB;AAC7B,UAAI,iBAAiB,KAAK,sBAAsB,KAAK,aAAa,KAAK,YAAY,QAAQ,KAAK;AAEhG,UAAI,OAAO,KAAK,OAAO,IAAI,KAAK,QAAQ,aAAa,KAAK;AAE1D,WAAK,gBAAgB,KAAK,gBAAgB;AAE1C,aAAO,KAAK;AACR,YAAI,aAAa,KAAK,KAAK,YAAY;AACnC,eAAK,iBAAiB,KAAK,GAAG;AAAA,QAClC,OAAO;AACH,eAAK,iBAAiB,KAAK,GAAG;AAAA,QAClC;AAAA,MACJ;AAEA,UAAI,gBAAgB,KAAK,gBAAgB,KAAK;AAE9C,aAAO,KAAK,SAAS,gBAAgB,KAAK,IAAI,eAAe,cAAc,IAAI;AAAA,IACnF;AAAA,IAEQ,kBAAkB,yBAAyC;AAC/D,UAAI,iBAAiB,KAAK;AAC1B,UAAI,kBAAkB,KAAK;AAC3B,UAAI,kBAAkB,KAAK;AAC3B,UAAI;AACJ,WAAK,eAAe,KAAK,eAAe;AACxC,UAAI,cAAc,KAAK,YAAY;AAEnC,qBAAe,KAAK,iBAAiB,kBAAkB,KAAK,kBAAkB,mBAAmB,KAAK,kBAAkB;AAExH,UAAI,gBAAgB,KAAK,iBAAiB,KAAK,KAAK,gBAAgB;AAChE,YAAI,eAAe,KAAK,gBAAgB;AACxC,YAAI,eAAe,KAAK,gBAAgB;AAExC,aAAK,YAAY,MAAM,QAAQ;AAE/B,aAAK,iBAAiB;AACtB,aAAK,aAAa,MAAM,QAAQ,KAAK,iBAAiB;AACtD,aAAK,aAAa,MAAM,QAAQ,KAAK,iBAAiB;AAEtD,YAAI,KAAK,gBAAgB;AACrB,eAAK,eAAe,MAAM,QAAQ,KAAK,eAAe;AAAA,QAC1D;AAEA,YAAI,KAAK,iBAAiB,GAAG;AACzB,cAAI,gBAAiB,KAAK,aAAa,KAAK,gBAAiB;AAE7D,eAAK,YAAY,MAAM,QAAQ;AAC/B,eAAK,aAAa,MAAM,QAAQ;AAChC,eAAK,aAAa,MAAM,KAAK,SAAS;AACtC,eAAK,aAAa,MAAM,QAAQ;AAEhC,eAAK,UAAU,MAAM,QAAQ;AAC7B,eAAK,UAAU,MAAM,KAAK,SAAS;AACnC,eAAK,UAAU,MAAM,QAAQ;AAE7B,eAAK,gBAAgB,MAAM,QAAQ;AACnC,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AACjD,eAAK,gBAAgB,MAAM,QAAQ;AACnC,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AAEjD,eAAK,gBAAgB,MAAM,QAAQ;AACnC,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AACjD,eAAK,gBAAgB,MAAM,QAAQ;AACnC,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AAEjD,eAAK,cAAc,MAAM,QAAQ;AACjC,eAAK,cAAc,MAAM,QAAQ;AAEjC,cAAI,KAAK,gBAAgB;AACrB,iBAAK,aAAa,MAAM,QAAQ;AAChC,iBAAK,aAAa,MAAM,KAAK,SAAS;AAEtC,iBAAK,iBAAiB,MAAM,QAAQ;AACpC,iBAAK,iBAAiB,MAAM,QAAQ;AAEpC,iBAAK,eAAe,MAAM,QAAQ;AAClC,iBAAK,eAAe,MAAM,QAAQ;AAAA,UACtC;AAAA,QACJ,OAAO;AACH,eAAK,aAAa,MAAM,QAAQ;AAChC,eAAK,UAAU,MAAM,QAAQ;AAC7B,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AACjD,eAAK,gBAAgB,MAAM,QAAQ,KAAK,eAAe;AACvD,eAAK,gBAAgB,cAAc,MAAM,QAAQ;AACjD,eAAK,gBAAgB,MAAM,QAAQ,KAAK,eAAe;AACvD,eAAK,cAAc,MAAM,QAAQ;AAEjC,cAAI,KAAK,gBAAgB;AACrB,iBAAK,iBAAiB,MAAM,QAAQ;AACpC,iBAAK,eAAe,MAAM,QAAQ;AAAA,UACtC;AAAA,QACJ;AAEA,aAAK,sBAAuB,KAAK,eAAe,KAAK,aAAa;AAAA,MACtE;AAEA,UAAI,IAAK,KAAK,gBAAgB,KAAK,sBAAsB,cAAc,KAAM;AAE7E,WAAK,kBAAkB,MAAM,QAAQ;AACrC,WAAK,kBAAkB,MAAM,QAAQ;AACrC,WAAK,kBAAkB,MAAM,QAAQ;AACrC,WAAK,kBAAkB,MAAM,QAAQ;AAErC,UAAI,gBAAgB,yBAAyB;AACzC,aAAK,kBAAkB;AAAA,MAC3B;AAAA,IACJ;AAAA,IAEQ,2BAAiC;AACrC,UAAI,OAAqB,KAAK,kBAAkB,CAAC,KAAK,SAAS,eAAgB,KAAK,iBAAiB,KAAK;AAC1G,cAAQ,OAAO,KAAK,eAA8B,SAAS,QAAQ,QAAQ,MAAM;AAE7E,YAAI,QAAQ,KAAK,iBAAiB,KAAK,eAAe,KAAK,eAAe,KAAK,gBAAgB,KAAK,cAAc;AAC9G,eAAK,iBAAiB,UAAU,KAAK,8BAA8B;AACnE,eAAK,qBAAqB,KAAK,IAAI;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,6BAAmC;AACvC,UAAI,KAAK,sBAAsB;AAC3B,iBAAS,KAAK,KAAK;AACf,YAAE,oBAAoB,UAAU,KAAK,8BAA8B;AAAA,MAC3E;AACA,WAAK,uBAAuB,CAAC;AAAA,IACjC;AAAA,IAEA,mBAAmB,UAAkB,OAAgB,SAAwB;AACzE,UAAI,CAAC,KAAK,cAAc;AAAE;AAAA,MAAQ;AAClC,UAAI,MAAM,KAAK,eAAe,QAAQ;AACtC,UAAI,OAAO,MAAM;AACb;AAAA,MACJ;AAEA,UAAI,YAAY,KAAK,MAAM;AAC3B,UAAI,SAAW,KAAK,cAAc,KAAK,OAAO,KAAK,cAAe,KAAK,aAAa,SAAS,KAAK,MAAM,KAAK,WAAW,IAAI,KAAK,aAAa,SAAS,KAAK,GAAG;AAC/J,UAAI,CAAC;AACD;AAEJ,UAAI,UAAU,QAAW;AACrB,kBAAU,OAAO;AAAA,MACrB;AACA,UAAI,YAAY,QAAW;AACvB,kBAAU,UAAU;AAAA,MACxB;AAEA,WAAK,QAAQ,KAAK,2BAA2B;AAAA,QACzC,MAAM;AAAA,QACN,QAAQ;AAAA,MACZ,CAAC;AAED,aAAO,QAAQ,WAAW;AAC1B,UAAI,QAAQ,OAAO;AACnB,gBAAU,MAAM,YAAY;AAE5B,WAAK,QAAQ,KAAK,sBAAsB;AAAA,QACpC,MAAM;AAAA,QACN,QAAQ;AAAA,MACZ,CAAC;AAAA,IACL;AAAA,IAEA,YAA4B;AACxB,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,gBAAgB,eAAgD;AAC5D,UAAI,MAAO,OAAO,kBAAkB,WAAW,gBAAgB,KAAK,eAAe,aAAa;AAChG,UAAI,OAAO;AACP,eAAO;AAEX,aAAQ,KAAK,cAAc,KAAK,OAAO,KAAK,cAAc,KAAK,aAAa,SAAS,KAAK,MAAM,KAAK,WAAW,IAAI,KAAK,aAAa,SAAS,KAAK,GAAG;AAAA,IAC3J;AAAA,IAEA,mBAAmC;AAC/B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,oBAAoC;AAtuBxC;AAuuBQ,cAAO,UAAK,mBAAL,mBAAqB,cAAc;AAAA,IAC9C;AAAA,IAEA,eAA+B;AAC3B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,mBAAmB,UAA+B;AAC9C,UAAI,MAAM,KAAK,eAAe,QAAQ;AACtC,UAAI,OAAO;AACP;AAEJ,UAAI,iBAAiC,aAAa,KAAK;AAEvD,UAAI,cAAc,KAAK,MAAM,YAAY;AACrC,0BAAkB,KAAK;AAAA,MAC3B,OACK;AACD,0BAAkB,KAAK;AACvB,eAAO;AAAA,MACX;AAEA,aAAO,gBAAgB,WAAW,KAAK,GAAG;AAAA,IAC9C;AAAA,IAEA,eAA+B;AAC3B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,mBAAmB,UAA+B;AAC9C,UAAI,MAAM,KAAK,eAAe,QAAQ;AACtC,UAAI,OAAO;AACP,eAAO;AAEX,UAAI,iBAAiC,aAAa,KAAK;AAEvD,UAAI,cAAc,KAAK,MAAM,YAAY;AACrC,0BAAkB,KAAK;AAAA,MAC3B,OACK;AACD,0BAAkB,KAAK;AACvB,eAAO;AAAA,MACX;AAEA,aAAO,gBAAgB,WAAW,KAAK,GAAG;AAAA,IAC9C;AAAA,IAEQ,sBAA4B;AAChC,OAAC,KAAK,iBAAiB,KAAK,eAAe,EAAE,QAAQ,SAAO,IAAI,iBAAiB,yBAAyB,EACrG,QAAQ,CAAC,OAAO;AACb,YAAI,YAAY,KAAK,kBAAkB,EAAE;AACzC,YAAI,WAAW;AACX,eAAK,QAAQ,KAAK,8BAA8B;AAAA,YAC5C,MAAM;AAAA,YACN,QAAQ;AAAA,UACZ,CAAC;AAAA,QACL;AAAA,MACJ,CAAC,CAAC;AAEN,YAAM,KAAK,OAAO,MAAM;AAExB,UAAI,IAAI;AACJ,UAAE,KAAK,eAAe,EAAE,MAAM;AAC9B,UAAE,KAAK,eAAe,EAAE,MAAM;AAAA,MAClC,OACK;AACD,aAAK,gBAAgB,YAAY;AACjC,aAAK,gBAAgB,YAAY;AAAA,MACrC;AAEA,UAAI,OAAO,KAAK,OAAO,aAAa,KAAK;AACzC,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,YAAI,IAAI,KAAK;AAEb,YAAI,gBAAgB,EAAE,OAAO,EAAE,OAAO,6BAA6B,IAAI,OAAO,KAAK,KAAK,SAAS,cAAc,sBAAsB,IAAI,CAAC;AAC1I,sBAAc,QAAQ,IAAI,EAAE,SAAS;AACrC,cAAM,EAAE,aAAa,EAAE,KAAK,UAAU,CAAC;AAEvC,YAAI,EAAE;AACF,wBAAc,UAAU,IAAI,EAAE,cAAc;AAAA,iBACvC,EAAE;AACP,wBAAc,UAAU,IAAI,EAAE,QAAQ;AAE1C,SAAC,aAAa,KAAK,KAAK,aAAa,KAAK,kBAAkB,KAAK,iBAAiB,YAAY,aAAa;AAE3G,aAAK,QAAQ,KAAK,yBAAyB;AAAA,UACvC,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,IACJ;AAAA,IAEQ,iBAAiB,OAAoB,WAA+B;AACxE,UAAI,UAAU,aAAa,MAAM;AAC7B,YAAI,OAAO,IAAI,WAAW;AAC1B,aAAK,UAAU,SAAS;AACxB,YAAI;AACA,iBAAO,UAAU,UAAU,IAAI,IAAI,OAAO,WAAW,IAAW;AAAA,QACpE,SACO,GAAP;AAAA,QACA;AAAA,MACJ;AAGA,UAAI,OAAO,SAAS,YAAY,OAAO,MAAM,eAAe,EAAE,cAAc;AACxE,YAAK,UAAkB,cAAe,UAAkB,WAAW,eAAe;AAE9E,iBAAO,EAAE,aAAa,OAAO,UAAU,WAAW,aAAa;AAAA,QACnE;AAGI,iBAAO,EAAE,aAAa,OAAO,UAAU;AAAA,MAC/C;AAEI,eAAO,WAAW,+BAAO,UAAU;AAAA,IAC3C;AAAA,IAEQ,eAAe,QAAqB,WAA0B,KAAqB;AACvF,UAAI,QAAS,IAAI,UAAU,GAAG,CAAC,EAAE,YAAY,IAAI,IAAI,UAAU,CAAC;AAEhE,UAAI,OAAQ,OAAO,MAAM,eAAe,EAAE,cAAc,EAAE,WAAW,KAAK,KAAM;AAEhF,UAAI,QAAQ,OAAO,KAAK,UAAU;AAClC,cAAQ,KAAK,iBAAiB,OAAO,SAAS;AAE9C,aAAO,gCAAgC,MAAM,eAAe,OAAO,OAC/D,QACA;AAAA,IACR;AAAA,IAEQ,qBAAqB,QAAqB,WAAkC;AAChF,UAAI,CAAC,UAAU,CAAC;AACZ,eAAO;AAEX,UAAI,OAAe;AACnB,UAAI,OAAO;AAEX,OAAC,OAAO,OAAO,OAAO,OAAO,KAAK,EAAE,QAAQ,SAAU,KAAK;AACvD,YAAI,QAAQ,QAAQ,OAAO,QAAQ,OAAO,KAAK,UAAU,UAAU,MAAM;AACrE,iBAAO,KAAK,eAAe,QAAQ,WAAW,GAAG;AACjD,iBAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAED,aAAO,QAAQ;AAAA,IACnB;AAAA,IAEQ,sBAA4B;AAChC,OAAC,KAAK,cAAc,KAAK,YAAY,EAAE,QAAQ,QAAM,GAAG,iBAAiB,sBAAsB,EAC1F,QAAQ,CAAC,OAAO;AACb,YAAI,YAAY,KAAK,kBAAkB,EAAE;AACzC,YAAI,WAAW;AACX,eAAK,QAAQ,KAAK,2BAA2B;AAAA,YACzC,MAAM;AAAA,YACN,QAAQ;AAAA,UACZ,CAAC;AAAA,QACL;AAAA,MACJ,CAAC,CAAC;AAEN,YAAM,KAAK,OAAO,MAAM;AACxB,UAAI,IAAI;AACJ,UAAE,KAAK,YAAY,EAAE,MAAM;AAC3B,UAAE,KAAK,YAAY,EAAE,MAAM;AAAA,MAC/B,OACK;AACD,aAAK,aAAa,YAAY;AAC9B,aAAK,aAAa,YAAY;AAAA,MAClC;AAEA,WAAK,iBAAiB;AAEtB,WAAK,aAAa,MAAM,QAAQ,KAAK,iBAAiB;AACtD,WAAK,aAAa,MAAM,QAAQ,KAAK,iBAAiB;AAEtD,UAAI,OAAO,KAAK,OAAO,aAAa,KAAK;AACzC,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,YAAI,IAAI,KAAK;AAEb,YAAI,eAAe,aAAa,KAAK,KAAK,aAAa,KAAK,eAAe,KAAK;AAEhF,YAAI,OAAO,SAAS,cAAc,MAAM;AACxC,aAAK,YAAY;AACjB,YAAI,EAAE;AACF,eAAK,YAAY,EAAE;AAAA;AAEnB,eAAK,YAAY,EAAE;AACvB,YAAI,SAAS,EAAE,OAAO;AAAA,UAClB,OAAO,yBAAyB,KAAK,SAAS,cAAc,uBAAuB;AAAA,UACnF,IAAI,KAAK,KAAK,OAAO,EAAE;AAAA,UACvB,OAAO,EAAE,WAAW;AAAA,UACpB,OAAO,aAAa,EAAE,QAAQ,KAAK,0BAA0B;AAAA,QACjE,GAAG,IAAI;AAEP,eAAO,QAAQ,IAAI,EAAE,SAAS;AAC9B,cAAM,EAAE,MAAM,EAAE,KAAK,UAAU,CAAC;AAEhC,UAAE,kBAAkB,OAAO,UAAU,IAAI,EAAE,cAAc;AAEzD,YAAI,cAAc,OAAO,UAAU,IAAI,QAAQ;AAE/C,qBAAa,YAAY,MAAM;AAE/B,aAAK,KAAK,SAAS,uBAAuB,EAAE,aAAa,KAAK,SAAS,aAAa;AAChF,iBAAO,iBAAiB,cAAc,eAAe;AACrD,iBAAO,iBAAiB,cAAc,kBAAkB;AAAA,QAC5D;AAEA,YAAI,EAAE,UAAU;AACZ,iBAAO,UAAU,IAAI,uBAAuB;AAC5C,iBAAO,YAAY,EAAE,QAAQ,EAAE,OAAO,uBAAuB,CAAC,CAAC;AAAA,QACnE;AAEA,aAAK,QAAQ,KAAK,sBAAsB;AAAA,UACpC,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ,CAAC;AAED,YAAI,KAAK,SAAS,eAAe;AAC7B,cAAI,kBAAkB,aAAa,KAAK,KAAK,aAAa,KAAK,kBAAkB,KAAK;AAEtF,cAAI,gBAAgB,EAAE,OAAO,EAAE,OAAO,6BAA6B,IAAI,OAAO,KAAK,KAAK,SAAS,cAAc,sBAAsB,IAAI,CAAC;AAC1I,wBAAc,QAAQ,IAAI,EAAE,SAAS;AACrC,gBAAM,EAAE,aAAa,EAAE,KAAK,UAAU,CAAC;AACvC,0BAAgB,YAAY,aAAa;AAEzC,eAAK,QAAQ,KAAK,yBAAyB;AAAA,YACvC,MAAM;AAAA,YACN,QAAQ;AAAA,UACZ,CAAC;AAAA,QACL;AAAA,MACJ;AAEA,WAAK,eAAe,KAAK,YAAY;AACrC,WAAK,kBAAkB;AACvB,UAAI,KAAK,SAAS;AACd,aAAK,mBAAmB;AAAA,IAChC;AAAA,IAEQ,kBAAwB;AAC5B,OAAC,KAAK,cAAc,KAAK,YAAY,EAAE,QAAQ,QAAM,GAAG,iBAAiB,SAAS,OAAK;AAEnF,YAAI,MAAM,EAAE;AACZ,YAAI,IAAI,UAAU,SAAS,wBAAwB,GAAG;AAClD;AAAA,QACJ;AAEA,YAAI,UAAU,IAAI,QAAQ,sBAAsB;AAChD,YAAI,CAAC,SAAS;AACV;AAAA,QACJ;AAEA,YAAI,SAAS,KAAK,kBAAkB,OAAO;AAC3C,YAAI,OAAO,UAAU;AACjB,cAAI,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC3C;AAAA,UACJ;AAEA,cAAI,WAAW;AACf,cAAI,IAAI;AACR,iBAAO,IAAI,KAAK,aAAa,QAAQ,KAAK;AACtC,gBAAI,KAAK,aAAa,GAAG,YAAY,OAAO,IAAI;AAC5C,yBAAW,KAAK,aAAa;AAC7B,uBAAS,UAAU,CAAC,SAAS;AAC7B;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,EAAE,WAAW,KAAK,SAAS,iBAAiB;AAC5C,gBAAI,UAAU;AACV,mBAAK,aAAa,OAAO,GAAG,CAAC;AAAA,YACjC;AAAA,UACJ,OACK;AACD,gBAAK,CAAC,EAAE,YAAY,CAAC,EAAE,WAAY,CAAC,KAAK,SAAS,iBAAiB;AAC/D,mBAAK,eAAe,CAAC;AAAA,YACzB;AAEA,gBAAI,CAAC,UAAU;AACX,yBAAW,EAAE,UAAU,OAAO,IAAI,SAAS,OAAO,eAAe;AACjE,mBAAK,aAAa,KAAK,QAAQ;AAAA,YACnC,WAAW,KAAK,aAAa,UAAU,GAAG;AACtC,mBAAK,aAAa,KAAK,QAAQ;AAAA,YACnC;AAAA,UACJ;AAEA,eAAK,eAAe,KAAK,YAAY;AAErC,cAAI,CAAC,KAAK,SAAS,iBAAiB;AAChC,iBAAK,QAAQ,KAAK,QAAQ;AAAA,cACtB,iBAAiB;AAAA,cACjB,SAAS;AAAA,cACT,SAAS,SAAS;AAAA,YACtB,GAAG,CAAC;AAAA,UACR,OAAO;AACH,gBAAI,OAAO,KAAK;AAChB,iBAAK,QAAQ,KAAK,QAAQ;AAAA,cACtB,iBAAiB;AAAA,cACjB,UAAU,KAAK,aAAa,IAAI,UAAQ,EAAE,SAAS,KAAK,KAAK,sBAAsB,IAAI,QAAQ,IAAI,SAAS,IAAI,QAAQ,EAAE;AAAA,YAC9H,GAAG,CAAC;AAAA,UACR;AAAA,QACJ;AAAA,MACJ,CAAC,CAAC;AAAA,IACN;AAAA,IAEQ,qBAA2B;AAC/B,MAAC,EAAE,CAAC,KAAK,cAAc,KAAK,YAAY,CAAC,EAAE,OAAO,cAAc,EAAU,SAAS,SAAS;AAC5F,UAAI,oBAA4B;AAEhC,UAAI,qBAAqB,MAAM;AAC3B,aAAK,kBAAkB,aAAa,KAAK,kBAAkB,aAAa;AAAA,MAC5E;AAEA,UAAI,oBAAoB,MAAM;AAC1B,aAAK,kBAAkB,aAAa,KAAK,kBAAkB,aAAa;AAAA,MAC5E;AAEA,UAAI;AAEJ,UAAI,cAAc,KAAK,SAAS;AAChC,MAAC,EAAE,CAAC,KAAK,cAAc,KAAK,YAAY,CAAC,EAAU,SAAS;AAAA,QACxD,aAAa,cAAc,SAAY;AAAA,QACvC,UAAU;AAAA,QACV,MAAM,cAAc,SAAY;AAAA,QAChC,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,aAAa,gCAAgC,KAAK,SAAS,cAAc,sBAAsB,MAAM;AAAA,QACrG,sBAAsB,cAAc,OAAO;AAAA,QAC3C,UAAU,cAAc,SAAS;AAAA,QACjC,OAAO,CAAC,GAAQ,OAAY;AACxB,aAAG,YAAY,MAAM,GAAG,OAAO,WAAW,IAAI,KAAK,sBAAsB;AACzE,0BAAgB,CAAC,KAAK,iBAAiB,KAClC,GAAG,YAAY,OAAO,EAAE,KAAK,SAAS,KAAK,MAAM,GAAG,YAAY,MAAM,CAAC,IAAK,EAAE,KAAK,iBAAiB,EAAE,OAAO,EAAE,KAAK;AACzH,YAAE,GAAG,MAAM,EAAE,SAAS,4BAA4B;AAAA,QACtD;AAAA,QACA,YAAY,CAAC,GAAQ,OAAY;AAC7B,YAAE,GAAG,MAAM,EAAE,YAAY,4BAA4B;AACrD,cAAI,aAAa;AACb,gBAAI,0BAA0B,EAAE,KAAK,iBAAiB,CAAC;AACvD,gBAAI,mBAAmB,wBAClB,KAAK,yBAAyB,EAAE;AACrC,gBAAI,mBAAmB,GAAG;AACtB,sCAAwB,KAAK,4BAA4B,EAAE,KAAK;AAChE,sCAAwB,KAAK,yBAAyB,EAAE,KAAK;AAAA,YACjE;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,MAAM,CAAC,MAAyB;AAC5B,cAAI,iBAAkB,EAAE,cAAsB,QAAQ,KAAK,WAAW,aAAa;AAC/E,gBAAI,CAAE,mBAAoB;AACtB,kCAAoB;AAAA,gBAChB;AAAA,gBAAoB;AAAA,cAAG;AAAA,YAC/B;AAAA,UACJ,WAAW,iBAAkB,EAAE,cAAsB,QAAQ,EAAE,KAAK,iBAAiB,EAAE,OAAO,EAAE,MAAM;AAClG,gBAAI,CAAE,mBAAoB;AACtB,kCAAoB;AAAA,gBAChB;AAAA,gBAAmB;AAAA,cAAG;AAAA,YAC9B;AAAA,UACJ,OAAO;AACH,0BAAc,iBAAiB;AAC/B,gCAAoB;AAAA,UACxB;AAAA,QACJ;AAAA,QACA,MAAM,CAAC,MAAW;AACd,cAAI,SAAS;AACb,wBAAc,iBAAiB;AAC/B,8BAAoB;AAEpB,cAAI,UAAU,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AACrD,YAAC,EAAE,EAAE,MAAM,EAAU,SAAS,QAAQ;AACtC;AAAA,UACJ;AAEA;AACA,cAAI,gBAAgB;AAAA,YAA8B,KAAK;AAAA,YAClD,KAAK,aAAqB,SAAS,SAAS,EAAE,IAAI,CAAC,MAAc,EAAE,UAAU,KAAK,KAAK,MAAM,CAAC;AAAA,UAAC;AAEpG,0BAAgB;AAAA,YAA8B;AAAA,YACzC,KAAK,aAAqB,SAAS,SAAS,EAAE,IAAI,CAAC,MAAc,EAAE,UAAU,KAAK,KAAK,MAAM,CAAC;AAAA,UAAC;AAEpG,eAAK,WAAW,aAAa;AAC7B,eAAK,QAAQ,KAAK,oBAAoB,CAAC,CAAC;AACxC,YAAE,gBAAgB;AAClB,eAAK,kBAAkB;AAAA,QAC3B;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IAEQ,oBAA0B;AAE9B,UAAI,UAAkB,OAAe,UAAkB,OAAO,KAAK;AACnE,YAAM,iBAAiB,MAAM,KAAK,KAAK,aAAa,QAAQ,EAAE,OAAO,MAAM,KAAK,KAAK,aAAa,QAAQ,CAAC;AAE3G,UAAI,GAAW,GAAW,GAAkB,OAAe,UAAkB,UAAkB,gBAAwB,eAAuB,OAAO,KAAK;AAC1J,UAAI,gBAAwB;AAC5B,qBAAe,QAAQ,CAAC,IAAI,MAAM;AAlnC1C;AAmnCY,iBAAG,cAAc,wBAAwB,MAAzC,mBAA4C;AAC5C,YAAI,KAAK,GAAG,WAAW;AACnB,cAAI,mBAAmB,QAAW;AAC9B,6BAAiB;AAAA,UACrB;AACA,0BAAgB;AAAA,QACpB;AAAA,MACJ,CAAC;AAED,UAAI,mBAAmB,QAAW;AAC9B;AAAA,MACJ;AAEA,YAAM,eAAe,OAAO,MAAM,eAAe,CAAC,EAAE,MAAM,CAAE,EAAE,GAAW;AACzE,qBAAe,QAAQ,CAAC,IAAI,MAAM;AAE9B,YAAI,IAAI,kBAAmB,KAAK,SAAS,mBAAmB,KAAK,eAAgB;AAC7E;AAAA,QACJ;AAEA,cAAM,SAAS,GAAG,YAAY,SAAS,cAAc,KAAK,CAAC;AAC3D,eAAO,UAAU,IAAI,wBAAwB;AAC7C,eAAO,YAAY;AAEnB,YAAI,cAAmB;AAEvB,cAAM,YAAY,CAAC,MAAiB;AA7oChD;AA8oCgB,cAAI,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC3C,aAAC,gBAAgB,EAAE,eAAe;AAClC;AAAA,UACJ;AAEA,cAAI,cAAc;AACd,0BAAc,CAAC,MAAiB,EAAE,eAAe;AACjD,qBAAS,iBAAiB,YAAY,WAAW;AAAA,UACrD;AAEA,kBAAQ,EAAE;AACV,WAAC,OAAE,OAAuB,kBAAzB,mBAAwC,UAAU,IAAI;AACvD,cAAI,sBAAsB,MAAM,uBAAuB;AAEvD,yBAAe,QAAQ,CAACC,IAAGD,OAAM;AAC7B,iBAAKA,IAAG,gBAAiBC,GAAkB;AAAA,UAC/C,CAAC;AACD,cAAI,KAAK,SAAS,iBAAiB;AAC/B,kCAAsB;AACtB,mCAAuB;AAEvB,iBAAK,IAAI,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC5C,kBAAI,KAAK;AACT,kBAAI,EAAE,WAAW;AACb,oBAAI,wBAAwB,MAAM;AAC9B,sBAAI,EAAE,UAAU;AACZ,4CAAwB,EAAE,WAAW,EAAE;AAAA,kBAC3C,OAAO;AACH,2CAAuB;AAAA,kBAC3B;AAAA,gBACJ;AACA,uCAAuB,EAAE,gBAAgB,KAAK,IAAI,EAAE,YAAY,GAAG,KAAK,oBAAoB;AAAA,cAChG;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,qBAAqB,GAAG,sBAAsB;AAClD,eAAK,IAAI,GAAG,KAAK,GAAG,KAAK;AAErB,gBAAI,KAAK;AACT,gBAAI,EAAE,WAAW;AACb,kBAAI,uBAAuB,MAAM;AAC7B,oBAAI,EAAE,UAAU;AACZ,yCAAuB,EAAE,WAAW,EAAE;AAAA,gBAC1C,OAAO;AACH,wCAAsB;AAAA,gBAC1B;AAAA,cACJ;AACA,oCAAsB,EAAE,gBAAgB,KAAK,IAAI,EAAE,YAAY,GAAG,KAAK,oBAAoB;AAAA,YAC/F;AAAA,UACJ;AACA,cAAI,wBAAwB,MAAM;AAC9B,kCAAsB;AAAA,UAC1B;AACA,cAAI,uBAAuB,MAAM;AAC7B,iCAAqB;AAAA,UACzB;AACA,cAAI,yBAAyB,MAAM;AAC/B,mCAAuB;AAAA,UAC3B;AACA,cAAI,wBAAwB,MAAM;AAC9B,kCAAsB;AAAA,UAC1B;AACA,qBAAW,QAAQ,KAAK,IAAI,qBAAqB,mBAAmB;AACpE,qBAAW,QAAQ,KAAK,IAAI,oBAAoB,oBAAoB;AACpE,2BAAiB,EAAE,aAAa,gBAAgB;AAAA,QAEpD;AAEA,cAAM,OAAO,CAAC,MAAiB;AAC3B,cAAI,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE;AACzC;AACJ,cAAI,cAAc;AACd,cAAE,aAAa,gBAAgB;AAC/B,cAAE,eAAe;AAAA,UACrB;AACA,cAAI,gBAAgB,IAAI,KAAK,IAAI,UAAU,KAAK,IAAI,UAAU,EAAE,KAAK,CAAC,IAAI,OAAO,GAAGC,IAAWC,IAAWC;AAC1G,cAAI,IAAI,GAAG;AACP,gBAAI;AAEJ,gBAAI,kBAAkB,GAAG,kBAAkB;AAE3C,iBAAKF,KAAI,GAAGA,MAAK,GAAGA,MAAK;AACrB,cAAAE,KAAI,KAAKF;AACT,kBAAIE,GAAE,WAAW;AACb,iCAAiB,KAAK,IAAIA,GAAE,YAAY,GAAG,KAAK,oBAAoB;AACpE,oBAAI,KAAKA,GAAE,gBAAgB,IAAI,gBAAgB;AAC3C,uBAAKA,GAAE,gBAAgB;AACvB,kBAAAA,GAAE,QAAQ;AAAA,gBACd,OAAO;AACH,kBAAAA,GAAE,QAAQA,GAAE,gBAAgB;AAC5B,sBAAI;AAAA,gBACR;AAAA,cACJ;AAAA,YACJ;AAEA,gBAAI,aAAa,KAAK;AAEtB,iBAAKD,KAAI,GAAGA,MAAK,GAAGA,MAAK;AACrB,cAAAC,KAAI,KAAKD;AAET,kBAAI,aAAa,KAAKA,MAAK,YAAY;AACnC,mCAAmBC,GAAE;AAAA,cACzB,OAAO;AACH,mCAAmBA,GAAE;AAAA,cACzB;AAAA,YACJ;AAEA,gBAAI,KAAK,SAAS,iBAAiB;AAC/B,kBAAI,CAAC;AACL,mBAAKF,KAAI,IAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,gBAAAE,KAAI,KAAKF;AACT,oBAAIE,GAAE,WAAW;AACb,sBAAI,KAAKA,GAAE,YAAaA,GAAE,WAAWA,GAAE,gBAAgB,GAAI;AACvD,yBAAKA,GAAE,WAAWA,GAAE;AACpB,oBAAAA,GAAE,QAAQA,GAAE;AAAA,kBAChB,OAAO;AACH,oBAAAA,GAAE,QAAQA,GAAE,gBAAgB;AAC5B,wBAAI;AAAA,kBACR;AAEA,sBAAI,aAAa,KAAKF,MAAK,YAAY;AACnC,uCAAmBE,GAAE;AAAA,kBACzB,OAAO;AACH,uCAAmBA,GAAE;AAAA,kBACzB;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ,OAAO;AACH,mBAAKF,KAAI,IAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,gBAAAE,KAAI,KAAKF;AAET,oBAAI,cAAc,KAAKA,MAAK,YAAY;AACpC,qCAAmBE,GAAE;AAAA,gBACzB,OAAO;AACH,qCAAmBA,GAAE;AAAA,gBACzB;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ,OAAO;AACH,gBAAI;AAEJ,gBAAI,kBAAkB,GAAG,kBAAkB;AAE3C,iBAAKF,KAAI,GAAGA,MAAK,GAAGA,MAAK;AACrB,cAAAE,KAAI,KAAKF;AACT,kBAAIE,GAAE,WAAW;AACb,oBAAI,KAAKA,GAAE,YAAaA,GAAE,WAAWA,GAAE,gBAAgB,GAAI;AACvD,uBAAKA,GAAE,WAAWA,GAAE;AACpB,kBAAAA,GAAE,QAAQA,GAAE;AAAA,gBAChB,OAAO;AACH,kBAAAA,GAAE,QAAQA,GAAE,gBAAgB;AAC5B,sBAAI;AAAA,gBACR;AAAA,cACJ;AAAA,YACJ;AAEA,iBAAKD,KAAI,GAAGA,MAAK,GAAGA,MAAK;AACrB,cAAAC,KAAI,KAAKD;AAET,kBAAI,aAAa,KAAKA,MAAK,YAAY;AACnC,mCAAmBC,GAAE;AAAA,cACzB,OAAO;AACH,mCAAmBA,GAAE;AAAA,cACzB;AAAA,YACJ;AAEA,gBAAI,KAAK,SAAS,iBAAiB;AAC/B,kBAAI,CAAC;AACL,mBAAKF,KAAI,IAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,gBAAAE,KAAI,KAAKF;AACT,oBAAIE,GAAE,WAAW;AACb,mCAAiB,KAAK,IAAIA,GAAE,YAAY,GAAG,KAAK,oBAAoB;AACpE,sBAAI,KAAKA,GAAE,gBAAgB,IAAI,gBAAgB;AAC3C,yBAAKA,GAAE,gBAAgB;AACvB,oBAAAA,GAAE,QAAQ;AAAA,kBAEd,OAAO;AACH,oBAAAA,GAAE,QAAQA,GAAE,gBAAgB;AAC5B,wBAAI;AAAA,kBACR;AAEA,sBAAI,cAAcF,MAAK,YAAY;AAC/B,uCAAmBE,GAAE;AAAA,kBACzB,OAAO;AACH,uCAAmBA,GAAE;AAAA,kBACzB;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ,OAAO;AACH,mBAAKF,KAAI,IAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,gBAAAE,KAAI,KAAKF;AAET,oBAAI,aAAa,KAAKA,MAAK,YAAY;AACnC,qCAAmBE,GAAE;AAAA,gBACzB,OAAO;AACH,qCAAmBA,GAAE;AAAA,gBACzB;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,KAAK,iBAAiB,KAAK,mBAAmB,KAAK,eAAe;AAClE,iBAAK,aAAa,MAAM,QAAQ,kBAAkB,MAAO;AACzD,iBAAK,aAAa,MAAM,KAAK,SAAS,kBAAkB;AAAA,UAC5D;AAEA,eAAK,wBAAwB;AAC7B,cAAI,KAAK,SAAS,sBAAsB;AACpC,iBAAK,kBAAkB;AAAA,UAC3B;AAAA,QACJ;AAEA,cAAM,UAAU,CAAC,MAAW;AAl2CxC;AAm2CgB,cAAI,aAAa;AACb,qBAAS,oBAAoB,YAAY,WAAW;AACpD,0BAAc;AAAA,UAClB;AACA,WAAC,OAAE,OAAO,kBAAT,mBAAwC,UAAU,OAAO;AAC1D,eAAK,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AACxC,gBAAI,KAAK;AACT,gBAAI,WAAY,eAAe,GAAmB;AAElD,gBAAI,EAAE,kBAAkB,YAAY,EAAE,kBAAkB;AACpD,mBAAK,kBAAkB;AAAA,YAC3B;AAAA,UACJ;AACA,eAAK,kBAAkB,IAAI;AAC3B,eAAK,OAAO;AACZ,eAAK,QAAQ,KAAK,gBAAgB;AAAA,QACtC;AAEA,YAAI,cAAc;AACd,iBAAO,iBAAiB,aAAa,SAAS;AAC9C,iBAAO,iBAAiB,QAAQ,IAAI;AACpC,iBAAO,iBAAiB,WAAW,OAAO;AAC1C,iBAAO,iBAAiB,YAAY,OAAK;AAAE,cAAE,eAAe;AAAG,cAAE,aAAa,gBAAgB;AAAA,UAAQ,CAAC;AAAA,QAC3G,OACK;AACD,UAAC,EAAE,MAAM,EACJ,GAAG,aAAa,SAAS,EACzB,GAAG,QAAQ,IAAI,EACf,GAAG,WAAW,OAAO;AAAA,QAC9B;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IAEQ,aAAa,IAAyB;AAC1C,UAAI,QAAQ,iBAAiB,EAAE;AAC/B,UAAI,MAAM,aAAa;AACnB,eAAO;AAEX,UAAI,IAAI,CAAC,oBAAoB,uBAAuB,eAAe,gBAAgB;AACnF,UAAI,QAAQ;AACZ,QAAE,QAAQ,SAAO,SAAS,WAAW,MAAM,iBAAiB,GAAG,CAAC,KAAK,CAAC;AACtE,aAAO;AAAA,IACX;AAAA,IAEQ,wBAA8B;AAClC,WAAK,SAAS,YAAa,KAAK,SAAS,aAAa,KAC/C,KAAK,SAAS,YAAY,KAAK,kBAEhC,KAAK,SAAS,YACd;AAEN,UAAI,KAAK,SAAS,YAAY,IAAI;AAC9B,aAAK,iBAAiB;AACtB,aAAK,oBAAqB,KAAK,SAAS,YAAa,KAAK,SAAS;AAEnE,YAAI,aAAa,KAAK,cAAc,KAAK,KAAK,MAAM;AAEpD,aAAK,mBAAoB,KAAK,SAAS,eAChC,aAAa,KAAK,SAAS,YAC5B,KAAK,SAAS;AAAA,MACxB,OAAO;AACH,aAAK,iBAAiB;AAAA,MAC1B;AAAA,IACJ;AAAA,IAEQ,oBAA0B;AAC9B,WAAK,aAAa,MAAM,UAAU,KAAK,UAAU,MAAM,UAAU,KAAK,iBAAiB,IAAI,KAAK;AAChG,WAAK,aAAa,MAAM,UAAU,KAAK,iBAAiB,KAAK;AAC7D,WAAK,aAAa,MAAM,UAAU,KAAK,kBAAkB,KAAK,iBAAiB,IAAI,KAAK;AAAA,IAC5F;AAAA,IAEQ,cAAoB;AAExB,UAAI,aAAa,KAAK;AACtB,UAAI,aAAa,KAAK,iBAAiB;AACvC,UAAI,WAAW,KAAK,SAAS;AAC7B,UAAI,WAAW,KAAK,SAAS;AAE7B,WAAK,cAAc,MAAM,YAAY,KAAK,cAAc,MAAM,YAAa,cAAc,CAAC,WAAY,WAAY,aAAa,WAAW;AAC1I,WAAK,cAAc,MAAM,YAAY,KAAK,iBAAiB,MAAM,YAAa,CAAC,cAAc,WAAY,WAAY,aAAa,WAAY,aAAa,WAAW;AACtK,WAAK,cAAc,MAAM,YAAa,YAAY,aAAc,WAAW;AAC3E,WAAK,iBAAiB,MAAM,YAAY,KAAK,iBAAiB,MAAM,YAAa,cAAc,CAAC,WAAY,WAAW;AACvH,WAAK,iBAAiB,MAAM,YAAa,WAAY,WAAW;AAEhE,UAAI,KAAK,SAAS;AACd,aAAK,aAAa,EAAE,QAAQ,QAAM,GAAG,UAAU,IAAI,KAAK,SAAS,aAAa,CAAC;AAAA,IACvF;AAAA,IAEQ,cAAoB;AACxB,UAAI,KAAK,iBAAiB,GAAG;AACzB,YAAI,KAAK,gBAAgB;AACrB,cAAI,KAAK,SAAS,cAAc;AAC5B,iBAAK,oBAAoB,KAAK;AAC9B,iBAAK,oBAAoB,KAAK;AAAA,UAClC,OAAO;AACH,iBAAK,oBAAoB,KAAK,oBAAoB,KAAK;AAAA,UAC3D;AAAA,QACJ,OAAO;AACH,eAAK,oBAAoB,KAAK,oBAAoB,KAAK;AAAA,QAC3D;AAAA,MACJ,OAAO;AACH,YAAI,KAAK,gBAAgB;AACrB,cAAI,KAAK,SAAS,cAAc;AAC5B,iBAAK,oBAAoB,KAAK;AAC9B,iBAAK,oBAAoB,KAAK;AAAA,UAClC,OAAO;AACH,iBAAK,oBAAoB,KAAK,oBAAoB,KAAK;AAAA,UAC3D;AAAA,QACJ,OAAO;AACH,eAAK,oBAAoB,KAAK,oBAAoB,KAAK;AAAA,QAC3D;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,8BAAoC;AACxC,YAAM,IAAI,CAAC,qBAAqB,sBAAsB,gBAAgB,eAAe;AACrF,YAAM,IAAI,CAAC,oBAAoB,uBAAuB,eAAe,gBAAgB;AAErF,UAAI,KAAK,KAAK,aAAa,YAAY,EAAE,OAAO,EAAE,OAAO,yBAAyB,KAAK,SAAS,cAAc,sBAAsB,KAAK,OAAO,oBAAoB,CAAC,CAAC;AACtK,WAAK,yBAAyB;AAC9B,UAAI,KAAK,iBAAiB,EAAE;AAC5B,UAAI,GAAG,aAAa;AAChB,UAAE,QAAQ,SAAO,KAAK,0BAA0B,WAAW,GAAG,iBAAiB,GAAG,CAAC,KAAK,CAAC;AAC7F,SAAG,OAAO;AAEV,UAAI,IAAI,KAAK,YAAY,YAAY;AAAA,QAAE;AAAA,QAAO,EAAE,OAAO,YAAY;AAAA,QAC/D,KAAK,EAAE,OAAO,EAAE,OAAO,cAAc,IAAI,IAAI,OAAO,qBAAqB,CAAC;AAAA,MAAC,CAAC;AAChF,SAAG,YAAY;AACf,WAAK,iBAAiB,KAAK,kBAAkB;AAC7C,WAAK,iBAAiB,EAAE;AACxB,UAAI,GAAG,aAAa,cAAc;AAC9B,UAAE,QAAQ,SAAO,KAAK,kBAAkB,WAAW,GAAG,iBAAiB,GAAG,CAAC,KAAK,CAAC;AACjF,UAAE,QAAQ,SAAO,KAAK,mBAAmB,WAAW,GAAG,iBAAiB,GAAG,CAAC,KAAK,CAAC;AAAA,MACtF;AACA,QAAE,OAAO;AAET,WAAK,uBAAuB,KAAK,IAAI,KAAK,wBAAwB,KAAK,cAAc;AAAA,IACzF;AAAA,IAEQ,iBAAiB;AACrB,UAAI,KAAK,KAAK,aAAa,SAAS,cAAc,OAAO;AACzD,SAAG,QAAQ,MAAM,KAAK;AACtB,UAAI,YAAa,KAAK,SAAS,YAAY,KAAK;AAChD,UAAI,QAAQ;AAAA,QACR,MAAM,KAAK,OAAO,mCAAmC,KAAK,QAAQ;AAAA,QAClE,MAAM,KAAK,OAAO,6BAA6B,KAAK,QAAQ;AAAA,QAC5D,MAAM,KAAK,OAAO,gCAAgC,KAAK,SAAS,iBAAiB;AAAA,QACjF,MAAM,KAAK,OAAO,qCAAqC,KAAK,SAAS,sBAAsB;AAAA,QAC3F,MAAM,KAAK,OAAO,wCAAwC,KAAK,SAAS,kBAAkB;AAAA,QAC1F,MAAM,KAAK,OAAO,2BAA2B,YAAY;AAAA,QACzD,MAAM,KAAK,OAAO,0BAA0B,KAAK,SAAS,YAAY;AAAA,QACtE,MAAM,KAAK,OAAO,wCAAwC,KAAK,SAAS,kBAAkB;AAAA,MAC9F;AAEA,UAAI,OAAO,KAAK;AAChB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,cAAM,KAAK,MAAM,KAAK,OAAO,QAAQ,IAAI,MAAM;AAC/C,cAAM,KAAK,MAAM,KAAK,OAAO,QAAQ,IAAI,MAAM;AAAA,MACnD;AAEA,SAAG,YAAY,SAAS,eAAe,MAAM,KAAK,GAAG,CAAC,CAAC;AACvD,eAAS,KAAK,YAAY,EAAE;AAAA,IAChC;AAAA,IAEQ,kBAAkB,KAAyC;AAC/D,UAAI,CAAC,KAAK,aAAa;AACnB,YAAI,oBAAoB,SAAS,cAAc,qBAAqB,KAAK,OAAO,IAAI;AACpF,YAAI,qBAAqB,kBAAkB,OAAO;AAC9C,eAAK,cAAc,kBAAkB;AAAA,QACzC,OAAO;AACH,cAAI,SAAS,SAAS;AACtB,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,iBAAK,OAAO,GAAG,aAAc,OAAO,GAAW,kBAAkB,KAAK,YAAY;AAC9E,mBAAK,cAAc,OAAO;AAC1B;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,CAAC,KAAK,aAAa;AACnB,gBAAM,IAAI,MAAM,yBAAyB;AAAA,QAC7C;AAGA,aAAK,mBAAmB,CAAC;AACzB,aAAK,mBAAmB,CAAC;AACzB,YAAI,WAAY,KAAK,YAAY,YAAY,KAAK,YAAY;AAC9D,YAAI,SAAS;AACb,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,cAAI,WAAW,SAAS,GAAG;AAC3B,cAAI,UAAU,SAAS,KAAK,QAAQ,GAAG;AACnC,wBAAY,SAAS,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,MAAM,GAAG,EAAE;AACnE,iBAAK,iBAAiB,aAAa,SAAS;AAAA,UAChD,WAAW,UAAU,SAAS,KAAK,QAAQ,GAAG;AAC1C,wBAAY,SAAS,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,MAAM,GAAG,EAAE;AACnE,iBAAK,iBAAiB,aAAa,SAAS;AAAA,UAChD;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO,KAAK,OAAO;AAAA,QACf,SAAS,KAAK,iBAAiB;AAAA,QAC/B,QAAQ,KAAK,iBAAiB;AAAA,MAClC,IAAI;AAAA,QACA,QAAQ,KAAK,iBAAiB;AAAA,QAC9B,SAAS,KAAK,iBAAiB;AAAA,MACnC;AAAA,IACJ;AAAA,IAEQ,iBAAiB;AACrB,WAAK,WAAW,OAAO;AACvB,WAAK,cAAc;AAAA,IACvB;AAAA,IAEA,UAAU;AACN,WAAK,cAAc,EAAE,kBAAkB;AAEvC,WAAK,QAAQ,KAAK,eAAe;AAEjC,UAAI,IAAI,KAAK,SAAS;AACtB,aAAO,KAAK;AACR,aAAK,iBAAiB,KAAK,SAAS,EAAE;AAAA,MAC1C;AAEA,UAAI,KAAK,SAAS,qBAAqB;AACnC,QAAC,EAAE,CAAC,KAAK,cAAc,KAAK,YAAY,CAAC,EAAE,OAAO,cAAc,EAAU,SAAS,SAAS;AAAA,MAChG;AAEA,WAAK,2BAA2B;AAChC,QAAE,KAAK,UAAU,EAAE,IAAI,YAAY;AACnC,WAAK,eAAe;AAEpB,WAAK,YAAY,EAAE,IAAI,iCAAiC;AACxD,QAAE,KAAK,UAAU,EAAE,MAAM,EAAE,YAAY,KAAK,IAAI;AAEhD,eAAS,KAAK,MAAM;AAChB,YAAI,CAAC,OAAO,UAAU,eAAe,KAAK,MAAM,CAAC;AAC7C;AACJ,YAAI,EAAE,WAAW,IAAI,GAAG;AACpB,cAAI,KAAU,KAAK;AACnB,eAAK,yBAAc,WAAU,yBAAc;AACvC,YAAC,yBAAc;AAAA,QACvB;AACA,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AAAA,IAMQ,QACJ,KAA+B,MAAc,GAAgB;AAC7D,UAAI,KAAK,IAAI,UAAU;AACvB,aAAO,QAAQ,CAAC;AAChB,WAAK,OAAO;AACZ,aAAO,IAAI,OAAO,MAAM,GAAG,IAAI;AAAA,IACnC;AAAA,IAEA,gBAA4B;AACxB,aAAO,KAAK,SAAS;AAAA,IACzB;AAAA,IAEA,oBAAoC;AAChC,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,eAAe,IAAoB;AAC/B,aAAO,KAAK,SAAS;AAAA,IACzB;AAAA,IAEA,sBAAsB,IAAoB;AACtC,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IAEA,kBAAwB;AACpB,UAAI,GAAG,GACH,SAAS,CAAC,GACV,eAAe,GACf,QAAQ,GACR,WACA,aAAa,KAAK,sBAAsB,KAAK,aAAa,KAAK,YAAY,QAAQ,KAAK,YACxF,OAAO,KAAK;AAEhB,WAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC9B,YAAI,KAAK;AACT,eAAO,KAAK,EAAE,KAAK;AACnB,iBAAS,EAAE;AACX,YAAI,EAAE,WAAW;AACb,0BAAgB,EAAE,QAAQ,KAAK,IAAI,EAAE,UAAU,KAAK,oBAAoB;AAAA,QAC5E;AAAA,MACJ;AAGA,kBAAY;AACZ,aAAO,QAAQ,cAAc,cAAc;AACvC,YAAI,oBAAoB,QAAQ,cAAc;AAC9C,aAAK,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,YAAY,KAAK;AACpD,cAAI,KAAK;AACT,cAAI,QAAQ,OAAO;AACnB,cAAI,CAAC,EAAE,aAAa,SAAS,EAAE,YAAY,SAAS,KAAK,sBAAsB;AAC3E;AAAA,UACJ;AACA,cAAI,cAAc,KAAK,IAAI,EAAE,UAAU,KAAK,oBAAoB;AAChE,cAAI,aAAa,KAAK,MAAM,oBAAoB,QAAQ,YAAY,KAAK;AACzE,uBAAa,KAAK,IAAI,YAAY,QAAQ,WAAW;AACrD,mBAAS;AACT,0BAAgB;AAChB,iBAAO,MAAM;AAAA,QACjB;AACA,YAAI,aAAa,OAAO;AACpB;AAAA,QACJ;AACA,oBAAY;AAAA,MAChB;AAGA,kBAAY;AACZ,aAAO,QAAQ,YAAY;AACvB,YAAI,iBAAiB,aAAa;AAClC,aAAK,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,YAAY,KAAK;AACpD,cAAI,KAAK;AACT,cAAI,eAAe,OAAO;AAC1B,cAAI;AAEJ,cAAI,CAAC,EAAE,aAAa,EAAE,YAAY,cAAc;AAC5C,uBAAW;AAAA,UACf,OAAO;AACH,uBAAW,KAAK,IAAI,KAAK,MAAM,iBAAiB,YAAY,IAAI,cAAe,EAAE,WAAW,gBAAiB,GAAO,KAAK;AAAA,UAC7H;AACA,mBAAS;AACT,iBAAO,MAAO,SAAS,aAAa,WAAW;AAAA,QACnD;AACA,YAAI,aAAa,OAAO;AACpB;AAAA,QACJ;AACA,oBAAY;AAAA,MAChB;AAEA,UAAI,WAAW;AACf,WAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAC9B,YAAI,KAAK,GAAG,oBAAoB,KAAK,GAAG,SAAS,OAAO,IAAI;AACxD,qBAAW;AAAA,QACf;AACA,aAAK,GAAG,QAAQ,OAAO;AAAA,MAC3B;AAEA,WAAK,wBAAwB;AAC7B,WAAK,kBAAkB,IAAI;AAC3B,UAAI,UAAU;AACV,aAAK,kBAAkB;AACvB,aAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AAAA,IAEQ,0BAAgC;AACpC,UAAI,CAAC,KAAK,cAAc;AAAE;AAAA,MAAQ;AAClC,UAAI,GAAgB,OAAO,KAAK,OAAO,QAAQ,KAAK,QAAQ,aAAa,KAAK,aAAa,WAAW,KAAK,aAAa,UAAU,WAAW,KAAK,aAAa;AAC/J,eAAS,IAAI,GAAG,KAAK,SAAS,SAAS,SAAS,QAAQ,IAAI,MAAM,IAAI,OAAO,KAAK;AAC9E,aAAK,cAAc,KAAK,aAAa,WAAW,UAAU,KAAK,aAAa,KAAK,KAAK,aAAa,IAAI,aAAa,CAAC;AACrH,YAAI,SAAS,KAAK,GAAG,QAAQ,KAAK;AAClC,YAAI,EAAE,gBAAgB,QAAQ;AAC1B,YAAE,MAAM,QAAQ,SAAS;AAAA,QAC7B;AAAA,MACJ;AAEA,WAAK,uBAAuB;AAAA,IAChC;AAAA,IAEQ,oBAA0B;AAC9B,UAAI,IAAI,GAAG,GAAG,MAAM,OAAO,KAAK,OAAO,aAAa,KAAK;AACzD,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,YAAI,cAAc;AACd,cAAI;AACR,YAAI,KAAK,GAAG;AACZ,eAAO,KAAK,kBAAkB,CAAC;AAC/B,aAAK,KAAK,OAAO,MAAM,KAAK,SAAS,IAAI;AACzC,aAAK,KAAK,OAAO,MAAM,KAAK,UAAY,aAAa,KAAK,KAAK,aAAc,KAAK,gBAAgB,KAAK,iBAAiB,IAAI,IAAK;AACjI,aAAK;AAAA,MACT;AAAA,IACJ;AAAA,IAEA,cAAc,UAAkB,WAAoB;AAChD,WAAK,eAAe,CAAC,EAAE,UAAoB,SAAS,UAAU,CAAC,CAAC;AAAA,IACpE;AAAA,IAEA,eAAe,MAAoB;AAC/B,WAAK,eAAe,QAAQ,CAAC;AAE7B,UAAI,kBAAkB,MAAM,KAAK,KAAK,aAAa,QAAQ,EAAE,OAAO,MAAM,KAAK,KAAK,aAAa,QAAQ,CAAC;AAC1G,sBAAgB,QAAQ,SAAO;AAC3B,YAAI,UAAU,OAAO,4BAA4B;AACjD,YAAI,KAAK,IAAI,cAAc,uBAAuB;AAClD,cAAM,GAAG,UAAU,OAAO,4BAA4B,2BAA2B;AAAA,MACrF,CAAC;AAED,WAAK,aAAa,QAAQ,SAAO;AAC7B,YAAI,IAAI,WAAW,MAAM;AACrB,cAAI,UAAU;AAAA,QAClB;AACA,YAAI,cAAc,KAAK,eAAe,IAAI,QAAQ;AAClD,YAAI,eAAe,MAAM;AACrB,cAAI,SAAS,gBAAgB;AAC7B,cAAI,QAAQ;AACR,mBAAO,UAAU,IAAI,4BAA4B;AACjD,gBAAI,KAAK,OAAO,cAAc,uBAAuB;AACrD,kBAAM,GAAG,UAAU,IAAI,IAAI,UAAU,6BAA6B,2BAA2B;AAAA,UACjG;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IAEA,iBAA+B;AAC3B,aAAO,KAAK;AAAA,IAChB;AAAA,IAqDA,aAA8B;AAC1B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,oBAAqC;AACjC,aAAO,KAAK;AAAA,IAChB;AAAA,IAEQ,yBAA+B;AACnC,WAAK,WAAW,CAAC;AACjB,WAAK,YAAY,CAAC;AAClB,UAAI,IAAI,GAAG,GAAW,OAAO,KAAK,OAAO,GAAW,IAAY,KAAK,QAAQ,aAAa,KAAK;AAC/F,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,YAAI,eAAe;AACf,cAAI;AACR,YAAI,IAAI,KAAK,GAAG;AAChB,aAAK,SAAS,KAAK;AACnB,aAAK,UAAU,KAAK;AACpB,YAAI;AAAA,MACR;AAAA,IACJ;AAAA,IAEQ,eAAe,UAAoB;AAEvC,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc,CAAC;AACnB,UAAI,gBAA0B,CAAC;AAC/B,UAAI,WAAqB,CAAC;AAC1B,UAAI,cAAyC,CAAC;AAC9C,UAAI,GAAW,GAAW;AAC1B,WAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AAClC,YAAI,SAAS;AAEb,aAAK,KAAK,MAAM;AACZ,cAAI,EAAE,OAAO;AACT,cAAE,KAAK,KAAK,aAAa;AAAA,QACjC;AAEA,YAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU;AACpC,YAAE,QAAQ,EAAE;AAAA,QAChB;AAEA,YAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,UAAU;AACpC,YAAE,QAAQ,EAAE;AAAA,QAChB;AAEA,oBAAY,EAAE,MAAM;AAEpB,YAAI,EAAE,YAAY,OAAO;AACrB,WAAC,EAAE,SAAS,gBAAgB,UAAU,KAAK,CAAC;AAAA,QAChD;AAAA,MACJ;AAEA,WAAK,cAAc,cAAc;AACjC,UAAI,cAAc,SAAS;AACvB,mBAAW,cAAc,OAAO,QAAQ;AAE5C,WAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AAClC,YAAI,SAAS;AACb,oBAAY,EAAE,MAAM;AAAA,MACxB;AAEA,WAAK,YAAY;AACjB,WAAK,eAAe;AACpB,WAAK,QAAQ;AACb,WAAK,WAAW;AAAA,IACpB;AAAA,IAEA,WAAW,SAAgC;AA13D/C;AA23DQ,WAAK,eAAe,OAAO;AAC3B,WAAK,uBAAuB;AAE5B,UAAI,KAAK,cAAc;AACnB,aAAK,kBAAkB;AACvB,aAAK,YAAY;AAEjB,aAAK,kBAAkB;AACvB,aAAK,oBAAoB;AACzB,aAAK,oBAAoB;AACzB,aAAK,mBAAmB;AACxB,aAAK,eAAe;AACpB,aAAK,eAAe;AACpB,aAAK,aAAa;AAClB,aAAK,kBAAkB;AACvB,aAAK,kBAAkB;AACvB,aAAK,aAAa;AAClB,mBAAK,kBAAkB,MAAvB,mBAA0B;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEA,aAAiC;AAC7B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,WAAW,MAA0B,gBAA0B,mBAA6B,qBAAqC;AAp5DrI;AAq5DQ,UAAI,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC3C;AAAA,MACJ;AAEA,WAAK,qBAAqB;AAE1B,UAAI,KAAK,qBAAqB,QAAW;AACrC,aAAK,0BAA0B,KAAK,gBAAgB;AAAA,MACxD;AAEA,UAAI,KAAK,SAAS,iBAAiB,KAAK,cAAc;AAClD,aAAK,cAAc,KAAK,cAAc,CAAC;AAAA,MAC3C;AAEA,WAAK,WAAW,EAAE,OAAO,KAAK,UAAU,IAAI;AAC5C,WAAK,0BAA0B;AAC/B,WAAK,sBAAsB;AAE3B,WAAK,aAAa,EAAE,QAAQ,QAAM,GAAG,MAAM,YAAY,KAAK,SAAS,aAAa,WAAW,MAAM;AAEnG,UAAI,CAAC,qBAAqB;AACtB,aAAK,YAAY;AAAA,MACrB;AAEA,UAAI,KAAK,WAAW,CAAC,mBAAmB;AACpC,iCAAyB,KAAK,SAAS,KAAK,QAAQ;AACpD,aAAK,YAAW,UAAK,YAAL,YAAgB,KAAK,SAAS;AAAA,MAClD,WACS,KAAK,gBAAgB,MAAM;AAChC,iCAAyB,KAAK,WAAW,KAAK,QAAQ;AACtD,aAAK,WAAW,KAAK,SAAS;AAAA,MAClC;AAEA,WAAK,YAAY;AACjB,UAAI,CAAC;AACD,aAAK,OAAO;AAAA,IACpB;AAAA,IAEQ,4BAAkC;AACtC,UAAI,KAAK,SAAS,YAAY;AAC1B,aAAK,SAAS,uBAAuB;AAAA,MACzC;AAAA,IACJ;AAAA,IAkBQ,aAAmB;AACvB,UAAI,KAAK,OAAO;AACZ,aAAK,MAAM,qBAAqB,KAAK,MAAM,kBAAkB,UAAU,KAAK,qBAAqB;AACjG,aAAK,MAAM,iBAAiB,KAAK,MAAM,cAAc,UAAU,KAAK,iBAAiB;AACrF,aAAK,MAAM,iBAAiB,KAAK,MAAM,cAAc,UAAU,KAAK,iBAAiB;AAAA,MACzF;AAAA,IACJ;AAAA,IAEQ,iBAAuB;AAC3B,UAAI,KAAK,OAAO;AACZ,aAAK,MAAM,qBAAqB,KAAK,MAAM,kBAAkB,YAAY,KAAK,qBAAqB;AACnG,aAAK,MAAM,iBAAiB,KAAK,MAAM,cAAc,YAAY,KAAK,iBAAiB;AACvF,aAAK,MAAM,iBAAiB,KAAK,MAAM,cAAc,YAAY,KAAK,iBAAiB;AAAA,MAC3F;AAAA,IACJ;AAAA,IAEA,QAAQ,SAAc,aAAuB;AACzC,WAAK,eAAe;AACpB,WAAK,QAAQ;AACb,WAAK,WAAW;AAChB,WAAK,kBAAkB;AACvB,WAAK,eAAe;AACpB,UAAI,aAAa;AACb,aAAK,SAAS,CAAC;AAAA,MACnB;AAAA,IACJ;AAAA,IAEA,UAAe;AACX,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,gBAAwB;AACpB,UAAI,KAAK,MAAM,WAAW;AACtB,eAAO,KAAK,MAAM,UAAU;AAAA,MAChC,OAAO;AACH,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA,IACJ;AAAA,IAEQ,+BAAuC;AAC3C,aAAO,KAAK,cAAc,KAAK,CAAC,KAAK,SAAS,eAAe,IACxD,CAAC,KAAK,iBAAiB,KAAK,oBAAoB,IAAI;AAAA,IAC7D;AAAA,IAEA,YAAY,GAAkB;AAC1B,UAAI,KAAK,MAAM,SAAS;AACpB,eAAO,KAAK,MAAM,QAAQ,CAAC;AAAA,MAC/B,OAAO;AACH,eAAO,KAAK,MAAM;AAAA,MACtB;AAAA,IACJ;AAAA,IAEA,cAA8B;AAC1B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,sBAAsB,SAAwB;AAC1C,UAAI,KAAK,SAAS,gBAAgB,SAAS;AACvC,aAAK,SAAS,eAAe,CAAC,CAAC;AAC/B,UAAE,CAAC,KAAK,WAAW,eAAe,KAAK,WAAW,aAAa,CAAC,EAAE,UAAU,cAAc,WAAW,QAAQ,KAAK,YAAY;AAAA,MAClI;AAAA,IACJ;AAAA,IAEA,0BAA0B,SAAkB,SAAmB;AAC3D,UAAI,KAAK,SAAS,oBAAoB,SAAS;AAC3C,aAAK,SAAS,mBAAmB;AACjC,YAAI,iBAAiB,EAAE,CAAC,KAAK,aAAa,eAAe,KAAK,aAAa,aAAa,CAAC;AACzF,YAAI,SAAS;AACT,cAAI,SAAS;AACT,2BAAe,UAAU,QAAQ,KAAK,YAAY;AAAA,UACtD,OAAO;AACH,2BAAe,KAAK;AACpB,iBAAK,aAAa;AAAA,UACtB;AAAA,QACJ,OAAO;AACH,cAAI,SAAS;AACT,2BAAe,QAAQ,QAAQ,KAAK,YAAY;AAAA,UACpD,OAAO;AACH,2BAAe,KAAK;AACpB,iBAAK,aAAa;AAAA,UACtB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,uBAAuB,SAAwB;AAC3C,UAAI,KAAK,SAAS,iBAAiB,SAAS;AACxC,aAAK,SAAS,gBAAgB,CAAC,CAAC;AAChC,UAAE,CAAC,KAAK,gBAAgB,eAAe,KAAK,gBAAgB,aAAa,CAAC,EAAE,UAAU,cAAc,WAAW,QAAQ,KAAK,YAAY;AAAA,MAC5I;AAAA,IACJ;AAAA,IAEA,2BAA2B,SAAwB;AAC/C,UAAI,KAAK,SAAS,qBAAqB,SAAS;AAC5C,aAAK,SAAS,oBAAoB;AAClC,YAAI,CAAC,KAAK,SAAS;AACf;AACJ,YAAI,SAAS;AACT,YAAE,KAAK,cAAc,EAAE,UAAU,QAAQ,KAAK,YAAY;AAAA,QAC9D,OAAO;AACH,YAAE,KAAK,cAAc,EAAE,QAAQ,QAAQ,KAAK,YAAY;AAAA,QAC5D;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,4BAA4B,SAAwB;AAChD,WAAK,2BAA2B,OAAO;AAAA,IAC3C;AAAA,IAEA,uBAAuB,SAAwB;AAC3C,UAAI,KAAK,SAAS,iBAAiB,SAAS;AACxC,aAAK,SAAS,gBAAgB;AAC9B,UAAE,CAAC,KAAK,gBAAgB,eAAe,KAAK,gBAAgB,aAAa,CAAC,EAAE,UAAU,cAAc,WAAW,QAAQ,KAAK,YAAY;AAAA,MAC5I;AAAA,IACJ;AAAA,IAEA,mBAAgC;AAC5B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,SAAiB;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IAKQ,UAAU,KAAqB;AACnC,aAAO,KAAK,SAAS,YAAY,MAAM,KAAK;AAAA,IAChD;AAAA,IAEQ,mBAAmB,GAAmB;AAC1C,aAAO,KAAK,OAAO,IAAI,KAAK,eAAe,KAAK,SAAS,SAAS;AAAA,IACtE;AAAA,IAEQ,SAAS,GAAiB;AAC9B,UAAI,KAAK,IAAI,GAAG,CAAC;AACjB,UAAI,KAAK,IAAI,GAAG,KAAK,iBAAiB,KAAK,MAAM,EAAE,KAAK,iBAAiB,EAAE,OAAO,CAAC,KAAM,KAAK,uBAAuB,KAAK,iBAAiB,IAAK,KAAK,YAAY,SAAS,EAAE;AAE5K,UAAI,YAAY,KAAK;AAErB,WAAK,QAAQ,KAAK,IAAI,KAAK,iBAAiB,GAAG,KAAK,MAAM,IAAI,KAAK,WAAW,CAAC;AAC/E,WAAK,cAAc,KAAK,MAAM,KAAK,QAAQ,KAAK,qBAAqB;AACrE,UAAI,eAAe,IAAI,KAAK;AAE5B,UAAI,KAAK,eAAe,WAAW;AAC/B,YAAI,QAAQ,KAAK,gBAAgB,YAAY;AAC7C,aAAK,YAAY,KAAK;AACtB,aAAK,mBAAmB;AAAA,MAC5B;AAEA,UAAI,KAAK,kBAAkB,cAAc;AACrC,aAAK,cAAe,KAAK,iBAAiB,YAAY,eAAe,KAAK,cAAe,IAAI;AAE7F,aAAK,qBAAsB,KAAK,aAAa,KAAK,iBAAiB;AAEnE,YAAI,KAAK,iBAAiB,GAAG;AACzB,eAAK,cAAc,YAAY;AAAA,QACnC;AAEA,YAAI,KAAK,gBAAgB;AACrB,eAAK,iBAAiB,YAAY,KAAK,iBAAiB,YAAY;AAAA,QACxE;AAEA,aAAK,kBAAkB,YAAY;AAEnC,aAAK,QAAQ,KAAK,iBAAiB;AAAA,MACvC;AAAA,IACJ;AAAA,IAEA,aAAa,KAAa,QAA+C;AACrE,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc,KAAK,mBAAmB,KAAK,gBAAgB,GAAG;AAClE,UAAI,eAAe,eAAe,YAAY;AAC9C,UAAI,eAAe,iBAAiB,aAAa,OAAO,OAAO,aAAa,KAAK,sBAAsB,OAAO,EAAE;AAEhH,aAAQ,gBAAgB,aAAa,aAChC,eAAe,YAAY,aAC5B,OAAO,aACN,KAAK,SAAS,oBAAoB,KAAK,SAAS,iBAAiB,aAAa,MAAM,KACrF,KAAK,SAAS;AAAA,IACtB;AAAA,IAEQ,UAAU,KAAa,MAAsB;AACjD,UAAI,SAAS,KAAK,MAAM;AACxB,UAAI,cAAc,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAC9E,UAAI,iBAAiB,eAAe,YAAY;AAEhD,UAAI,kBAAkB,eAAe,OAAO,OAAO,eAAe,OAAO,IAAI,WAAW,QAAW;AAC/F,eAAO,eAAe,OAAO,IAAI;AAAA,MACrC;AACA,UAAI,kBAAkB,eAAe,SAAS,eAAe,MAAM,WAAW,QAAW;AACrF,eAAO,eAAe,MAAM;AAAA,MAChC;AAEA,aAAO,OAAO,UAAW,KAAK,SAAS,iBAAiB,KAAK,SAAS,cAAc,UAAU,MAAM;AAAA,IACxG;AAAA,IAEQ,0BAA0B,MAAa,WAA+B;AAC1E,UAAI,KAAK,SAAS,8BAA8B;AAC5C,eAAO,KAAK,SAAS,6BAA6B,MAAM,SAAS;AAAA,MACrE;AACA,aAAO,KAAK,UAAU;AAAA,IAC1B;AAAA,IAEQ,cAAc,cAAwB,cAAwB,KAAa,OAAkB,YAA0B;AAC3H,UAAI,IAAI,KAAK,YAAY,GAAG;AAC5B,UAAI,cAAc,MAAM,cAAc,CAAC;AACvC,UAAI,SAAS,eACR,KAAK,kBAAkB,OAAO,KAAK,SAAS,YAAY,YAAY,OACpE,cAAc,aAAa,OAC3B,QAAQ,KAAK,aAAa,YAAY,OACtC,MAAM,KAAK,IAAI,SAAS;AAE7B,UAAI,CAAC,GAAG;AACJ,kBAAU,MAAM,KAAK,SAAS;AAAA,MAClC;AAEA,UAAI,WAAW,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAE3E,UAAI,YAAY,SAAS,YAAY;AACjC,kBAAU,MAAM,SAAS;AAAA,MAC7B;AAEA,UAAI,kBAAkB,KAAK,mBAAmB,GAAG;AAEjD,UAAI,UAAU,kBAAkB,KAAK,SAAS,cAAc,uBAAuB,MAAM,SAAS,mBAC3F,KAAK,UAAU,GAAG,IAAI,mBACvB;AAEN,mBAAa,KAAK,OAAO;AAEzB,UAAI,KAAK,iBAAiB,GAAG;AACzB,qBAAa,KAAK,OAAO;AAAA,MAC7B;AAEA,UAAI,SAAS,GAAG,OAAO,KAAK,OAAO,aAAa,KAAK;AACrD,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC3C,YAAI,aAAa;AACjB,YAAI,KAAK;AACT,kBAAU;AACV,YAAI,YAAY,SAAS,SAAS;AAC9B,uBAAa,SAAS,QAAQ,EAAE,OAAO,SAAS,QAAQ;AACxD,oBAAW,cAAc,WAAW,WAAY;AAChD,cAAI,YAAY,KAAK;AACjB,sBAAU,KAAK;AAAA,UACnB;AAAA,QACJ;AAGA,YAAI,KAAK,UAAU,KAAK,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,KAAK,MAAM,QAAQ;AAClE,cAAI,KAAK,SAAS,KAAK,MAAM,SAAS;AAElC;AAAA,UACJ;AAEA,eAAK,eAAe,aAAa,KAAK,KAAK,aAAa,eAAe,cAAc,KAAK,GAAG,SAAS,GAAG,UAAU;AAAA,QACvH;AAEA,YAAI,UAAU,GAAG;AACb,eAAM,UAAU;AAAA,QACpB;AAAA,MACJ;AAEA,mBAAa,KAAK,QAAQ;AAE1B,UAAI,KAAK,iBAAiB,GAAG;AACzB,qBAAa,KAAK,QAAQ;AAAA,MAC9B;AAAA,IACJ;AAAA,IAEQ,eAAe,IAAc,KAAa,MAAc,SAAiB,MAAa,UAAqB;AAhuEvH;AAiuEQ,UAAI,OAAO,KAAK,OAAO,aAAa,KAAK,aAAa,IAAI,KAAK;AAC/D,UAAI,QAAQ,iBAAiB,OAAO,OAAO,KAAK,IAAI,KAAK,SAAS,GAAG,OAAO,UAAU,CAAC,KAClF,EAAE,WAAW,MAAM,EAAE,WAAW;AAErC,UAAI,OAAO;AACP,iBAAS;AAEb,UAAI,QAAQ,KAAK,cAAc,SAAS,KAAK;AACzC,iBAAS;AAEb,UAAI,YAAY,SAAS,YAAY;AACjC,iBAAS,MAAM,SAAS;AAAA,MAC5B;AAEA,eAAS,OAAO,KAAK,iBAAiB;AAClC,YAAI,KAAK,gBAAgB,KAAK,QAAQ,KAAK,gBAAgB,KAAK,KAAK,EAAE,KAAK;AACxE,mBAAU,MAAM,KAAK,gBAAgB,KAAK,KAAK,EAAE;AAAA,QACrD;AAAA,MACJ;AAGA,UAAI;AACJ,UAAI,MAAM;AACN,YAAI,QAAQ,KAAK,0BAA0B,MAAM,CAAC;AAClD,oBAAY,KAAK,aAAa,KAAK,CAAC,EAAE,KAAK,MAAM,OAAO,GAAG,MAAM,IAAI;AAAA,MACzE;AAEA,UAAI,aAAa;AACb,WAAG,KAAK,iBAAiB,WAAW,KAAK,IAAI,UAAU;AAAA,eAClD,OAAO,cAAc;AAC1B,WAAG,KAAK,iBAAiB,WAAW,KAAK,IAAI,OAAO,YAAY,QAAQ;AAAA,WACvE;AACD,aAAI,eAAU,aAAV,mBAAoB;AACpB,mBAAU,MAAM,UAAU;AAE9B,WAAG,KAAK,iBAAiB,WAAW,KAAK,IAAI,GAAG;AAEhD,aAAI,eAAU,aAAV,mBAAoB;AACpB,aAAG,KAAK,mBAAmB,WAAW,UAAU,QAAQ,IAAI,GAAG;AAEnE,YAAI,QAAQ,UAAU;AACtB,YAAI,SAAS,MAAM;AACf,cAAI,KAAK,CAAC;AACV,mBAAS,KAAK,OAAO;AACjB,eAAG,KAAK,IAAI,OAAO,WAAW,MAAM,EAAE,IAAI,GAAG;AAC7C,eAAG,KAAK,CAAC;AAAA,UACb;AACA,aAAG,KAAK,mBAAmB,WAAW,GAAG,KAAK,GAAG,CAAC,IAAI,GAAG;AAAA,QAC7D;AAEA,YAAI,UAAU,UAAU;AACxB,YAAI,WAAW,QAAQ,QAAQ;AAC3B,aAAG,KAAK,cAAc,WAAW,OAAO,IAAI,GAAG;AAEnD,aAAI,eAAU,SAAV,mBAAgB;AAChB,aAAG,KAAK,MAAM,UAAU,OAAO,QAAQ;AAAA;AAEvC,aAAG,KAAK,SAAS;AAAA,MACzB;AAEA,WAAK,WAAW,KAAK,gBAAgB,KAAK,IAAI;AAC9C,WAAK,WAAW,KAAK,aAAa,QAAQ;AAAA,IAC9C;AAAA,IAEQ,YAAY,aAA8B;AAC9C,UAAI;AACJ,eAAS,KAAK,KAAK,YAAY;AAC3B,YAAI,kBAAkB;AACtB,YAAI,SAAS,GAAG,EAAE;AAClB,YAAI,KAAK,mBACA,KAAK,SAAS,gBAAgB,KAAK,KAAK,oBACrC,CAAC,KAAK,SAAS,gBAAgB,KAAK,KAAK,mBAEnD;AACE,4BAAkB;AAAA,QACtB;AAEA,YAAI,MAAM,KAAK,eACP,IAAI,YAAY,OAAO,IAAI,YAAY,WACvC,iBAAkB;AACtB,eAAK,mBAAmB,CAAC;AAAA,QAC7B;AAAA,MACJ;AAEA,WAAK,SAAS,gCAAgC,KAAK,2BAA2B;AAAA,IAClF;AAAA,IAEA,aAAmB;AACf,WAAK,eAAe;AACpB,WAAK,kBAAkB;AACvB,WAAK,OAAO;AACZ,WAAK,mBAAmB;AAAA,IAC5B;AAAA,IAEA,oBAA0B;AACtB,UAAI,KAAK,gBAAgB;AACrB,aAAK,qBAAqB;AAAA,MAC9B;AACA,eAAS,OAAO,KAAK,YAAY;AAC7B,aAAK,mBAAmB,SAAS,KAAK,EAAE,CAAC;AAAA,MAC7C;AAEA,WAAK,SAAS,gCAAgC,KAAK,2BAA2B;AAAA,IAClF;AAAA,IAEQ,gCAAgC,YAAuB,kBAA0C,QAAsB;AA10EnI;AA20EQ,WAAK;AAGL,eAAS,KAAK,kBAAkB;AAC5B,YAAI,iBAAiB,eAAe,CAAC,GAAG;AACpC,cAAI,YAAY,SAAS,GAAG,EAAE;AAC9B,eAAK,yBAAyB,KAAK;AAAA,YAC/B,SAAS,KAAK;AAAA,YACd,UAAU,WAAW,qBAAqB,YAAY;AAAA,YACtD,WAAW,YAAY;AAAA,YACvB;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAEA,WAAK,yBAAyB,KAAK;AAAA,QAC/B,SAAS,KAAK;AAAA,QACd,UAAU,WAAW;AAAA,QACrB,UAAU,WAAW;AAAA,MACzB,CAAC;AAED,uBAAW,aAAX,mBAAqB;AACrB,uBAAW,aAAX,mBAAqB;AAAA,IACzB;AAAA,IAEQ,iCAAiC,UAAuB,WAAmB,QAAsB;AACrG,WAAK,yBAAyB,KAAK;AAAA,QAC/B,SAAS,KAAK;AAAA,QACd,UAAU;AAAA,QACV;AAAA,QACA;AAAA,MACJ,CAAC;AACD,QAAE,QAAQ,EAAE,OAAO;AAAA,IACvB;AAAA,IAEQ,mBAAmB,KAAmB;AA92ElD;AA+2EQ,UAAI,aAAa,KAAK,WAAW;AACjC,UAAI,CAAC,YAAY;AACb;AAAA,MACJ;AAEA,UAAI,KAAK,SAAS,gCAAgC,KAAK,mBAAmB,MAAM;AAC5E,aAAK,gCAAgC,YAAY,KAAK,mBAAmB,MAAM,GAAG;AAAA,MACtF,OACK;AACD,+BAAW,aAAX,mBAAqB,kBAArB,mBAAoC,YAAY,WAAW;AAC3D,+BAAW,aAAX,mBAAqB,kBAArB,mBAAoC,YAAY,WAAW;AAAA,MAC/D;AAEA,aAAO,KAAK,WAAW;AACvB,aAAO,KAAK,mBAAmB;AAAA,IACnC;AAAA,IAEA,eAAe,MAAsB;AACjC,UAAI,GAAG;AACP,UAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ;AACvB;AAAA,MACJ;AACA,WAAK,cAAc;AACnB,WAAK,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AACvC,YAAI,KAAK,kBAAkB,KAAK,eAAe,KAAK,IAAI;AACpD,eAAK,qBAAqB;AAAA,QAC9B;AACA,YAAI,KAAK,WAAW,KAAK,KAAK;AAC1B,eAAK,mBAAmB,KAAK,EAAE;AAAA,QACnC;AAAA,MACJ;AAEA,WAAK,SAAS,gCAAgC,KAAK,2BAA2B;AAAA,IAClF;AAAA,IAEA,cAAc,KAAmB;AAC7B,WAAK,eAAe,CAAC,GAAG,CAAC;AAAA,IAC7B;AAAA,IAEA,4BAA4B,WAAqC,UAAuB;AAt5E5F;AAu5EQ,UAAI,aAAY,cAAS,YAAT,mBAAkB;AAClC,UAAI,aAAa,QAAQ,UAAU,SAAS,GAAG;AAC3C,iBAAS,UAAU,OAAO,GAAG,UAAU,MAAM,GAAG,CAAC;AACjD,eAAO,SAAS,QAAQ;AAAA,MAC5B;AAEA,UAAI,aAAY,cAAS,YAAT,mBAAkB;AAClC,UAAI,aAAa,QAAQ,UAAU,SAAS,GAAG;AAC3C,iBAAS,KAAK,UAAU,MAAM,GAAG;AAC7B,mBAAS,gBAAgB,CAAC;AAC9B,eAAO,SAAS,QAAQ;AAAA,MAC5B;AAEA,eAAS,gBAAgB,SAAS;AAElC,UAAI,aAAa,MAAM;AACnB,iBAAS,YAAY;AACrB;AAAA,MACJ;AAEA,UAAI,OAAO,cAAc,UAAU;AAC/B,iBAAS,YAAY;AACrB;AAAA,MACJ;AAEA,eAAS,YAAY,UAAU;AAE/B,WAAI,eAAU,aAAV,mBAAoB,QAAQ;AAC5B,iBAAS,UAAU,IAAI,GAAG,UAAU,SAAS,MAAM,GAAG,CAAC;AACvD,iBAAS,QAAQ,SAAS,UAAU;AAAA,MACxC;AAEA,UAAI,UAAU,YAAY,MAAM;AAC5B,YAAI,OAAO,OAAO,KAAK,UAAU,QAAQ;AACzC,YAAI,KAAK,QAAQ;AACb,mBAAS,KAAK,MAAM;AAChB,qBAAS,aAAa,GAAG,UAAU,SAAS,EAAE;AAAA,UAClD;AACA,mBAAS,QAAQ,SAAS,KAAK,KAAK,GAAG;AAAA,QAC3C;AAAA,MACJ;AAEA,WAAI,eAAU,YAAV,mBAAmB;AACnB,iBAAS,aAAa,WAAW,UAAU,OAAO;AAAA,IAC1D;AAAA,IAEA,WAAW,KAAa,MAAoB;AACxC,UAAI,WAAW,KAAK,YAAY,KAAK,IAAI;AACzC,UAAI,CAAC,UAAU;AACX;AAAA,MACJ;AAEA,UAAI,IAAI,KAAK,MAAM,OAAO,IAAI,KAAK,YAAY,GAAG;AAClD,UAAI,KAAK,kBAAkB,KAAK,eAAe,OAAO,KAAK,gBAAgB,MAAM;AAC7E,aAAK,eAAe,UAAU,CAAC;AAAA,MACnC,OAAO;AACH,YAAI,YAAY,IAAI,KAAK,aAAa,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK,0BAA0B,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;AACvG,aAAK,4BAA4B,WAAW,QAAQ;AACpD,aAAK,gCAAgC,GAAG;AAAA,MAC5C;AAAA,IACJ;AAAA,IAEA,UAAU,KAAmB;AACzB,UAAI,aAAa,KAAK,WAAW;AACjC,UAAI,CAAC,YAAY;AACb;AAAA,MACJ;AAEA,WAAK,2BAA2B,GAAG;AAEnC,UAAI,IAAI,KAAK,YAAY,GAAG;AAC5B,UAAI;AAEJ,eAAS,KAAK,WAAW,sBAAsB;AAC3C,YAAI,CAAC,WAAW,qBAAqB,eAAe,CAAC,GAAG;AACpD;AAAA,QACJ;AAEA,YAAI,YAAY,SAAS,GAAG,EAAE;AAC9B,YAAI,IAAI,KAAK,MAAM,YACf,OAAO,WAAW,qBAAqB;AAE3C,YAAI,QAAQ,KAAK,cAAc,cAAc,KAAK,eAAe,KAAK,gBAAgB;AAClF,eAAK,eAAe,UAAU,CAAC;AAAA,QACnC,OACK;AACD,sBAAY,IAAI,KAAK,aAAa,KAAK,CAAC,EAAE,KAAK,WAAW,KAAK,0BAA0B,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;AACxG,eAAK,4BAA4B,WAAW,IAAI;AAAA,QACpD;AAAA,MACJ;AAEA,WAAK,gCAAgC,GAAG;AAAA,IAC5C;AAAA,IAEQ,oBAA4B;AAChC,WAAK,kBAAmB,KAAK,SAAS,iBAAiB,KAAK,SAAS,oBAAsB,KAAK,SAAS,sBAAsB,KAAK,aAAa,KAAK,cAAc,IAAK;AACzK,WAAK,aAAa,KAAK,SAAS,eAAgB,KAAK,SAAS,iBAAiB,KAAK,aAAa,KAAK,WAAW,aAAa,IAAK;AACnI,WAAK,cAAc,KAAK,SAAS,gBAAiB,KAAK,SAAS,kBAAkB,KAAK,aAAa,KAAK,gBAAgB,aAAa,IAAK;AAC3I,WAAK,cAAc,KAAK,SAAS,gBAAiB,KAAK,SAAS,kBAAkB,KAAK,aAAa,KAAK,gBAAgB,aAAa,IAAK;AAE3I,UAAI,UAAW,KAAK,SAAS,mBAAqB,WAAW,iBAAiB,KAAK,aAAa,aAAa,EAAE,MAAM,IAAI,KAAK,aAAa,KAAK,aAAa,aAAa,IAAK;AAE/K,UAAI,KAAK,SAAS,YAAY;AAC1B,aAAK,aAAa,KAAK,SAAS,YAAY,KAAK,6BAA6B;AAE9E,YAAI,CAAC,KAAK,iBAAiB,GAAG;AAC1B,eAAK,cAAc,KAAK;AACxB,eAAK,cAAc;AACnB,eAAK,cAAc,KAAK;AACxB,eAAK,cAAc,KAAK;AACxB,eAAK,cAAc,KAAK,eAAe,IAAI,KAAK,aAAa,KAAK,YAAY,SAAS;AAAA,QAC3F;AAAA,MACJ,OAAO;AAEH,YAAI,QAAQ,iBAAiB,KAAK,UAAU;AAC5C,aAAK,aAAa,WAAW,MAAM,MAAM,IACnC,WAAW,MAAM,UAAU,IAC3B,WAAW,MAAM,aAAa,IAC9B,UACA,KAAK,aACL,KAAK,cACL,KAAK,cACL,KAAK;AAAA,MACf;AAEA,WAAK,kBAAkB,KAAK,KAAK,KAAK,aAAa,KAAK,SAAS,SAAS;AAC1E,aAAO,KAAK;AAAA,IAChB;AAAA,IAEQ,mBAAyB;AAC7B,WAAK,aAAa,WAAW,iBAAiB,KAAK,UAAU,EAAE,KAAK;AAAA,IACxE;AAAA,IAmHA,2BAA2B,YAAuE;AAC9F,WAAK,gBAAiB,WAAW,aAAa;AAC9C,WAAK,oBAAqB,WAAW,WAAW,WAAW,aAAa;AAAA,IAC5E;AAAA,IAEQ,iBAAuB;AAC3B,UAAI,CAAC,KAAK,cAAc;AACpB;AAAA,MACJ;AAEA,UAAI,4BAA4B,KAAK,6BAA6B;AAClE,UAAI,eAAe;AACnB,UAAI,OAAQ,KAAK,kBAAkB,CAAC,KAAK,SAAS,eAAgB,KAAK,MAAM,WAAW,iBAAiB,KAAK,cAAc,EAAE,MAAM,CAAC,IAAI,KAAK,MAAM,WAAW,iBAAiB,KAAK,WAAW,EAAE,MAAM,CAAC;AAEzM,UAAI,KAAK,gBAAgB;AACrB,YAAI,eAAe,KAAK,cAAc,IAAI,KAAK,SAAS;AAAA,MAC5D,OAAO;AACH,YAAI,eAAe,6BAA6B,KAAK,SAAS,uBAAuB,KAAK,kBAAkB,IAAI;AAAA,MACpH;AAEA,UAAI,gBAAgB,KAAK,MAAM,WAAW,iBAAiB,KAAK,iBAAiB,EAAE,MAAM,CAAC;AAC1F,UAAI,wBAAwB,KAAK;AAEjC,WAAK,sBAAsB,CAAC,KAAK,SAAS,cAAe,eAAe,KAAK,SAAS,YAAY;AAElG,WAAK,qBAAqB;AAI1B,UAAI,IAAI,4BAA4B;AACpC,eAAS,KAAK,KAAK,YAAY;AAC3B,YAAI,IAAI,SAAS,GAAG,EAAE;AACtB,YAAI,KAAK,GAAG;AACR,eAAK,mBAAmB,CAAC;AAAA,QAC7B;AAAA,MACJ;AAEA,WAAK,SAAS,gCAAgC,KAAK,2BAA2B;AAE9E,WAAK,iBAAiB,KAAK,IAAI,KAAK,SAAS,YAAY,cAAc,gBAAgB,KAAK,YAAY,MAAM;AAE9G,UAAI,KAAK,mBAAmB,KAAK,aAAa,GAAG;AAC7C,aAAK,gBAAgB;AAAA,MACzB;AAEA,UAAI,KAAK,iBAAiB,yBAAyB,GAAG;AAElD,aAAK,oBAAoB,KAAK,cAAc,KAAK;AACjD,aAAK,iBAAiB;AACtB,aAAK,wBAAwB;AAAA,MACjC,OAAO;AAEH,aAAK,oBAAoB,yBAAyB;AAClD,aAAK,cAAc,KAAK,oBAAoB;AAC5C,aAAK,iBAAiB,KAAK,MAAM,KAAK,iBAAiB,KAAK,WAAW;AACvE,aAAK,yBAAyB,KAAK,iBAAiB,KAAK,sBAAsB,KAAK,iBAAiB;AAAA,MACzG;AAEA,UAAI,KAAK,sBAAsB,MAAM;AACjC,YAAI,KAAK,kBAAkB,CAAC,KAAK,SAAS,cAAc;AACpD,eAAK,eAAe,MAAM,SAAS,KAAK,oBAAoB;AAE5D,cAAI,KAAK,iBAAiB,GAAG;AACzB,iBAAK,eAAe,MAAM,SAAS,KAAK,oBAAoB;AAAA,UAChE;AAAA,QACJ,OAAO;AACH,eAAK,YAAY,MAAM,SAAS,KAAK,oBAAoB;AACzD,eAAK,YAAY,MAAM,SAAS,KAAK,oBAAoB;AAAA,QAC7D;AAEA,aAAK,aAAa,KAAK,kBAAkB;AAAA,MAC7C;AAEA,UAAI,sBAAuB,KAAK,aAAa,KAAK,eAAe,KAAK,iBAAiB;AAEvF,UAAI,KAAK,kBAAkB,KAAK,KAAK,cAAc,GAAG;AAClD,aAAK,QAAQ,KAAK,cAAc;AAAA,MACpC,WAAW,qBAAqB;AAE5B,aAAK,SAAS,KAAK,aAAa,KAAK,WAAW;AAAA,MACpD,OAAO;AAEH,aAAK,SAAS,KAAK,iBAAiB,aAAa;AAAA,MACrD;AAEA,UAAI,KAAK,qBAAqB,QAAQ,KAAK,SAAS,YAAY;AAC5D,aAAK,aAAa;AAAA,MACtB;AAEA,UAAI,KAAK,SAAS,mBAAmB,yBAAyB,KAAK,qBAAqB;AACpF,aAAK,gBAAgB;AAAA,MACzB;AACA,WAAK,kBAAkB,KAAK;AAAA,IAChC;AAAA,IAOA,YAAY,aAAsB,cAAkC;AAChE,aAAO,KAAK,gBAAgB,aAAa,YAAY;AAAA,IACzD;AAAA,IAEA,gBAAgB,aAAsB,cAAkC;AACpE,UAAI,eAAe,MAAM;AACrB,sBAAc,KAAK;AAAA,MACvB;AACA,UAAI,gBAAgB,MAAM;AACtB,uBAAe,KAAK;AAAA,MACxB;AAEA,aAAO;AAAA,QACH,KAAK,KAAK,mBAAmB,WAAW;AAAA,QACxC,QAAQ,KAAK,mBAAmB,cAAc,KAAK,UAAU,IAAI;AAAA,QACjE,QAAQ;AAAA,QACR,SAAS,eAAe,KAAK;AAAA,MACjC;AAAA,IACJ;AAAA,IAEA,iBAAiB,aAAsB,cAAkC;AACrE,UAAI,QAAQ,KAAK,gBAAgB,aAAa,YAAY;AAC1D,UAAI,SAAS,KAAK,MAAM,KAAK,aAAa,KAAK,SAAS,SAAS;AACjE,UAAI,YAAY,KAAK,SAAS,aAAa;AAE3C,UAAI,KAAK,eAAe,IAAI;AACxB,cAAM,OAAO;AACb,cAAM,UAAU;AAAA,MACpB,WAAW,KAAK,eAAe,GAAG;AAC9B,cAAM,OAAO;AACb,cAAM,UAAU;AAAA,MACpB,OAAO;AACH,cAAM,OAAO;AACb,cAAM,UAAU;AAAA,MACpB;AAEA,YAAM,MAAM,KAAK,IAAI,GAAG,MAAM,GAAG;AACjC,YAAM,SAAS,KAAK,IAAI,KAAK,6BAA6B,IAAI,GAAG,MAAM,MAAM;AAE7E,UAAI,KAAK,SAAS,gBAAgB;AAC9B,cAAM,SAAS;AACf,cAAM,UAAU,KAAK;AAAA,MACzB,OACK;AACD,cAAM,UAAU,KAAK;AACrB,cAAM,WAAW,KAAK;AAEtB,cAAM,SAAS,KAAK,IAAI,GAAG,MAAM,MAAM;AACvC,cAAM,UAAU,KAAK,IAAI,KAAK,cAAc,MAAM,OAAO;AAAA,MAC7D;AAEA,aAAO;AAAA,IACX;AAAA,IAEQ,2BAA2B,KAAmB;AAvyF1D;AAwyFQ,UAAI,aAAa,KAAK,WAAW;AACjC,UAAI,YAAY;AACZ,YAAI,WAAW,gBAAgB,QAAQ;AACnC,cAAI,aAAY,sBAAW,aAAX,mBAAqB,qBAArB,aAAyC,gBAAW,aAAX,mBAAqB;AAC9E,iBAAO,aAAa,WAAW,gBAAgB,QAAQ;AACnD,gBAAI,YAAY,WAAW,gBAAgB,IAAI;AAE/C,uBAAW,qBAAqB,aAAa;AAC7C,wBAAY,UAAU;AAEtB,gBAAI,aAAa;AACb,2BAAY,gBAAW,aAAX,mBAAqB;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,aAAa,OAAkB,KAAmB;AAEtD,UAAI,KAAK,mBACA,KAAK,SAAS,gBAAgB,MAAM,KAAK,oBACtC,OAAO,KAAK,mBAEtB;AACE;AAAA,MACJ;AAEA,UAAI,oBAAoB;AACxB,UAAI,aAAa,KAAK,WAAW;AAGjC,UAAI,gBAAgB,CAAC,GAAG,aAAa,KAAK;AAC1C,eAAS,KAAK,WAAW,sBAAsB;AAE3C,YAAI,CAAC,WAAW,qBAAqB,eAAe,CAAC,GAAG;AACpD;AAAA,QACJ;AAEA,YAAI,IAAI,SAAS,GAAG,EAAE;AAGtB,YAAI,IAAI,YAAY;AAChB;AAAA,QACJ;AAEA,YAAI,UAAU,WAAW,aAAa,IAAI,OAAO,KAAK;AACtD,YAAI,KAAK,SAAS,KAAK,MAAM,WAAW,KAAK,UAAU,KAAK,IAAI,KAAK,SAAS,GAAG,IAAI,UAAU,CAAC,KAAK,MAAM,QAAQ;AAC/G,cAAI,EAAE,OAAO,KAAK,cAAc,MAAM,KAAK,cAAc;AACrD,0BAAc,KAAK,CAAC;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,cAAc;AAClB,WAAK;AACL,cAAQ,eAAe,cAAc,IAAI,MAAM,MAAM;AACjD,eAAO,WAAW,qBAAqB;AAEvC,YAAI,KAAK,SAAS,gCAAgC,KAAK,mBAAmB,QAAQ,KAAK,mBAAmB,KAAK,eAAe;AAC1H,eAAK,iCAAiC,MAAM,cAAc,GAAG;AAAA,QACjE,OAAO;AACH,eAAK,cAAc,YAAY,IAAI;AAAA,QACvC;AAEA,eAAO,WAAW,aAAa;AAC/B,eAAO,WAAW,qBAAqB;AACvC,YAAI,KAAK,mBAAmB,MAAM;AAC9B,iBAAO,KAAK,mBAAmB,KAAK;AAAA,QACxC;AACA;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,sBAAsB,OAAkB;AAC5C,UAAI;AACJ,UAAI,cAAwB,CAAC;AAC7B,UAAI,gBAAgB,CAAC;AACrB,UAAI;AACJ,UAAI,kBAAkB;AACtB,UAAI;AACJ,UAAI,OAAO,KAAK;AAEhB,eAAS,MAAM,MAAM,KAAK,MAAM,MAAM,QAAQ,OAAO,KAAK,OAAO;AAC7D,qBAAa,KAAK,WAAW;AAC7B,YAAI,CAAC,YAAY;AACb;AAAA,QACJ;AAGA,aAAK,2BAA2B,GAAG;AAEnC,aAAK,aAAa,OAAO,GAAG;AAG5B,qBAAa;AAEb,YAAI,WAAW,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAC3E,mBAAW,YAAY,SAAS;AAEhC,YAAI,IAAI,KAAK,YAAY,GAAG;AAG5B,iBAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAE3C,cAAI,KAAK,SAAS,KAAK,MAAM,SAAS;AAClC;AAAA,UACJ;AAGA,eAAK,UAAU,WAAW,aAAa,OAAO,MAAM;AAChD,iBAAM,UAAU,IAAI,UAAU,IAAI;AAClC;AAAA,UACJ;AAEA,cAAI,aAAa;AACjB,oBAAU;AACV,cAAI,UAAU;AACV,yBAAa,SAAS,KAAK,GAAG,OAAO,SAAS;AAC9C,sBAAW,cAAc,WAAW,WAAY;AAChD,gBAAI,YAAY,KAAK;AACjB,wBAAU,KAAK;AAAA,YACnB;AAAA,UACJ;AAEA,cAAI,KAAK,UAAU,KAAK,IAAI,KAAK,GAAG,IAAI,UAAU,CAAC,KAAK,MAAM,QAAQ;AAClE,iBAAK,eAAe,aAAa,KAAK,GAAG,SAAS,GAAG,UAAU;AAC/D;AAAA,UACJ;AAEA,eAAM,UAAU,IAAI,UAAU,IAAI;AAAA,QACtC;AAEA,YAAI,YAAY;AACZ,6BAAmB;AACnB,wBAAc,KAAK,GAAG;AAAA,QAC1B;AAAA,MACJ;AAEA,UAAI,CAAC,YAAY,QAAQ;AACrB;AAAA,MACJ;AAEA,UAAI,IAAI,SAAS,cAAc,KAAK;AACpC,QAAE,YAAY,YAAY,KAAK,EAAE;AAEjC,UAAI;AACJ,UAAI,MAAmB,aAAa,KAAK;AACzC,cAAQ,eAAe,cAAc,IAAI,MAAM,MAAM;AACjD,qBAAa,KAAK,WAAW;AAC7B,YAAI;AACJ,gBAAQ,YAAY,WAAW,gBAAgB,IAAI,MAAM,MAAM;AAC3D,iBAAO,EAAE;AAET,cAAI,aAAa,KAAK,aAAa,YAAY;AAC3C,uBAAW,SAAS,YAAY,IAAI;AAAA,UACxC,OAAO;AACH,uBAAW,SAAS,YAAY,IAAI;AAAA,UACxC;AAEA,qBAAW,qBAAqB,aAAa;AAAA,QACjD;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,WAAW,OAAwB;AACvC,UAAI,eAAyB,CAAC,GAC1B,eAAyB,CAAC,GAC1B,OAAO,CAAC,GACR,qBAAqB,OACrB,aAAa,KAAK,cAAc;AAEpC,eAAS,IAAI,MAAM,KAAK,KAAK,MAAM,QAAQ,KAAK,IAAI,KAAK;AACrD,YAAI,KAAK,WAAW,MAAO,KAAK,kBAAkB,KAAK,SAAS,gBAAgB,KAAK,YAAa;AAC9F;AAAA,QACJ;AACA,aAAK,KAAK,CAAC;AAIX,aAAK,WAAW,KAAK;AAAA,UACjB,UAAU;AAAA,UACV,UAAU;AAAA,UAIV,cAAc,CAAC;AAAA,UAGf,sBAAsB,CAAC;AAAA,UAKvB,iBAAiB,CAAC;AAAA,QACtB;AAEA,aAAK,cAAc,cAAc,cAAc,GAAG,OAAO,UAAU;AACnE,YAAI,KAAK,mBAAmB,KAAK,eAAe,GAAG;AAC/C,+BAAqB;AAAA,QACzB;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK,QAAQ;AACd;AAAA,MACJ;AAEA,UAAI,IAAI,SAAS,cAAc,KAAK,GAChC,IAAI,SAAS,cAAc,KAAK;AAEpC,QAAE,YAAY,aAAa,KAAK,EAAE;AAClC,QAAE,YAAY,aAAa,KAAK,EAAE;AAElC,UAAI,aAAa,KAAK,gBAAgB,eAAe,KAAK,kBAAkB,aAAa,KAAK,cAAc;AAC5G,UAAI,MAAM,KAAK,aAAa,MAAM,KAAK,aAAa,MAAM,KAAK,gBAAgB,MAAM,KAAK;AAC1F,eAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC3C,YAAI,OAAO,KAAK,WAAW,KAAK;AAChC,aAAK,WAAW,EAAE;AAClB,aAAK,WAAW,EAAE;AAClB,YAAI,cAAe,KAAK,MAAM,cAAe;AACzC,eAAK,YAAY,IAAI,YAAY,KAAK,QAAQ;AAC9C,wBAAc,KAAK,YAAY,IAAI,YAAY,KAAK,QAAQ;AAAA,QAChE,OACK;AACD,eAAK,YAAY,IAAI,YAAY,KAAK,QAAQ;AAC9C,wBAAc,KAAK,YAAY,IAAI,YAAY,KAAK,QAAQ;AAAA,QAChE;AAAA,MACJ;AAEA,UAAI,oBAAoB;AACpB,aAAK,kBAAkB,KAAK,YAAY,KAAK,YAAY,KAAK,WAAW;AAAA,MAC7E;AAAA,IACJ;AAAA,IAEQ,sBAA4B;AAChC,UAAI,CAAC,KAAK,SAAS,uBAAuB;AACtC;AAAA,MACJ;AAEA,mBAAa,KAAK,YAAY;AAE9B,UAAI,KAAK,SAAS,uBAAuB,GAAG;AACxC,aAAK,qBAAqB;AAAA,MAC9B,OAAO;AACH,aAAK,eAAe,WAAW,KAAK,qBAAqB,KAAK,IAAI,GAAG,KAAK,SAAS,oBAAoB;AAAA,MAC3G;AAAA,IACJ;AAAA,IAEQ,6BAAmC;AACvC,UAAI,CAAC,KAAK,SAAS,8BAA8B;AAC7C;AAAA,MACJ;AAEA,mBAAa,KAAK,mBAAmB;AAErC,UAAI,KAAK,SAAS,wBAAwB,GAAG;AACzC,aAAK,4BAA4B;AAAA,MACrC,OACK;AACD,aAAK,sBAAsB,WAAW,KAAK,4BAA4B,KAAK,IAAI,GAAG,KAAK,SAAS,qBAAqB;AAAA,MAC1H;AAAA,IACJ;AAAA,IAEQ,gCAAgC,KAAmB;AACvD,UAAI,KAAK,SAAS,8BAA8B;AAE5C,iBAAS,aAAa,KAAK,mBAAmB,MAAM;AAChD,cAAI,KAAK,mBAAmB,KAAK,eAAe,SAAS,GAAG;AACxD,iBAAK,mBAAmB,KAAK,aAAa;AAAA,UAC9C;AAAA,QACJ;AAAA,MACJ,OACK;AACD,eAAO,KAAK,mBAAmB;AAAA,MACnC;AAEA,WAAK,sBAAsB,KAAK,IAAI,KAAK,qBAAqB,GAAG;AACjE,WAAK,oBAAoB,KAAK,IAAI,KAAK,mBAAmB,GAAG;AAC7D,WAAK,oBAAoB;AAAA,IAC7B;AAAA,IAEQ,qBAA2B;AAC/B,eAAS,OAAO,KAAK,YAAY;AAC7B,YAAI,IAAI,KAAK,WAAW;AACxB,YAAI,IAAI,KAAK,UAAU,SAAS,KAAK,EAAE,CAAC,IAAI;AAC5C,UAAE,aAAa,EAAE,SAAS,MAAM,MAAM;AACtC,UAAE,aAAa,EAAE,SAAS,MAAM,MAAM;AAAA,MAC1C;AAAA,IACJ;AAAA,IAEQ,qBAA2B;AAC/B,UAAI,CAAC,KAAK,SAAS,iBAAiB,CAAC,KAAK;AACtC;AAEJ,UAAI,SAAS;AACb,UAAI,KAAK,MAAM,gBAAgB;AAC3B,iBAAS,KAAK,MAAM,eAAe;AAAA,MACvC;AAEA,UAAI,OAAO,KAAK;AAChB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,YAAI,IAAI,KAAK;AAEb,YAAI;AACJ,YAAI,EAAE,SAAS,QAAQ;AACnB,oBAAW,EAAE,wBAAwB,EAAE,qBAAqB,QAAQ,GAAG,IAAI,KACtE,KAAK,wBAAwB,KAAK,qBAAqB,QAAQ,CAAC,KAAM;AAAA,QAC/E;AAEA,aAAK,mBAAmB,EAAE,EAAE,EAAE,YAAY;AAAA,MAC9C;AAAA,IACJ;AAAA,IAEQ,SAAe;AACnB,UAAI,CAAC,KAAK,cAAc;AAAE;AAAA,MAAQ;AAClC,UAAI,UAAU,KAAK,gBAAgB;AACnC,UAAI,WAAW,KAAK,iBAAiB;AAGrC,WAAK,YAAY,QAAQ;AAGzB,UAAI,KAAK,uBAAuB,KAAK,aAAa;AAE9C,YAAI,KAAK,gBAAgB;AAErB,cAAI,qBAAqB,OAAO,OAAO,CAAC,GAAG,QAAQ;AAEnD,cAAI,KAAK,SAAS,cAAc;AAE5B,+BAAmB,MAAM,KAAK;AAC9B,+BAAmB,SAAS,KAAK,cAAc;AAAA,UACnD,OACK;AAED,+BAAmB,MAAM;AACzB,+BAAmB,SAAS,KAAK,SAAS;AAAA,UAC9C;AAEA,eAAK,sBAAsB,kBAAkB;AAAA,QACjD;AAEA,aAAK,sBAAsB,QAAQ;AAAA,MACvC;AAGA,WAAK,WAAW,QAAQ;AAGxB,UAAI,KAAK,gBAAgB;AACrB,YAAI,KAAK,SAAS,cAAc;AAC5B,eAAK,WAAW;AAAA,YACZ,KAAK,KAAK;AAAA,YAAkB,QAAQ,KAAK,cAAc,IAAI;AAAA,YAAG,QAAQ,SAAS;AAAA,YAAQ,SAAS,SAAS;AAAA,UAC7G,CAAC;AAAA,QACL,OACK;AACD,eAAK,WAAW;AAAA,YACZ,KAAK;AAAA,YAAG,QAAQ,KAAK,SAAS,YAAY;AAAA,YAAG,QAAQ,SAAS;AAAA,YAAQ,SAAS,SAAS;AAAA,UAC5F,CAAC;AAAA,QACL;AAAA,MACJ;AAEA,WAAK,sBAAsB,QAAQ;AACnC,WAAK,oBAAoB,KAAK,IAAI,KAAK,6BAA6B,IAAI,GAAG,QAAQ,MAAM;AACzF,WAAK,oBAAoB;AAEzB,WAAK,qBAAqB,KAAK;AAC/B,WAAK,sBAAsB,KAAK;AAChC,WAAK,WAAW;AAAA,IACpB;AAAA,IAsBQ,iBAAiB,GAAsB,OAAe,QAAgB,QAAsB;AAChG,gBAAU,OAAO,UAAU,cAAe,EAAU,cAAc,SAAS,WAAW;AACtF,gBAAU,OAAO,UAAU,cAAe,EAAU,cAAc,SAAS,WAAW;AACtF,WAAK,aAAa,KAAK,IAAI,GAAG,KAAK,kBAAkB,YAAa,SAAS,KAAK,SAAS,SAAU;AACnG,WAAK,cAAc,KAAK,kBAAkB,aAAc,SAAS;AACjE,UAAI,UAAU,KAAK,cAAc,IAAI;AACrC,UAAI;AACA,UAAE,eAAe;AAAA,IACzB;AAAA,IAEQ,eAAwB;AAC5B,WAAK,aAAa,KAAK,kBAAkB;AACzC,WAAK,cAAc,KAAK,kBAAkB;AAC1C,aAAO,KAAK,cAAc,KAAK;AAAA,IACnC;AAAA,IAEQ,cAAc,cAAiC;AACnD,UAAI,qBAAqB,KAAK,kBAAkB,eAAe,KAAK,kBAAkB;AACtF,UAAI,qBAAqB,KAAK,kBAAkB,cAAc,KAAK,kBAAkB;AAIrF,2BAAqB,KAAK,IAAI,GAAG,kBAAkB;AACnD,2BAAqB,KAAK,IAAI,GAAG,kBAAkB;AAGnD,UAAI,KAAK,aAAa,oBAAoB;AACtC,aAAK,aAAa;AAAA,MACtB;AACA,UAAI,KAAK,cAAc,oBAAoB;AACvC,aAAK,cAAc;AAAA,MACvB;AAEA,UAAI,cAAc,KAAK,IAAI,KAAK,aAAa,KAAK,cAAc;AAChE,UAAI,cAAc,KAAK,IAAI,KAAK,cAAc,KAAK,eAAe;AAElE,UAAI,eAAe;AACf,aAAK,qBAAqB,IAAI,KAAK,EAAE,QAAQ,IAAI;AAErD,UAAI,aAAa;AACb,aAAK,kBAAkB,KAAK;AAE5B,aAAK,kBAAkB,aAAa,KAAK;AAEzC,YAAI,KAAK,iBAAiB,GAAG;AACzB,eAAK,aAAa,cAAc,aAAa,KAAK;AAClD,eAAK,WAAW,cAAc,aAAa,KAAK;AAChD,eAAK,gBAAgB,cAAc,aAAa,KAAK;AACrD,eAAK,gBAAgB,cAAc,aAAa,KAAK;AACrD,cAAI,KAAK,gBAAgB;AACrB,iBAAK,cAAc,aAAa,KAAK;AAAA,UACzC;AAAA,QACJ,OAAO;AACH,eAAK,aAAa,cAAc,aAAa,KAAK;AAClD,eAAK,WAAW,cAAc,aAAa,KAAK;AAChD,eAAK,gBAAgB,cAAc,aAAa,KAAK;AACrD,eAAK,gBAAgB,cAAc,aAAa,KAAK;AACrD,cAAI,KAAK,gBAAgB;AACrB,iBAAK,cAAc,aAAa,KAAK;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,aAAa;AACb,aAAK,cAAc,KAAK,iBAAiB,KAAK,aAAa,IAAI;AAC/D,aAAK,iBAAiB,KAAK;AAE3B,YAAI,cAAc;AACd,eAAK,kBAAkB,YAAY,KAAK;AAAA,QAC5C;AAEA,YAAI,KAAK,iBAAiB,GAAG;AACzB,cAAI,KAAK,kBAAkB,CAAC,KAAK,SAAS,cAAc;AACpD,iBAAK,iBAAiB,YAAY,KAAK;AAAA,UAC3C,OAAO;AACH,iBAAK,cAAc,YAAY,KAAK;AAAA,UACxC;AAAA,QACJ;AAGA,YAAI,cAAc,KAAK,YAAY;AAC/B,eAAK,SAAS,KAAK,aAAa,KAAK,WAAW;AAAA,QACpD,OAAO;AACH,cAAI,YAAY,KAAK;AACrB,cAAI,KAAK,qBAAqB,KAAK,YAAY;AAC3C,iBAAK,QAAQ;AAAA,UACjB,OAAO;AACH,iBAAK,QAAQ,KAAK,IAAI,KAAK,iBAAiB,GAAG,KAAK,MAAM,KAAK,eAAe,KAAK,iBAAiB,KAAK,eAAe,KAAK,oBAAoB,KAAK,gBAAgB,IAAI,KAAK,YAAY,CAAC;AAAA,UAChM;AACA,eAAK,cAAc,KAAK,MAAM,KAAK,QAAQ,KAAK,qBAAqB;AACrE,cAAI,aAAa,KAAK,aAAa;AAC/B,iBAAK,kBAAkB;AAAA,UAC3B;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,eAAe,aAAa;AAC5B,YAAI,KAAK,UAAU;AACf,uBAAa,KAAK,QAAQ;AAAA,QAC9B;AAEA,YAAI,KAAK,IAAI,KAAK,qBAAqB,KAAK,UAAU,IAAI,MACtD,KAAK,IAAI,KAAK,sBAAsB,KAAK,WAAW,IAAI,IAAI;AAC5D,cAAI,KAAK,SAAS,sBACd,KAAK,IAAI,KAAK,qBAAqB,KAAK,UAAU,IAAI,KAAK,cAC3D,KAAK,IAAI,KAAK,sBAAsB,KAAK,WAAW,IAAI,KAAK,YAAa;AAC1E,iBAAK,OAAO;AAAA,UAChB,OAAO;AACH,iBAAK,WAAW,WAAW,KAAK,OAAO,KAAK,IAAI,GAAG,EAAE;AAAA,UACzD;AAEA,eAAK,QAAQ,KAAK,iBAAiB;AAAA,QACvC;AAAA,MACJ;AAEA,WAAK,QAAQ,KAAK,UAAU,EAAE,YAAY,KAAK,aAAa,WAAW,KAAK,WAAW,CAAC;AAExF,aAAO,CAAC,EAAE,eAAe;AAAA,IAC7B;AAAA,IAEQ,uBAA6B;AACjC,UAAI,aAAa,KAAK,cAAc;AACpC,UAAI,OAAO,KAAK;AAChB,aAAO,KAAK,uBAAuB,KAAK,mBAAmB;AACvD,YAAI,MAAO,KAAK,eAAe,IAAK,KAAK,wBAAwB,KAAK;AACtE,YAAI,aAAa,KAAK,WAAW;AACjC,YAAI,CAAC,cAAc,OAAO,YAAY;AAClC;AAAA,QACJ;AAEA,YAAI,CAAC,KAAK,mBAAmB,MAAM;AAC/B,eAAK,mBAAmB,OAAO,CAAC;AAAA,QACpC;AAEA,aAAK,2BAA2B,GAAG;AACnC,iBAAS,KAAK,WAAW,sBAAsB;AAC3C,cAAI,CAAC,WAAW,qBAAqB,eAAe,CAAC,GAAG;AACpD;AAAA,UACJ;AAEA,cAAI,YAAY,SAAS,GAAG,EAAE;AAE9B,cAAI,IAAI,KAAK;AACb,cAAI,kBAAkB,KAAK,mBAAmB,KAAK;AACnD,cAAI,oBAAoB,KAAK;AACzB,gBAAI,EAAE,mBAAmB,EAAE,wBAAwB;AAC/C,kBAAI,OAAO,WAAW,qBAAqB;AAC3C,kBAAI,MAAM;AACN,kBAAE,mBAAmB,EAAE,gBAAgB,MAAM,KAAK,KAAK,YAAY,GAAG,GAAG,GAAG,oBAAoB,GAAG;AAAA,cACvG;AAAA,YACJ;AACA,iBAAK,mBAAmB,KAAK,aAAa;AAAA,UAC9C;AAAA,QACJ;AAEA,YAAI,KAAK,SAAS,wBAAwB,GAAG;AACzC,eAAK,eAAe,WAAW,KAAK,qBAAqB,KAAK,IAAI,GAAG,KAAK,SAAS,oBAAoB;AACvG;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,8BAAoC;AACxC,UAAI,OAAO,KAAK;AAChB,aAAO,KAAK,yBAAyB,SAAS,GAAG;AAC7C,YAAI,UAAU,KAAK,yBAAyB,GAAG;AAG/C,eAAO,KAAK,yBAAyB,SAAS,KAAK,KAAK,yBAAyB,GAAG,WAAW,SAAS;AACpG,cAAI,QAAQ,KAAK,yBAAyB,MAAM;AAChD,gBAAM,YAAY,MAAM,SAAS,OAAO;AACxC,gBAAM,YAAY,MAAM,SAAS,OAAO;AACxC,cAAI,MAAM,YAAY,MAAM;AACxB,gBAAI,SAAS,KAAK,MAAM;AACxB,gBAAI,UAAU,OAAO,wBAAwB;AACzC,qBAAO,uBAAuB,MAAM,UAAU,MAAM,QAAQ,MAAM;AAClE,oBAAM,SAAS,OAAO;AAAA,YAC1B;AAAA,UACJ;AAAA,QACJ;AAGA,YAAI,KAAK,SAAS,wBAAwB,GAAG;AACzC,eAAK,sBAAsB,WAAW,KAAK,4BAA4B,KAAK,IAAI,GAAG,KAAK,SAAS,qBAAqB;AACtH;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,kCAAkC,WAA2B,aAA6B;AAC9F,UAAI,MAAM,UAAU,cAAc;AAClC,eAAS,OAAO,KAAK,YAAY;AAC7B,yBAAiB,eAAe,YAAY;AAC5C,uBAAe,aAAa,UAAU;AAEtC,YAAI,gBAAgB;AAChB,eAAK,YAAY,gBAAgB;AAC7B,gBAAI,CAAC,gBAAgB,eAAe,aAAa,aAAa,WAAW;AACrE,qBAAO,KAAK,YAAY,SAAS,KAAK,EAAE,GAAG,KAAK,eAAe,QAAQ,CAAC;AACxE,kBAAI,MAAM;AACN,kBAAE,IAAI,EAAE,YAAY,eAAe,SAAS;AAAA,cAChD;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,cAAc;AACd,eAAK,YAAY,cAAc;AAC3B,gBAAI,CAAC,kBAAkB,eAAe,aAAa,aAAa,WAAW;AACvE,qBAAO,KAAK,YAAY,SAAS,KAAK,EAAE,GAAG,KAAK,eAAe,QAAQ,CAAC;AACxE,kBAAI,MAAM;AACN,kBAAE,IAAI,EAAE,SAAS,aAAa,SAAS;AAAA,cAC3C;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,iBAAiB,KAAa,MAA4B;AACtD,UAAI,KAAK,gBAAgB,MAAM;AAC3B,cAAM,+CAA+C,MAAM;AAAA,MAC/D;AAEA,WAAK,gBAAgB,OAAO;AAC5B,WAAK,kCAAkC,MAAM,IAAI;AAEjD,WAAK,QAAQ,KAAK,wBAAwB,EAAE,KAAU,KAAW,CAAC;AAAA,IACtE;AAAA,IAEA,oBAAoB,KAAmB;AACnC,UAAI,CAAC,KAAK,gBAAgB,MAAM;AAC5B;AAAA,MACJ;AAEA,WAAK,kCAAkC,MAAM,KAAK,gBAAgB,IAAI;AACtE,aAAO,KAAK,gBAAgB;AAE5B,WAAK,QAAQ,KAAK,wBAAwB,EAAE,KAAU,MAAM,KAAK,CAAC;AAAA,IACtE;AAAA,IAEA,iBAAiB,KAAa,MAA4B;AACtD,UAAI,WAAW,KAAK,gBAAgB;AAEpC,WAAK,gBAAgB,OAAO;AAC5B,WAAK,kCAAkC,MAAM,QAAQ;AAErD,WAAK,QAAQ,KAAK,wBAAwB,EAAE,KAAU,KAAW,CAAC;AAAA,IACtE;AAAA,IAEA,iBAAiB,KAA6B;AAC1C,aAAO,KAAK,gBAAgB;AAAA,IAChC;AAAA,IAEA,UAAU,KAAa,MAAc,OAAsB;AACvD,cAAQ,SAAS;AACjB,UAAI,KAAK,WAAW,MAAM;AACtB,YAAI,QAAQ,EAAE,KAAK,YAAY,KAAK,IAAI,CAAC;AACzC,wBAAgB,CAAC;AAAA,MACrB;AAEA,UAAI,QAAQ,KAAK,SAAS;AAE1B,eAAS,gBAAgB,OAAe;AACpC,YAAI,CAAC,OAAO;AACR;AAAA,QACJ;AACA,mBAAW,WAAY;AACnB,gBAAM,MAAM,WAAY;AACpB,kBAAM,YAAY,KAAK,EAAE,QAAQ;AACjC,4BAAgB,QAAQ,CAAC;AAAA,UAC7B,CAAC;AAAA,QACL,GAAG,KAAK;AAAA,MACZ;AAAA,IACJ;AAAA,IAKQ,eAAe,GAAsB,IAAkB;AAC3D,UAAI,OAAO,KAAK,iBAAiB,CAAC;AAClC,UAAI,CAAC,QAAQ,CAAC,KAAK,WAAW,KAAK,KAAK,KAAK,IAAI,GAAG;AAChD,eAAO;AAAA,MACX;AAEA,UAAI,SAAS,KAAK,QAAQ,KAAK,YAAY,IAAI,CAAC;AAChD,UAAI,EAAE,iCAAiC,EAAE,8BAA8B,GAAG;AACtE,eAAO;AAAA,MACX;AAIA,aAAO;AAAA,IACX;AAAA,IAEQ,gBAAgB,GAAsB,IAAkB;AAC5D,UAAI,OAAO,KAAK,iBAAiB,CAAC;AAClC,UAAI,CAAC,QAAQ,CAAC,KAAK,WAAW,KAAK,KAAK,KAAK,IAAI,GAAG;AAChD,eAAO;AAAA,MACX;AAEA,UAAI,SAAS,KAAK,QAAQ,KAAK,aAAa,IAAI,CAAC;AACjD,UAAI,EAAE,iCAAiC,EAAE,8BAA8B,GAAG;AACtE,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAAA,IAEQ,WAAW,GAAsB,IAAc;AACnD,aAAO,KAAK,QAAQ,KAAK,QAAQ,IAAI,CAAC;AAAA,IAC1C;AAAA,IAEQ,cAAc,GAAsB,IAAe;AACvD,WAAK,QAAQ,KAAK,WAAW,IAAI,CAAC;AAAA,IACtC;AAAA,IAEQ,cAAc,GAA+B;AACjD,WAAK,QAAQ,KAAK,WAAW,EAAE,KAAK,KAAK,YAAY,MAAM,KAAK,YAAY,GAAG,CAAC;AAChF,UAAI,UAAU,EAAE,iCAAiC,EAAE,8BAA8B;AAEjF,UAAI,CAAC,SAAS;AACV,YAAI,CAAC,EAAE,YAAY,CAAC,EAAE,QAAQ;AAC1B,cAAI,KAAK,SAAS,YAAY,KAAK,kBAAkB,KAAK,eAAe,gBAAgB;AACrF,gBAAI,KAAK,eAAe,eAAe,QAAQ,EAAE,KAAK,KAAK,GAAG;AAC1D;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,EAAE,SAAS,QAAQ,MAAM;AACzB,gBAAI,EAAE,SAAS;AACX,mBAAK,YAAY;AACjB,wBAAU;AAAA,YACd;AAEI,wBAAU,KAAK,iBAAiB;AAAA,UACxC,WACS,EAAE,SAAS,QAAQ,KAAK;AAC7B,gBAAI,EAAE,SAAS;AACX,mBAAK,eAAe;AACpB,wBAAU;AAAA,YACd;AAEI,wBAAU,KAAK,eAAe;AAAA,UACtC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,CAAC,SAAS;AACV,YAAI,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU,CAAC,EAAE,SAAS;AAExC,cAAI,KAAK,SAAS,YAAY,KAAK,kBAAkB,KAAK,eAAe,gBAAgB;AACrF,gBAAI,KAAK,eAAe,eAAe,QAAQ,EAAE,KAAK,KAAK,GAAG;AAC1D;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,EAAE,SAAS,QAAQ,QAAQ;AAC3B,gBAAI,CAAC,KAAK,cAAc,EAAE,SAAS,GAAG;AAClC;AAAA,YACJ;AACA,iBAAK,sBAAsB;AAAA,UAC/B,WAAW,EAAE,SAAS,QAAQ,UAAU;AACpC,iBAAK,iBAAiB;AACtB,sBAAU;AAAA,UACd,WAAW,EAAE,SAAS,QAAQ,QAAQ;AAClC,iBAAK,eAAe;AACpB,sBAAU;AAAA,UACd,WAAW,EAAE,SAAS,QAAQ,MAAM;AAChC,sBAAU,KAAK,aAAa;AAAA,UAChC,WAAW,EAAE,SAAS,QAAQ,OAAO;AACjC,sBAAU,KAAK,cAAc;AAAA,UACjC,WAAW,EAAE,SAAS,QAAQ,IAAI;AAC9B,sBAAU,KAAK,WAAW;AAAA,UAC9B,WAAW,EAAE,SAAS,QAAQ,MAAM;AAChC,sBAAU,KAAK,aAAa;AAAA,UAChC,WAAW,EAAE,SAAS,QAAQ,KAAK;AAC/B,gBAAI,KAAK,SAAS;AACd,wBAAU,KAAK,aAAa;AAAA,UACpC,WAAW,EAAE,SAAS,QAAQ,OAAO;AACjC,gBAAI,KAAK,SAAS,UAAU;AACxB,kBAAI,KAAK,gBAAgB;AAErB,oBAAI,KAAK,eAAe,KAAK,cAAc,GAAG;AAC1C,uBAAK,aAAa;AAAA,gBACtB,OAAO;AACH,uBAAK,sBAAsB;AAAA,gBAC/B;AAAA,cACJ,OAAO;AACH,oBAAI,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC1C,uBAAK,uBAAuB;AAAA,gBAChC;AAAA,cACJ;AAAA,YACJ;AACA,sBAAU;AAAA,UACd;AAAA,QACJ,WAAW,EAAE,SAAS,QAAQ,OAAO,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,EAAE,QAAQ;AACxE,oBAAU,KAAK,aAAa;AAAA,QAChC;AAAA,MACJ;AAEA,UAAI,SAAS;AAET,UAAE,gBAAgB;AAClB,UAAE,eAAe;AACjB,YAAI;AACA,UAAC,EAAE,cAAuC,UAAU;AAAA,QACxD,SAGO,OAAP;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,YAAY,GAAiC;AACjD,UAAI,CAAC,KAAK,gBAAgB;AAItB,YAAI,EAAE,UAAU,SAAS,iBAAiB,EAAE,EAAE,MAAM,EAAE,SAAS,YAAY,GAAG;AAC1E,eAAK,SAAS;AAAA,QAClB;AAAA,MACJ;AAEA,UAAI,OAAO,KAAK,iBAAiB,CAAQ;AACzC,UAAI,CAAC,QAAS,KAAK,kBAAkB,QAAQ,KAAK,cAAc,KAAK,OAAO,KAAK,eAAe,KAAK,MAAO;AACxG;AAAA,MACJ;AAEA,WAAK,QAAQ,KAAK,SAAS,EAAE,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC;AAChE,UAAI,EAAE,iCAAiC,EAAE,8BAA8B,GAAG;AACtE;AAAA,MACJ;AAEA,UAAI,KAAK,gBAAgB,KAAK,KAAK,KAAK,IAAI,GAAG;AAC3C,YAAI,CAAC,KAAK,cAAc,EAAE,SAAS,KAAK,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAE9E,cAAI,iBAAkB,EAAE,UAAU,EAAE,OAAO,UAAU,SAAS,iBAAiB;AAC/E,cAAI,SAAS,KAAK,MAAM,KAAK;AAC7B,cAAI,iCAAiC,CAAC,EAAE,KAAK,SAAS,YAAY,UAAU,OAAO,UAAU,KAAK,SAAS;AAC3G,eAAK,sBAAsB,KAAK,YAAY,KAAK,KAAK,KAAK,IAAI,GAAG,MAAM,gBAAgB,gCAAgC,CAAC;AAAA,QAC7H;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,kBAAkB,GAAiC;AACvD,UAAI,QAAQ,EAAE,EAAE,MAAM,EAAE,QAAQ,eAAe,KAAK,UAAU;AAC9D,UAAI,MAAM,WAAW,GAAG;AACpB;AAAA,MACJ;AAGA,UAAI,KAAK,oBAAoB,MAAM,MAAM,KAAK,kBAAkB,MAAM;AAClE;AAAA,MACJ;AAEA,WAAK,QAAQ,KAAK,eAAe,CAAC,GAAG,CAAC;AAAA,IAC1C;AAAA,IAEQ,eAAe,GAAiC;AACpD,UAAI,OAAO,KAAK,iBAAiB,CAAQ;AACzC,UAAI,CAAC,QAAS,KAAK,kBAAkB,QAAQ,KAAK,cAAc,KAAK,OAAO,KAAK,eAAe,KAAK,MAAO;AACxG;AAAA,MACJ;AAEA,WAAK,QAAQ,KAAK,YAAY,EAAE,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,GAAG,CAAC;AACnE,UAAI,EAAE,iCAAiC,EAAE,8BAA8B,GAAG;AACtE;AAAA,MACJ;AAEA,UAAI,KAAK,SAAS,UAAU;AACxB,aAAK,SAAS,KAAK,KAAK,KAAK,MAAM,IAAI;AAAA,MAC3C;AAAA,IACJ;AAAA,IAEQ,uBAAuB,GAAqB;AAChD,YAAM,SAAS,KAAK,kBAAkB,EAAE,MAAqB;AAC7D,gBAAU,KAAK,QAAQ,KAAK,oBAAoB,EAAE,OAAO,GAAG,CAAC;AAAA,IACjE;AAAA,IAEQ,uBAAuB,GAAqB;AAChD,YAAM,SAAS,KAAK,kBAAkB,EAAE,MAAqB;AAC7D,gBAAU,KAAK,QAAQ,KAAK,oBAAoB,EAAE,OAAO,GAAG,CAAC;AAAA,IACjE;AAAA,IAEQ,wBAAwB,GAAiC;AAC7D,UAAI,SAAS,EAAE,OAAO,QAAQ,sBAAsB;AACpD,UAAI,SAAS,KAAK,kBAAkB,MAAM;AAC1C,gBAAU,KAAK,QAAQ,KAAK,qBAAqB,EAAE,OAAO,GAAG,CAAC;AAAA,IAClE;AAAA,IAEQ,kBAAkB,GAAiC;AACvD,UAAI,SAAS,EAAE,OAAO,QAAQ,sBAAsB;AACpD,UAAI,SAAS,KAAK,kBAAkB,MAAM;AAC1C,gBAAU,KAAK,QAAQ,KAAK,eAAe,EAAE,OAAe,GAAG,CAAC;AAAA,IACpE;AAAA,IAEQ,iBAAiB,GAAqB;AAC1C,WAAK,QAAQ,KAAK,cAAc,CAAC,GAAG,CAAC;AAAA,IACzC;AAAA,IAEQ,iBAAiB,GAAqB;AAC1C,WAAK,QAAQ,KAAK,cAAc,CAAC,GAAG,CAAC;AAAA,IACzC;AAAA,IAEQ,WAAW,KAAa,MAAuB;AACnD,aAAO,EAAE,MAAM,KAAK,OAAO,KAAK,cAAc,KAAK,OAAO,KAAK,QAAQ,KAAK,MAAM;AAAA,IACtF;AAAA,IAEA,iBAAiB,GAAW,GAA2C;AACnE,UAAI,MAAM,KAAK,mBAAmB,CAAC;AACnC,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI,IAAI;AACR,eAAS,IAAI,GAAG,IAAI,KAAK,UAAU,IAAI,GAAG,KAAK;AAC3C,aAAK,KAAK,GAAG;AACb;AAAA,MACJ;AAEA,UAAI,OAAO,GAAG;AACV,eAAO;AAAA,MACX;AAEA,aAAO,EAAE,KAAU,MAAM,OAAO,EAAE;AAAA,IACtC;AAAA,IAEA,gBAAgB,UAA2B;AACvC,UAAI,YAAY;AACZ,eAAO;AAEX,UAAI,IAAK,SAAyB,QAAQ;AAC1C,UAAI,KAAK;AACL,eAAO,SAAS,GAAG,EAAE;AAGzB,UAAI,MAAM,aAAa,KAAK,MAAM,SAAS,YAAY,GAAG;AAC1D,UAAI,CAAC,KAAK;AACN,eAAO;AAAA,MACX;AACA,aAAO,SAAS,IAAI,IAAI,EAAE;AAAA,IAC9B;AAAA,IAEA,kBAAkB,UAAkC;AAChD,UAAI,YAAY;AACZ,eAAO;AAEX,UAAI,OAAO,KAAK,gBAAgB,QAAQ;AACxC,UAAI,SAAS,QAAQ,OAAO,MAAM;AAC9B,eAAO,EAAE,IAAI,EAAE,KAAK,QAAQ;AAEhC,aAAO,KAAK,MAAM;AAAA,IACtB;AAAA,IAEA,eAAe,SAA0B;AACrC,UAAI,WAAW,MAAM;AACjB,iBAAS,OAAO,KAAK,YAAY;AAC7B,cAAI,IAAI,KAAK,WAAW;AACxB,cAAI,EAAE,aAAa,WAAW,EAAE,aAAa;AACzC,mBAAO,SAAS,KAAK,EAAE;AAAA,QAC/B;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,mBAAmB,KAAkB;AACzC,UAAI,SACC,KAAK,iBACC,KAAK,SAAS,eACV,OAAO,KAAK,mBACR,KAAK,oBAAoB,KAAK,gBAC1B,KAAK,mBAAmB,KAAK,SAAS,YACvC,KAAK,oBACT,IACH,OAAO,KAAK,mBACT,KAAK,oBACL,IACR;AAEV,aAAO;AAAA,IACX;AAAA,IAEA,iBAAiB,GAAwC;AACrD,UAAI,KAAK;AACT,UAAI,SAAU,EAAE,OAAuB,QAAQ,aAAa;AAC5D,UAAI,CAAC,QAAQ;AACT,eAAO;AAAA,MACX;AAEA,YAAM,KAAK,eAAe,OAAO,UAAyB;AAE1D,UAAI,KAAK,gBAAgB;AAErB,YAAI,MAAM,OAAO,QAAQ,cAAc,EAAE,sBAAsB;AAE/D,YAAI,YAAY;AAChB,YAAI,WAAW,OAAO,QAAQ,qBAAqB,KAAK;AAExD,YAAI,UAAU;AACV,sBAAa,KAAK,SAAS,eAAgB,KAAK,MAAM,WAAW,iBAAiB,KAAK,WAAW,EAAE,MAAM,CAAC,IAAI,KAAK;AAAA,QACxH;AAEA,cAAM,KAAK,iBAAiB,EAAE,UAAU,IAAI,KAAK,SAAS,SAAS,KAAK,YAAY,EAAE,UAAU,IAAI,MAAM,SAAS,KAAK,YAAY,YAAY,SAAS,KAAK,SAAS,EAAE;AAAA,MAC7K;AAEA,aAAO,KAAK,gBAAgB,MAAM;AAElC,UAAI,OAAO,QAAQ,QAAQ,MAAM;AAC7B,eAAO;AAAA,MACX,OAAO;AACH,eAAO;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,eAAe,KAAa,MAA6E;AACrG,UAAI,CAAC,KAAK,WAAW,KAAK,IAAI,GAAG;AAC7B,eAAO;AAAA,MACX;AAEA,UAAI,kBAAkB,KAAK,mBAAmB,GAAG;AACjD,UAAI,OAAO,KAAK,OAAO,aAAa,KAAK;AACzC,UAAI,KAAK,KAAK,UAAU,GAAG,IAAI;AAC/B,UAAI,KAAK,KAAK,KAAK,SAAS,YAAY;AACxC,UAAI,KAAK;AACT,eAAS,IAAI,GAAG,IAAI,MAAM,KAAK;AAC3B,cAAM,KAAK,GAAG;AACd,YAAI,KAAK,aAAa,GAAG;AACrB,eAAK;AAAA,QACT;AAAA,MACJ;AACA,UAAI,KAAK,KAAK,KAAK,MAAM;AAEzB,aAAO,KAAK,OAAO;AAAA,QACf,KAAK;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,MAAM;AAAA,MACV,IAAI;AAAA,QACA,KAAK;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,IAKA,kBAAwB;AACpB,WAAK,sBAAsB,MAAM,KAAK;AAAA,IAC1C;AAAA,IAEA,QAAc;AACV,WAAK,SAAS;AAAA,IAClB;AAAA,IAEQ,WAAiB;AACrB,UAAI,KAAK,qBAAqB,IAAI;AAC9B,aAAK,YAAY,MAAM;AAAA,MAC3B,OAAO;AACH,aAAK,YAAY,MAAM;AAAA,MAC3B;AAAA,IACJ;AAAA,IAEA,mBAAmB,KAAa,MAAc,UAA0B;AACpE,WAAK,kBAAkB,KAAK,QAAQ;AAEpC,UAAI,OAAO,KAAK;AACZ;AAEJ,UAAI,UAAU,KAAK,WAAW,KAAK,IAAI;AACvC,WAAK,6BAA6B,KAAK,SAAS,OAAO,KAAK,UAAU,QAAQ,UAAU,IAAI,UAAU,IAAI,GAAG;AAAA,IACjH;AAAA,IAEA,qBAAqB,MAAoB;AACrC,WAAK,6BAA6B,KAAK,SAAS,OAAO,KAAK,UAAU,KAAK;AAAA,IAC/E;AAAA,IAEA,6BAA6B,MAAc,OAAqB;AAE5D,UAAI,cAAc,KAAK,cAAc,WAAW,iBAAiB,KAAK,iBAAiB,EAAE,KAAK,KACzF,KAAK,sBAAsB,KAAK,YAAY,QAAQ;AAEzD,UAAI;AACJ,UAAI,OAAO,KAAK;AACZ,iBAAS;AAAA,eACJ,QAAQ;AACb,iBAAS,KAAK,IAAI,MAAM,QAAQ,KAAK,kBAAkB,WAAW;AAAA;AAElE;AAEJ,WAAK,kBAAkB,aAAa;AACpC,WAAK,aAAa;AAClB,WAAK,OAAO;AAAA,IAChB;AAAA,IAEQ,sBAAsB,SAAsB,cAAwB,gBAA0B,gCAA0C,GAAe;AAC3J,UAAI,KAAK,mBAAmB,MAAM;AAC9B,aAAK,qBAAqB;AAC1B,aAAK,gBAAgB,UAAU,OAAO,QAAQ;AAC9C,YAAI,IAAI,KAAK,WAAW,KAAK;AAC7B,YAAI,GAAG;AACH,YAAE,YAAY,EAAE,SAAS,UAAU,OAAO,QAAQ;AAClD,YAAE,YAAY,EAAE,SAAS,UAAU,OAAO,QAAQ;AAAA,QACtD;AAAA,MACJ;AAEA,WAAK,kBAAkB;AAEvB,UAAI,KAAK,mBAAmB,MAAM;AAC9B,YAAI,MAAM,KAAK,gBAAgB,sBAAsB;AAErD,YAAI,YAAY,KAAK,MAAM,KAAK,gBAAgB,QAAQ,cAAc,EAAE,sBAAsB,EAAE,MAAM,SAAS,KAAK,SAAS;AAC7H,YAAI,WAAW,KAAK,gBAAgB,QAAQ,qBAAqB,KAAK;AAEtE,YAAI,KAAK,kBAAkB,UAAU;AACjC,uBAAc,KAAK,SAAS,eACtB,KAAK,MAAM,WAAW,iBAAiB,KAAK,WAAW,EAAE,MAAM,CAAC,IAChE,KAAK;AAAA,QACf;AAEA,YAAI,OAAO,KAAK,iBAAiB,IAAI,KAAK,SAAS,SAAS,KAAK,YAAY,KAAK,KAAK,IAAI,MAAM,SAAS,KAAK,SAAS,IAAI,SAAS;AAErI,aAAK,aAAa,KAAK;AACvB,aAAK,cAAc,KAAK,cAAc,KAAK,gBAAgB,KAAK,eAAe;AAE/E,YAAI,KAAK,SAAS,mBAAmB;AACjC,eAAK,gBAAgB,UAAU,IAAI,QAAQ;AAC3C,cAAI,IAAI,KAAK,WAAW,KAAK;AAC7B,cAAI,GAAG;AACH,cAAE,YAAY,EAAE,SAAS,UAAU,IAAI,QAAQ;AAC/C,cAAE,YAAY,EAAE,SAAS,UAAU,IAAI,QAAQ;AAAA,UACnD;AAAA,QACJ;AAEA,YAAI,gBAAgB,MAAM;AACtB,yBAAgB,KAAK,cAAc,KAAK,cAAc,KAAM,KAAK,SAAS;AAAA,QAC9E;AAEA,YAAI,KAAK,SAAS,YAAY,gBAAgB,KAAK,0BAA0B,KAAK,YAAY,KAAK,WAAW,GAAG;AAC7G,uBAAa,KAAK,cAAc;AAEhC,cAAI,KAAK,SAAS,oBAAoB;AAClC,iBAAK,iBAAiB,WAAW,MAAM;AACnC,mBAAK,uBAAuB,QAAW,gBAAgB,CAAC;AAAA,YAC5D,GAAG,KAAK,SAAS,oBAAoB;AAAA,UACzC,OAAO;AACH,iBAAK,uBAAuB,QAAW,gBAAgB,CAAC;AAAA,UAC5D;AAAA,QACJ;AAAA,MACJ,OAAO;AACH,aAAK,aAAa,KAAK,cAAc;AAAA,MACzC;AAEA,UAAI,CAAC,gCAAgC;AACjC,aAAK,QAAQ,KAAK,qBAAqB,KAAK,cAAc,CAAa;AAAA,MAC3E;AAAA,IACJ;AAAA,IAEA,qBAA2B;AACvB,UAAK,SAAiB,aAAc,SAAiB,UAAU,OAAO;AAClE,YAAI;AAEA,UAAC,SAAiB,UAAU,MAAM;AAAA,QACtC,SAAS,GAAP;AAAA,QAAY;AAAA,MAClB,WAAW,OAAO,cAAc;AAC5B,YAAI,MAAM,OAAO,aAAa;AAC9B,YAAI,OAAO,IAAI,iBAAiB;AAC5B,cAAI,gBAAgB;AAAA,QACxB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,0BAA0B,KAAa,MAAuB;AAClE,UAAI,aAAa,KAAK,cAAc;AAEpC,UAAI,MAAM,cAAc,CAAC,KAAK,YAAY,GAAG,GAAG;AAC5C,eAAO;AAAA,MACX;AAGA,UAAI,KAAK,MAAM,MAAM,uBAAuB,OAAO,YAAY;AAC3D,eAAO;AAAA,MACX;AAGA,UAAI,CAAC,KAAK,UAAU,KAAK,IAAI,GAAG;AAC5B,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAAA,IAEQ,uBAA6B;AACjC,UAAI,CAAC,KAAK,gBAAgB;AACtB;AAAA,MACJ;AACA,WAAK,QAAQ,KAAK,2BAA2B,EAAE,QAAQ,KAAK,eAAe,CAAC;AAC5E,WAAK,eAAe,QAAQ;AAC5B,WAAK,iBAAiB;AAEtB,UAAI,KAAK,iBAAiB;AACtB,YAAI,IAAI,KAAK,YAAY,KAAK,UAAU;AACxC,aAAK,gBAAgB,UAAU,OAAO,YAAY,SAAS;AAC3D,YAAI,GAAG;AACH,cAAI,SAAS,KAAK,MAAM,KAAK;AAC7B,cAAI,YAAY,IAAI,KAAK,aAAa,KAAK,YAAY,MAAM;AAAA,YAAE,KAAK;AAAA,YAAY,KAAK;AAAA,YACjF,KAAK,0BAA0B,GAAG,MAAM;AAAA,YAAG;AAAA,YAAQ;AAAA,UAAC,IAAI;AAC5D,eAAK,4BAA4B,WAAW,KAAK,eAAe;AAChE,eAAK,gCAAgC,KAAK,UAAU;AAAA,QACxD;AAAA,MACJ;AAIA,UAAI,UAAU,UAAU,YAAY,EAAE,MAAM,MAAM,GAAG;AACjD,aAAK,mBAAmB;AAAA,MAC5B;AAEA,WAAK,cAAc,EAAE,WAAW,KAAK,eAAe;AAAA,IACxD;AAAA,IAEA,eAAe,QAAuB;AAClC,WAAK,uBAAuB,MAAM;AAAA,IACtC;AAAA,IAEQ,uBAAuB,QAAiB,gBAA0B,GAAe;AACrF,UAAI,CAAC,KAAK,iBAAiB;AACvB;AAAA,MACJ;AACA,UAAI,CAAC,KAAK,SAAS,UAAU;AACzB,cAAM;AAAA,MACV;AAGA,mBAAa,KAAK,cAAc;AAEhC,UAAI,CAAC,KAAK,0BAA0B,KAAK,YAAY,KAAK,WAAW,GAAG;AACpE;AAAA,MACJ;AAEA,UAAI,YAAY,KAAK,MAAM,KAAK;AAChC,UAAI,OAAO,KAAK,YAAY,KAAK,UAAU;AAE3C,UAAI,KAAK,QAAQ,KAAK,kBAAkB,EAAE,KAAK,KAAK,YAAY,MAAM,KAAK,aAAa,MAAY,QAAQ,UAAU,CAAC,MAAM,OAAO;AAChI,aAAK,SAAS;AACd;AAAA,MACJ;AAEA,WAAK,cAAc,EAAE,SAAS,KAAK,eAAe;AAClD,WAAK,gBAAgB,UAAU,IAAI,UAAU;AAE7C,UAAI,YAAY,UAAU,KAAK,UAAU,KAAK,YAAY,KAAK,WAAW;AAG1E,UAAI,CAAC,UAAU,CAAC,UAAU,qBAAqB;AAC3C,aAAK,gBAAgB,YAAY;AAAA,MACrC;AAEA,UAAI,WAAW,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,KAAK,UAAU;AACvF,iBAAW,YAAY,SAAS;AAChC,UAAI,iBAAiB,aAAa,SAAS,UAAU,OAAO,SAAS,KAAK;AAE1E,WAAK,iBAAiB,IAAI,UAAU;AAAA,QAChC,MAAM;AAAA,QACN,cAAc,KAAK,OAAO,KAAK,UAAU;AAAA,QACzC,UAAU,KAAK,OAAO,KAAK,eAAe;AAAA,QAC1C,WAAW,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR,MAAM,QAAQ,CAAC;AAAA,QACf,OAAO;AAAA,QACP,eAAe,KAAK;AAAA,QACpB,eAAe,KAAK;AAAA,MACxB,CAAC;AAED,UAAI,MAAM;AACN,aAAK,eAAe,UAAU,IAAI;AAClC,YAAI,kBAAkB,KAAK,eAAe,UAAU;AAChD,eAAK,eAAe,SAAS;AAAA,QACjC;AAAA,MACJ;AAEA,WAAK,yBAAyB,KAAK,eAAe,eAAe;AAEjE,UAAI,KAAK,eAAe,UAAU;AAC9B,aAAK,+BAA+B;AAAA,MACxC;AAAA,IACJ;AAAA,IAEQ,wBAA8B;AAGlC,UAAI,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC1C,aAAK,SAAS;AACd,YAAI,KAAK,SAAS,UAAU;AACxB,eAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,wBAA8B;AAClC,UAAI,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC1C,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AAAA,IAEQ,OAAO,MAA6B;AACxC,UAAI,MAAgB;AAAA,QAChB,KAAK,KAAK;AAAA,QACV,QAAQ;AAAA,QACR,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,SAAS;AAAA,MACb;AAEA,UAAI,KAAK,SAAS,KAAK;AACvB,UAAI,KAAK,SAAS;AAElB,UAAI,SAAS,IAAI,MAAM,IAAI;AAC3B,UAAI,KAAK,SAAS,IAAI,KAAK,SAAS,IAAI;AAGxC,UAAI,eAAe,KAAK;AACxB,cAAQ,OAAO,KAAK,eAA8B,SAAS,MAAM;AAC7D,YAAI,IAAI,WAAW,KAAK,gBAAgB,KAAK,gBAAgB,iBAAiB,IAAI,EAAE,cAAc,WAAW;AACzG,cAAI,UAAU,IAAI,SAAS,KAAK,aAAa,IAAI,MAAM,KAAK,YAAY,KAAK;AAAA,QACjF;AAEA,YAAI,IAAI,WAAW,KAAK,eAAe,KAAK,eAAe,iBAAiB,IAAI,EAAE,aAAa,WAAW;AACtG,cAAI,UAAU,IAAI,KAAK,SAAS,KAAK,cAAc,IAAI,KAAK,SAAS,KAAK,aAAa,KAAK;AAAA,QAChG;AAEA,YAAI,KAAK,UAAU,KAAK;AACxB,YAAI,OAAO,KAAK;AAEhB,YAAI,SAAS,cAAc;AACvB,cAAI,SAAS,KAAK;AAClB,cAAI,OAAO,KAAK;AAChB,yBAAe,KAAK;AAAA,QACxB;AAEA,YAAI,SAAS,IAAI,MAAM,IAAI;AAC3B,YAAI,KAAK,SAAS,IAAI,KAAK,SAAS,IAAI;AAAA,MAC5C;AAEA,aAAO;AAAA,IACX;AAAA,IAEQ,wBAAkC;AACtC,aAAO,KAAK,OAAO,KAAK,eAAe;AAAA,IAC3C;AAAA,IAEA,kBAA4B;AACxB,aAAO,KAAK,OAAO,KAAK,UAAU;AAAA,IACtC;AAAA,IAyBA,gBAAwB;AACpB,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,gBAAyB;AACrB,UAAI,CAAC,KAAK,iBAAiB;AACvB,eAAO;AAAA,MACX,OAAO;AACH,eAAO,EAAE,KAAK,KAAK,YAAY,MAAM,KAAK,YAAY;AAAA,MAC1D;AAAA,IACJ;AAAA,IAEA,oBAAiC;AAC7B,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,2BAAiC;AAC7B,UAAI,KAAK,cAAc,QAAQ,KAAK,eAAe,MAAM;AACrD,aAAK,mBAAmB,KAAK,YAAY,KAAK,WAAW;AAAA,MAC7D;AAAA,IACJ;AAAA,IAEA,kBAAkB,KAAa,UAA0B;AAErD,UAAI,CAAC,KAAK,kBACL,CAAC,KAAK,SAAS,gBAAgB,MAAM,KAAK,mBAAmB,KAC7D,KAAK,SAAS,gBAAgB,MAAM,KAAK,mBAAmB,GAAI;AAEjE,YAAI,kBAAkB,KAAK,MAAM,WAAW,iBAAiB,KAAK,iBAAiB,EAAE,MAAM,CAAC;AAE5F,YAAI,YAAa,KAAK,kBAAkB,CAAC,KAAK,SAAS,eAAe,MAAM,KAAK,SAAS,YAAY;AAGtG,YAAI,WAAW,YAAY,KAAK,SAAS;AACzC,YAAI,eAAe,YAAY,KAAK,KAAK,SAAS,YAC5C,mBACC,KAAK,sBAAsB,KAAK,YAAY,SAAS;AAG5D,aAAK,YAAY,KAAK,KAAK,SAAS,YAAY,KAAK,aAAa,kBAAkB,KAAK,aAAa;AAClG,eAAK,SAAS,WAAW,WAAW,WAAW;AAC/C,eAAK,OAAO;AAAA,QAChB,WAES,YAAY,KAAK,SAAS,YAAY,KAAK,aAAa,KAAK,aAAa;AAC/E,eAAK,SAAS,WAAW,cAAc,QAAQ;AAC/C,eAAK,OAAO;AAAA,QAChB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,eAAe,KAAmB;AAC9B,WAAK,SAAS,MAAM,KAAK,SAAS,SAAS;AAC3C,WAAK,OAAO;AAAA,IAChB;AAAA,IAEQ,WAAW,KAAmB;AAClC,UAAI,YAAY,MAAM,KAAK;AAC3B,WAAK,UAAU,KAAK,mBAAmB,KAAK,UAAU,IAAI,aAAa,KAAK,SAAS,SAAS;AAC9F,WAAK,OAAO;AAEZ,UAAI,KAAK,SAAS,wBAAwB,KAAK,cAAc,MAAM;AAC/D,YAAI,MAAM,KAAK,aAAa;AAC5B,YAAI,4BAA4B,KAAK,6BAA6B;AAClE,YAAI,OAAO,2BAA2B;AAClC,gBAAM,4BAA4B;AAAA,QACtC;AACA,YAAI,MAAM,GAAG;AACT,gBAAM;AAAA,QACV;AAEA,YAAI,OAAO,GAAG,WAAW;AACzB,YAAI,iBAAiB,KAAK;AAC1B,eAAO,QAAQ,KAAK,aAAa;AAC7B,cAAI,KAAK,gBAAgB,KAAK,IAAI,GAAG;AACjC,uBAAW;AAAA,UACf;AACA,kBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,QACrC;AAEA,YAAI,YAAY,MAAM;AAClB,eAAK,sBAAsB,KAAK,YAAY,KAAK,QAAQ,CAAC;AAC1D,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,gBAAgB;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,mBAAyB;AACrB,WAAK,WAAW,CAAC;AAAA,IACrB;AAAA,IAEA,iBAAuB;AACnB,WAAK,WAAW,EAAE;AAAA,IACtB;AAAA,IAEA,cAAoB;AAChB,WAAK,cAAc,CAAC;AAAA,IACxB;AAAA,IAEA,iBAAuB;AACnB,WAAK,cAAc,KAAK,cAAc,IAAI,CAAC;AAAA,IAC/C;AAAA,IAEA,cAAc,KAAa;AACvB,UAAI,aAAa,KAAK,cAAc;AACpC,UAAI,CAAC,YAAY;AACb,eAAO;AAAA,MACX;AAEA,UAAI,MAAM;AACN,cAAM;AAAA,eACD,OAAO;AACZ,cAAM,aAAa;AAEvB,WAAK,mBAAmB,KAAK,GAAG,IAAI;AAEpC,UAAI,KAAK,SAAS,wBAAwB,KAAK,cAAc,MAAM;AAC/D,YAAI,OAAO,GAAG,WAAW;AACzB,YAAI,iBAAiB,KAAK;AAC1B,eAAO,QAAQ,KAAK,aAAa;AAC7B,cAAI,KAAK,gBAAgB,KAAK,IAAI;AAC9B,uBAAW;AACf,kBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,QACrC;AAEA,YAAI,YAAY,MAAM;AAClB,eAAK,sBAAsB,KAAK,YAAY,KAAK,QAAQ,CAAC;AAC1D,eAAK,cAAc;AAAA,QACvB;AAEI,eAAK,gBAAgB;AAAA,MAC7B;AAEA,aAAO;AAAA,IACX;AAAA,IAEA,WAAW,KAAa,MAAsB;AAC1C,UAAI,eAAe,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAC/E,UAAI,CAAC,gBAAgB,CAAC,aAAa,SAAS;AACxC,eAAO;AAAA,MACX;AAEA,UAAI,OAAO,KAAK;AAChB,UAAI,aAAa,KAAK,UAAU,aAAa,QAAQ,KAAK,MAAM,OAAO,aAAa,QAAQ;AAC5F,UAAI,UAAW,cAAc,WAAW;AACxC,UAAI,YAAY,KAAK;AACjB,kBAAU,KAAK,SAAS;AAAA,MAC5B,OAAO;AACH,kBAAU,WAAW;AAAA,MACzB;AAEA,aAAO;AAAA,IACX;AAAA,IAEQ,uBAAuB,KAAqB;AAChD,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,aAAO,OAAO,KAAK,QAAQ;AACvB,YAAI,KAAK,gBAAgB,KAAK,IAAI,GAAG;AACjC,iBAAO;AAAA,QACX;AACA,gBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,MACrC;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,sBAAsB,KAAqB;AAC/C,UAAI,OAAO;AACX,UAAI,oBAAoB;AACxB,UAAI,OAAO,KAAK;AAChB,aAAO,OAAO,KAAK,QAAQ;AACvB,YAAI,KAAK,gBAAgB,KAAK,IAAI,GAAG;AACjC,8BAAoB;AAAA,QACxB;AACA,gBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,MACrC;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,UAAU,KAAc,MAAe,MAA2B;AACtE,UAAI,OAAO,KAAK;AAChB,UAAI,QAAQ,KAAK,QAAQ;AACrB,eAAO;AAAA,MACX;AAEA,SAAG;AACC,gBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,MACrC,SACO,OAAO,KAAK,UAAU,CAAC,KAAK,gBAAgB,KAAK,IAAI;AAE5D,UAAI,OAAO,KAAK,QAAQ;AACpB,eAAO;AAAA,UACH;AAAA,UACA;AAAA,UACA,MAAM;AAAA,QACV;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,SAAS,KAAc,MAAe,MAA2B;AACrE,UAAI,QAAQ,GAAG;AACX,eAAO;AAAA,MACX;AAEA,UAAI,qBAAqB,KAAK,uBAAuB,GAAG;AACxD,UAAI,uBAAuB,QAAQ,sBAAsB,MAAM;AAC3D,eAAO;AAAA,MACX;AAEA,UAAI,OAAO;AAAA,QACP;AAAA,QACA,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AACA,UAAI;AACJ,aAAO,MAAM;AACT,cAAM,KAAK,UAAU,KAAK,KAAK,KAAK,MAAM,KAAK,IAAI;AACnD,YAAI,CAAC,KAAK;AACN,iBAAO;AAAA,QACX;AACA,YAAI,IAAI,QAAQ,MAAM;AAClB,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IAEQ,SAAS,KAAc,MAAe,MAA2B;AACrE,UAAI;AACJ,UAAI,4BAA4B,KAAK,6BAA6B;AAClE,aAAO,MAAM;AACT,YAAI,EAAE,OAAO,2BAA2B;AACpC,iBAAO;AAAA,QACX;AAEA,mBAAW,OAAO;AAClB,eAAO,QAAQ,MAAM;AACjB,qBAAW;AACX,kBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,QACrC;AAEA,YAAI,KAAK,gBAAgB,KAAK,QAAQ,GAAG;AACrC,iBAAO;AAAA,YACH;AAAA,YACA,MAAM;AAAA,YACN;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,OAAO,KAAc,MAAe,MAA2B;AACnE,UAAI;AACJ,aAAO,MAAM;AACT,YAAI,EAAE,MAAM,GAAG;AACX,iBAAO;AAAA,QACX;AAEA,mBAAW,OAAO;AAClB,eAAO,QAAQ,MAAM;AACjB,qBAAW;AACX,kBAAQ,KAAK,WAAW,KAAK,IAAI;AAAA,QACrC;AAEA,YAAI,KAAK,gBAAgB,KAAK,QAAQ,GAAG;AACrC,iBAAO;AAAA,YACH;AAAA,YACA,MAAM;AAAA,YACN;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEQ,SAAS,KAAc,MAAe,MAA2B;AACrE,UAAI,OAAO,QAAQ,QAAQ,MAAM;AAC7B,cAAM,OAAO,OAAO;AACpB,YAAI,KAAK,gBAAgB,KAAK,IAAI,GAAG;AACjC,iBAAO;AAAA,YACH;AAAA,YACA;AAAA,YACA,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,MAAM,KAAK,UAAU,KAAK,MAAM,IAAI;AACxC,UAAI,KAAK;AACL,eAAO;AAAA,MACX;AAEA,UAAI,qBAAqB;AACzB,UAAI,4BAA4B,KAAK,6BAA6B;AAClE,aAAO,EAAE,MAAM,2BAA2B;AACtC,6BAAqB,KAAK,uBAAuB,GAAG;AACpD,YAAI,sBAAsB,MAAM;AAC5B,iBAAO;AAAA,YACH;AAAA,YACA,MAAM;AAAA,YACN,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,SAAS,KAAc,MAAe,MAA6D;AACvG,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,QAAQ,QAAQ,MAAM;AAC7B,cAAM,KAAK,6BAA6B,IAAI;AAC5C,eAAO,OAAO,KAAK,SAAS;AAC5B,YAAI,KAAK,gBAAgB,KAAK,IAAI,GAAG;AACjC,iBAAO;AAAA,YACH;AAAA,YACA;AAAA,YACA,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI;AACJ,UAAI;AACJ,aAAO,CAAC,KAAK;AACT,cAAM,KAAK,SAAS,KAAK,MAAM,IAAI;AACnC,YAAI,KAAK;AACL;AAAA,QACJ;AACA,YAAI,EAAE,MAAM,GAAG;AACX,iBAAO;AAAA,QACX;AAEA,eAAO;AACP,6BAAqB,KAAK,sBAAsB,GAAG;AACnD,YAAI,sBAAsB,MAAM;AAC5B,gBAAM;AAAA,YACF;AAAA,YACA,MAAM;AAAA,YACN,MAAM;AAAA,UACV;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,aAAa,KAAa;AAC9B,UAAI,UAAU,KAAK,uBAAuB,GAAG;AAC7C,UAAI,YAAY;AACZ,eAAO;AAEX,aAAO;AAAA,QACH;AAAA,QACA,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IAEQ,WAAW,KAAa;AAC5B,UAAI,UAAU,KAAK,sBAAsB,GAAG;AAC5C,UAAI,YAAY;AACZ,eAAO;AAEX,aAAO;AAAA,QACH;AAAA,QACA,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,IAEA,gBAAyB;AACrB,aAAO,KAAK,SAAS,OAAO;AAAA,IAChC;AAAA,IAEA,eAAwB;AACpB,aAAO,KAAK,SAAS,MAAM;AAAA,IAC/B;AAAA,IAEA,eAAwB;AACpB,aAAO,KAAK,SAAS,MAAM;AAAA,IAC/B;AAAA,IAEA,aAAsB;AAClB,aAAO,KAAK,SAAS,IAAI;AAAA,IAC7B;AAAA,IAEA,eAAwB;AACpB,aAAO,KAAK,SAAS,MAAM;AAAA,IAC/B;AAAA,IAEA,eAAwB;AACpB,aAAO,KAAK,SAAS,MAAM;AAAA,IAC/B;AAAA,IAEA,mBAA4B;AACxB,aAAO,KAAK,SAAS,MAAM;AAAA,IAC/B;AAAA,IAEA,iBAA0B;AACtB,aAAO,KAAK,SAAS,KAAK;AAAA,IAC9B;AAAA,IAMA,SAAS,KAAsB;AAC3B,UAAI,CAAC,KAAK,SAAS,sBAAsB;AACrC,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,KAAK,mBAAmB,OAAO,UAAU,OAAO,QAAQ;AACzD,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC3C,eAAO;AAAA,MACX;AACA,WAAK,SAAS;AAEd,UAAI,oBAAoB;AAAA,QACpB,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,KAAK;AAAA,MACT;AAEA,wBAAkB,KAAK,SAAS;AAChC,wBAAkB,KAAK,SAAS;AAEhC,WAAK,oBAAoB,kBAAkB;AAE3C,UAAI,gBAAgB;AAAA,QAChB,IAAI,KAAK;AAAA,QACT,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,KAAK,KAAK;AAAA,MACd;AAEA,oBAAc,KAAK,SAAS,KAAK;AACjC,oBAAc,KAAK,SAAS,KAAK;AAEjC,UAAI,SAAS,cAAc,KAAK,KAAK,IAAI;AACzC,UAAI,MAAM,OAAO,KAAK,YAAY,KAAK,aAAa,KAAK,WAAW;AACpE,UAAI,KAAK;AACL,YAAI,KAAK,kBAAkB,KAAK,SAAS,gBAAgB,IAAI,OAAO,KAAK,cAAc,GAAG;AACtF;AAAA,QACJ;AAEA,YAAI,cAAe,IAAI,OAAO,KAAK,cAAc;AAEjD,YAAK,CAAC,KAAK,SAAS,gBAAgB,IAAI,OAAO,KAAK,oBAC5C,KAAK,SAAS,gBAAgB,IAAI,MAAM,KAAK,kBACnD;AACE,eAAK,mBAAmB,IAAI,KAAK,IAAI,MAAM,CAAC,WAAW;AAAA,QAC3D;AAEA,aAAK,sBAAsB,KAAK,YAAY,IAAI,KAAK,IAAI,IAAI,CAAC;AAC9D,aAAK,cAAc,IAAI;AACvB,eAAO;AAAA,MACX,OAAO;AACH,aAAK,sBAAsB,KAAK,YAAY,KAAK,YAAY,KAAK,WAAW,CAAC;AAC9E,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IAEA,YAAY,KAAa,MAA2B;AAChD,UAAI,KAAK,WAAW,MAAM;AACtB,aAAK,2BAA2B,GAAG;AACnC,eAAO,KAAK,WAAW,KAAK,qBAAqB;AAAA,MACrD;AACA,aAAO;AAAA,IACX;AAAA,IAEA,cAAc,KAAa,MAAc;AACrC,UAAI,CAAC,KAAK,cAAc;AAAE;AAAA,MAAQ;AAClC,UAAI,OAAO,KAAK;AAChB,UAAI,MAAM,KAAK,cAAc,KAAK,MAAM,KAAK,QAAQ,KAAK,UAAU,OAAO,GAAG;AAC1E;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK,SAAS,sBAAsB;AACrC;AAAA,MACJ;AAEA,WAAK,mBAAmB,KAAK,MAAM,KAAK;AACxC,WAAK,sBAAsB,KAAK,YAAY,KAAK,IAAI,GAAG,KAAK;AAAA,IACjE;AAAA,IAEQ,gBAAgB,KAAa,MAAuB;AACxD,UAAI,OAAO,KAAK;AAChB,UAAI,CAAC,KAAK,SAAS,wBAAwB,OAAO,KAAK,6BAA6B,KAChF,MAAM,KAAK,QAAQ,KAAK,UAAU,OAAO,GAAG;AAC5C,eAAO;AAAA,MACX;AAEA,UAAI,cAAc,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAC9E,UAAI,eAAe,OAAO,YAAY,cAAc,WAAW;AAC3D,eAAO,YAAY;AAAA,MACvB;AAEA,UAAI,iBAAiB,eAAe,YAAY;AAChD,UAAI,kBAAkB,KAAK,SAAS,eAAe,KAAK,MAAM,OAAO,OAAO,eAAe,KAAK,MAAM,IAAI,cAAc,WAAW;AAC/H,eAAO,eAAe,KAAK,MAAM,IAAI;AAAA,MACzC;AACA,UAAI,kBAAkB,eAAe,SAAS,OAAO,eAAe,MAAM,cAAc,WAAW;AAC/F,eAAO,eAAe,MAAM;AAAA,MAChC;AAEA,aAAO,KAAK,MAAM;AAAA,IACtB;AAAA,IAEA,kBAAkB,KAAa,MAAc;AACzC,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,KAAK,cAAc,KAAK,MAAM,KAAK,QAAQ,KAAK,UAAU,OAAO,GAAG;AAC3E,eAAO;AAAA,MACX;AAEA,UAAI,cAAc,KAAK,MAAM,mBAAmB,KAAK,MAAM,gBAAgB,GAAG;AAC9E,UAAI,eAAe,OAAO,YAAY,eAAe,WAAW;AAC5D,eAAO,YAAY;AAAA,MACvB;AAEA,UAAI,iBAAiB,eAAe,YAAY,YAAY,YAAY,QAAQ,KAAK,MAAM,OAAO,YAAY,QAAQ;AACtH,UAAI,kBAAkB,OAAO,eAAe,eAAe,WAAW;AAClE,eAAO,eAAe;AAAA,MAC1B;AAEA,aAAO,KAAK,MAAM;AAAA,IACtB;AAAA,IAEA,SAAS,KAAa,MAAc,WAAqB;AACrD,UAAI,CAAC,KAAK,cAAc;AAAE;AAAA,MAAQ;AAClC,UAAI,CAAC,KAAK,gBAAgB,KAAK,IAAI,GAAG;AAClC;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK,cAAc,EAAE,kBAAkB,GAAG;AAC3C;AAAA,MACJ;AAEA,WAAK,mBAAmB,KAAK,MAAM,KAAK;AAExC,UAAI,UAAU,KAAK,YAAY,KAAK,IAAI;AAGxC,WAAK,sBAAsB,SAAS,aAAc,QAAQ,KAAK,cAAc,KAAM,KAAK,SAAS,QAAQ;AAGzG,UAAI,CAAC,KAAK,gBAAgB;AACtB,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AAAA,IAKA,oBAA6B;AACzB,UAAI,OAAO,KAAK,YAAY,KAAK,UAAU;AAC3C,UAAI,SAAS,KAAK,MAAM,KAAK;AAC7B,UAAI,OAAO;AAEX,UAAI,KAAK,gBAAgB;AACrB,YAAI,KAAK,eAAe,eAAe,GAAG;AACtC,cAAI,oBAAoB,KAAK,eAAe,SAAS;AAErD,cAAI,kBAAkB,OAAO;AACzB,gBAAI,KAAK,aAAa,KAAK,cAAc,GAAG;AACxC,kBAAI,cAA2B;AAAA,gBAC3B,KAAK,KAAK;AAAA,gBACV,MAAM,KAAK;AAAA,gBACX,QAAQ,KAAK;AAAA,gBACb,iBAAiB,KAAK,eAAe,eAAe;AAAA,gBACpD,qBAAqB,KAAK;AAAA,gBAC1B,SAAS,WAAY;AACjB,uBAAK,OAAO,WAAW,MAAM,KAAK,eAAe;AACjD,uBAAK,UAAU,KAAK,GAAG;AACvB,uBAAK,QAAQ,KAAK,cAAc;AAAA,oBAC5B,KAAK,KAAK;AAAA,oBACV,MAAM,KAAK;AAAA,oBACX;AAAA,kBACJ,CAAC;AAAA,gBACL;AAAA,gBACA,MAAM,WAAY;AACd,uBAAK,OAAO,WAAW,MAAM,KAAK,mBAAmB;AACrD,uBAAK,UAAU,KAAK,GAAG;AACvB,uBAAK,QAAQ,KAAK,cAAc;AAAA,oBAC5B,KAAK,KAAK;AAAA,oBACV,MAAM,KAAK;AAAA,oBACX;AAAA,kBACJ,CAAC;AAAA,gBACL;AAAA,cACJ;AAEA,kBAAI,KAAK,SAAS,oBAAoB;AAClC,qBAAK,qBAAqB;AAC1B,qBAAK,SAAS,mBAAmB,MAAM,QAAQ,WAAW;AAAA,cAC9D,OAAO;AACH,4BAAY,QAAQ;AACpB,qBAAK,qBAAqB;AAAA,cAC9B;AAAA,YAEJ,OAAO;AACH,kBAAI,UAAU,CAAC;AACf,mBAAK,eAAe,WAAW,SAAS,KAAK,eAAe,eAAe,CAAC;AAC5E,mBAAK,qBAAqB;AAC1B,mBAAK,QAAQ,KAAK,aAAa,EAAE,MAAM,SAAS,OAAe,CAAC;AAAA,YACpE;AAGA,mBAAO,CAAC,KAAK,cAAc,EAAE,SAAS;AAAA,UAC1C,OAAO;AAEH,iBAAK,gBAAgB,UAAU,OAAO,SAAS;AAC/C,iBAAK,gBAAgB;AACrB,iBAAK,gBAAgB,UAAU,IAAI,SAAS;AAE5C,iBAAK,QAAQ,KAAK,mBAAmB;AAAA,cACjC,QAAQ,KAAK;AAAA,cACb,UAAU,KAAK;AAAA,cACf;AAAA,cACA,KAAK,KAAK;AAAA,cACV,MAAM,KAAK;AAAA,cACX;AAAA,YACJ,CAAC;AAED,iBAAK,eAAe,MAAM;AAC1B,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,aAAK,qBAAqB;AAAA,MAC9B;AACA,aAAO;AAAA,IACX;AAAA,IAEQ,oBAAoB;AACxB,WAAK,qBAAqB;AAC1B,aAAO;AAAA,IACX;AAAA,IAEQ,aAAa,MAAyB;AAC1C,UAAI,SAAS,CAAC;AACd,UAAI,WAAW,KAAK,MAAM,SAAS;AACnC,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,eAAO,KAAK,IAAI,MAAM,KAAK,IAAI,GAAG,KAAK,IAAI,QAAQ,CAAC;AAAA,MACxD;AACA,aAAO;AAAA,IACX;AAAA,IAEA,kBAA4B;AACxB,UAAI,CAAC,KAAK,iBAAiB;AACvB,cAAM;AAAA,MACV;AACA,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,gBAAgB,MAAgB;AAC5B,UAAI,CAAC,KAAK,iBAAiB;AACvB,cAAM;AAAA,MACV;AACA,WAAK,gBAAgB,kBAAkB,KAAK,aAAa,IAAI,CAAC;AAAA,IAClE;AAAA,EACJ;",
  "names": ["i", "c", "i", "e", "j", "k", "c"]
}
