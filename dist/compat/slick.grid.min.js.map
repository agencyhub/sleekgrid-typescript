{
  "version": 3,
  "sources": ["../../src/grid/index.ts", "../../src/grid/column.ts", "global-externals:_", "../../src/grid/internal.ts", "../../src/grid/gridoptions.ts", "../../src/grid/grid.ts"],
  "sourcesContent": ["export * from \"./column\";\nexport * from \"./eventargs\";\nexport * from \"./editor\";\nexport * from \"./formatting\";\nexport * from \"./gridoptions\";\nexport * from \"./grid\";\n", "import type { GroupTotals } from \"../core/group\";\nimport type { Grid } from \"./grid\";\nimport type { Editor, ValidationResult } from \"./editor\";\nimport type { AsyncPostCleanup, AsyncPostRender, ColumnFormatter } from \"./formatting\";\n\nexport interface Column<TItem = any> {\n    asyncPostRender?: AsyncPostRender<TItem>;\n    asyncPostRenderCleanup?: AsyncPostCleanup<TItem>;\n    behavior?: any;\n    cannotTriggerInsert?: boolean;\n    cssClass?: string;\n    defaultSortAsc?: boolean;\n    editor?: Editor;\n    field: string;\n    frozen?: boolean;\n    focusable?: boolean;\n    footerCssClass?: string;\n    formatter?: ColumnFormatter<TItem>;\n    groupTotalsFormatter?: (p1?: GroupTotals<TItem>, p2?: Column<TItem>, grid?: Grid<TItem>) => string;\n    headerCssClass?: string;\n    id?: string;\n    maxWidth?: any;\n    minWidth?: number;\n    name?: string;\n    nameIsHtml?: boolean;\n    previousWidth?: number;\n    referencedFields?: string[];\n    rerenderOnResize?: boolean;\n    resizable?: boolean;\n    selectable?: boolean;\n    sortable?: boolean;\n    sortOrder?: number;\n    toolTip?: string;\n    validator?: (value: any) => ValidationResult;\n    visible?: boolean;\n    width?: number;\n}\n\nexport const columnDefaults: Partial<Column> = {\n    name: \"\",\n    nameIsHtml: false,\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    footerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n};\n\nexport interface ColumnMetadata<TItem = any> {\n    colspan: number | '*';\n    formatter?: ColumnFormatter<TItem>;\n}\n\nexport interface ColumnSort {\n    columnId: string;\n    sortAsc?: boolean;\n}\n\nexport interface ItemMetadata<TItem = any> {\n    columns?: { [key: string]: ColumnMetadata<TItem> };\n    formatter?: ColumnFormatter<TItem>;\n}\n\n", "const { Event, EventData, GlobalEditorLock, keyCode, NonDataRow, preClickClassName, Range } = Slick;export {\n     Event, EventData, GlobalEditorLock, keyCode, NonDataRow, preClickClassName, Range\n};", "import type { Column } from \"./column\";\nimport type { GridOptions } from \"./gridoptions\";\n\n// shared across all grids on the page\nlet maxSupportedCssHeight: number;  // browser's breaking point\nlet scrollbarDimensions: { width: number, height: number };\n\nexport function adjustFrozenColumnCompat(columns: Column[], options: GridOptions) {\n    if (options?.frozenColumn == null) {\n        delete options.frozenColumn;\n        return;\n    }\n\n    var toFreeze = options.frozenColumn + 1;\n    options.frozenColumn = -1;\n    var i = 0;\n    while (i < columns.length) {\n        var col = columns[i++];\n        if (toFreeze > 0 && col.visible !== false) {\n            col.frozen = true;\n            options.frozenColumn++;\n            toFreeze--;\n        }\n        else if (col.frozen !== undefined)\n            delete col.frozen;\n    }\n}\n\nexport function attrEncode(s: string) {\n    if (s == null)\n        return '';\n\n    return s\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\");\n}\n\nexport function defaultFormatter(_r: number, _c: number, value: any) {\n    return htmlEncode(value);\n}\n\nexport function disableSelection(target: HTMLElement) {\n    if (target) {\n        target.setAttribute('unselectable', 'on');\n        target.style.userSelect = \"none\";\n        target.addEventListener('selectstart', () => false);\n    }\n}\n\nexport function getMaxSupportedCssHeight(): number {\n    return maxSupportedCssHeight ?? ((navigator.userAgent.toLowerCase().match(/gecko\\//) ? 4000000 : 32000000));\n}\n\nexport function getScrollBarDimensions(recalc?: boolean) {\n    if (!scrollbarDimensions || recalc) {\n        var c = document.body.appendChild(H('div', {\n            style: 'position:absolute;top:-10000px;left:-10000px;width:100px;height:100px;overflow: scroll;border:0'\n        }));\n        scrollbarDimensions = {\n            width: Math.round(c.offsetWidth - c.clientWidth),\n            height: Math.round(c.offsetWidth - c.clientHeight)\n        };\n        c.remove();\n    }\n    return scrollbarDimensions;\n}\n\nexport function H<K extends keyof HTMLElementTagNameMap>(tag: K, attr?: { [key: string]: (string | boolean) }, ...children: Node[]): HTMLElementTagNameMap[K] {\n    var el = document.createElement(tag);\n    var k: string, v: (string | boolean), c: Node;\n    if (attr) {\n        for (k in attr) {\n            v = attr[k];\n            if (v != null && v !== false)\n                el.setAttribute(k, v === true ? '' : v);\n        }\n    }\n    if (children) {\n        for (c of children)\n            el.appendChild(c);\n    }\n    return el;\n}\n\nexport function htmlEncode(s: string) {\n    return (s + \"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n}\n\nexport function simpleArrayEquals(arr1: number[], arr2: number[]) {\n    if (!Array.isArray(arr1) || !Array.isArray(arr2) || arr1.length !== arr2.length)\n        return false;\n    arr1.sort();\n    arr2.sort();\n    for (var i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i])\n            return false;\n    }\n    return true;\n}\n\n/**\n * Helper to sort visible cols, while keeping invisible cols sticky to\n * the previous visible col. For example, if columns are currently in order\n * A, B, C, D, E, F, G, H and desired order is G, D, F (assuming A, B, C, E\n * were invisible) the result is A, B, G, H, D, E, F.\n */\n export function sortToDesiredOrderAndKeepRest(columns: Column[], idOrder: string[]): Column[] {\n    if (idOrder.length == 0)\n        return columns;\n\n    var orderById: { [key: string]: number } = {},\n        colIdxById: { [key: string]: number } = {},\n        result: Column[] = [];\n\n    for (var i = 0; i < idOrder.length; i++)\n        orderById[idOrder[i]] = i;\n\n    for (i = 0; i < columns.length; i++)\n        colIdxById[columns[i].id] = i;\n\n    function takeFrom(i: number) {\n        for (var j = i; j < columns.length; j++) {\n            var c = columns[j];\n            if (i != j && orderById[c.id] != null)\n                break;\n            result.push(c);\n            colIdxById[c.id] = null;\n        }\n    }\n\n    if (orderById[columns[0].id] == null)\n        takeFrom(0);\n\n    for (var id of idOrder) {\n        i = colIdxById[id];\n        if (i != null)\n            takeFrom(i);\n    }\n\n    for (i = 0; i < columns.length; i++) {\n        var c = columns[i];\n        if (colIdxById[c.id] != null) {\n            result.push(c);\n            colIdxById[c.id] = null;\n        }\n    }\n\n    return result;\n}\n\nexport function addUiStateHover() {\n    (this as HTMLElement)?.classList?.add(\"ui-state-hover\");\n}\n\nexport function removeUiStateHover() {\n    (this as HTMLElement)?.classList?.remove(\"ui-state-hover\");\n}\n\nexport interface CachedRow {\n    rowNodeL: HTMLDivElement,\n    rowNodeR: HTMLDivElement,\n    // ColSpans of rendered cells (by column idx).\n    // Can also be used for checking whether a cell has been rendered.\n    cellColSpans: number[],\n\n    // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n    cellNodesByColumnIdx: { [key: number]: HTMLElement },\n\n    // Column indices of cell nodes that have been rendered, but not yet indexed in\n    // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n    // end of the row.\n    cellRenderQueue: number[]\n}\n\nexport interface GoToResult {\n    row: number;\n    cell: number;\n    posX: number;\n}\n\nexport interface PostProcessCleanupEntry {\n    groupId: number,\n    cellNode?: HTMLElement,\n    columnIdx?: number,\n    rowNodeL?: HTMLDivElement;\n    rowNodeR?: HTMLDivElement;\n    rowIdx?: number;\n}\n", "import type { Column } from \"./column\";\nimport { EditorLock, GlobalEditorLock } from \"../core/editlock\";\nimport type { EditCommand, EditorFactory } from \"./editor\";\nimport type { ColumnFormatter, FormatterFactory } from \"./formatting\";\nimport { defaultFormatter } from \"./internal\";\n\nexport interface GridOptions<TItem = any> {\n    addNewRowCssClass?: string;\n    alwaysAllowHorizontalScroll?: boolean;\n    alwaysShowVerticalScroll?: boolean;\n    asyncEditorLoadDelay?: number;\n    asyncEditorLoading?: boolean;\n    asyncPostCleanupDelay?: number;\n    asyncPostRenderDelay?: number;\n    autoEdit?: boolean;\n    autoHeight?: boolean;\n    cellFlashingCssClass?: string;\n    cellHighlightCssClass?: string;\n    columns?: Column<TItem>[];\n    dataItemColumnValueExtractor?: (item: TItem, column: Column<TItem>) => void;\n    defaultColumnWidth?: number;\n    defaultFormatter?: ColumnFormatter<TItem>;\n    editable?: boolean;\n    editCommandHandler?: (item: TItem, column: Column<TItem>, command: EditCommand) => void;\n    editorFactory?: EditorFactory;\n    editorLock?: EditorLock;\n    enableAddRow?: boolean;\n    enableAsyncPostRender?: boolean;\n    enableAsyncPostRenderCleanup?: boolean;\n    enableCellNavigation?: boolean;\n    enableCellRangeSelection?: boolean;\n    enableColumnReorder?: boolean;\n    enableRowReordering?: boolean;\n    enableTabKeyNavigation?: boolean;\n    enableTextSelectionOnCells?: boolean;\n    explicitInitialization?: boolean;\n    footerRowHeight?: number;\n    forceFitColumns?: boolean;\n    forceSyncScrolling?: boolean;\n    formatterFactory?: FormatterFactory;\n    frozenBottom?: boolean;\n    frozenColumn?: number;\n    frozenRow?: number;\n    fullWidthRows?: boolean;\n    groupingPanel?: boolean,\n    groupingPanelHeight?: number;\n    headerRowHeight?: number;\n    leaveSpaceForNewRows?: boolean;\n    minBuffer?: number;\n    multiColumnSort?: boolean;\n    multiSelect?: boolean;\n    renderAllCells?: boolean;\n    rowHeight?: number;\n    selectedCellCssClass?: string;\n    showCellSelection?: boolean;\n    showColumnHeader?: boolean;\n    showFooterRow?: boolean;\n    showGroupingPanel?: boolean;\n    showHeaderRow?: boolean;\n    showTopPanel?: boolean;\n    slickCompat?: boolean;\n    suppressActiveCellChangeOnEdit?: boolean;\n    syncColumnCellResize?: boolean;\n    topPanelHeight?: number;\n    useLegacyUI?: boolean;\n    viewportClass?: string;\n}\n\nexport const gridDefaults: GridOptions = {\n    addNewRowCssClass: \"new-row\",\n    alwaysAllowHorizontalScroll: false,\n    alwaysShowVerticalScroll: false,\n    asyncEditorLoadDelay: 100,\n    asyncEditorLoading: false,\n    asyncPostCleanupDelay: 40,\n    asyncPostRenderDelay: 50,\n    autoEdit: true,\n    autoHeight: false,\n    cellFlashingCssClass: \"flashing\",\n    dataItemColumnValueExtractor: null,\n    defaultColumnWidth: 80,\n    defaultFormatter: defaultFormatter,\n    editable: false,\n    editorFactory: null,\n    editorLock: GlobalEditorLock,\n    enableAddRow: false,\n    enableAsyncPostRender: false,\n    enableAsyncPostRenderCleanup: false,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    enableTabKeyNavigation: true,\n    enableTextSelectionOnCells: false,\n    explicitInitialization: false,\n    footerRowHeight: 25,\n    forceFitColumns: false,\n    forceSyncScrolling: false,\n    formatterFactory: null,\n    frozenBottom: false,\n    frozenRow: -1,\n    fullWidthRows: false,\n    groupingPanel: false,\n    groupingPanelHeight: 34,\n    headerRowHeight: 25,\n    leaveSpaceForNewRows: false,\n    useLegacyUI: true,\n    minBuffer: 3,\n    multiColumnSort: false,\n    multiSelect: true,\n    renderAllCells: false,\n    rowHeight: 25,\n    selectedCellCssClass: \"selected\",\n    showCellSelection: true,\n    showColumnHeader: true,\n    showFooterRow: false,\n    showGroupingPanel: true,\n    showHeaderRow: false,\n    showTopPanel: false,\n    suppressActiveCellChangeOnEdit: false,\n    topPanelHeight: 25\n}\n", "import { NonDataRow, preClickClassName } from \"../core/base\";\nimport { Column, columnDefaults, ColumnSort, ItemMetadata } from \"./column\";\nimport { EditController, EditorLock } from \"../core/editlock\";\nimport { EditCommand, Editor } from \"./editor\";\nimport { Event, IEventData, EventData, keyCode } from \"../core/event\";\nimport type { CellStylesHash, ColumnFormatter, FormatterResult } from \"./formatting\";\nimport { addUiStateHover, adjustFrozenColumnCompat, attrEncode, CachedRow, disableSelection, getMaxSupportedCssHeight, getScrollBarDimensions, GoToResult, H, htmlEncode, PostProcessCleanupEntry, removeUiStateHover, simpleArrayEquals, sortToDesiredOrderAndKeepRest } from \"./internal\";\nimport { IPlugin, Position, RowCell, SelectionModel, ViewRange } from \"./types\";\nimport { ArgsCell, ArgsGrid, ArgsAddNewRow, ArgsEditorDestroy, ArgsCellEdit, ArgsColumnNode, ArgsCellChange, ArgsCssStyle, ArgsColumn, ArgsScroll, ArgsSelectedRowsChange, ArgsSort, ArgsValidationError } from \"./eventargs\";\nimport { GroupTotals } from \"../core/group\";\nimport { gridDefaults, GridOptions } from \"./gridoptions\";\nimport { Range } from \"../core/range\";\n\n\nexport class Grid<TItem = any> {\n\n    private _absoluteColMinWidth: number;\n    private _activeCanvasNode: HTMLElement;\n    private _activeCell: number;\n    private _activeCellNode: HTMLElement = null;\n    private _activePosX: number;\n    private _activeRow: number;\n    private _activeViewportNode: HTMLElement;\n    private _actualFrozenRow: number = -1;\n    private _canvasWidth: number;\n    private _canvasWidthL: number;\n    private _canvasWidthR: number;\n    private _cellCssClasses: CellStylesHash = {};\n    private _cellHeightDiff: number = 0;\n    private _cellWidthDiff: number = 0;\n    private _colById: { [key: string]: number };\n    private _colDefaults: Partial<Column>;\n    private _colLeft: number[] = [];\n    private _colRight: number[] = [];\n    private _cols: Column<TItem>[];\n    private _columnCssRulesL: any;\n    private _columnCssRulesR: any;\n    private _currentEditor: Editor = null;\n    private _data: any;\n    private _editController: EditController;\n    private _frozenCols: number;\n    private _footerRowH: number = 0;\n    private _frozenRowsHeight: number = 0;\n    private _groupingPanelH: number = 0;\n    private _hasFrozenRows = false;\n    private _headerColumnWidthDiff: number = 0;\n    private _headerRowH: number = 0;\n    private _headersWidthL: number;\n    private _headersWidthR: number;\n    private _hEditorLoader: number = null;\n    private _hPostRender: number = null;\n    private _hPostRenderCleanup: number = null;\n    private _hRender: number = null;\n    private _ignoreScrollUntil: number = 0;\n    private _initColById: { [key: string]: number };\n    private _initCols: Column<TItem>[];\n    private _initialized = false;\n    private _jumpinessCoefficient: number;\n    private _numberOfPages: number;\n    private _numVisibleRows: number = 0;\n    private _options: GridOptions<TItem>;\n    private _page: number = 0;\n    private _pageHeight: number;\n    private _pageOffset: number = 0;\n    private _pagingActive: boolean = false;\n    private _pagingIsLastPage: boolean = false;\n    private _paneBottomH: number = 0;\n    private _paneTopH: number = 0;\n    private _plugins: IPlugin[] = [];\n    private _postProcessCleanupQueue: PostProcessCleanupEntry[] = [];\n    private _postProcessedRows: any = {};\n    private _postProcessFromRow: number = null;\n    private _postProcessGroupId: number = 0;\n    private _postProcessToRow: number = null;\n    private _realScrollHeight: number;\n    private _rowsCache: { [key: number]: CachedRow } = {};\n    private _rtl = false;\n    private _rtlE = 'right';\n    private _rtlS = 'left';\n    private _scrollDims: { width: number, height: number };\n    private _scrollLeft: number = 0;\n    private _scrollLeftPrev: number = 0;\n    private _scrolLLeftRendered: number = 0;\n    private _scrollTop: number = 0;\n    private _scrollTopPrev: number = 0;\n    private _scrollTopRendered: number = 0;\n    private _selectedRows: number[] = [];\n    private _selectionModel: SelectionModel;\n    private _serializedEditorValue: any;\n    private _sortColumns: ColumnSort[] = [];\n    private _styleNode: HTMLStyleElement;\n    private _stylesheet: any;\n    private _tabbingDirection: number = 1;\n    private _topPanelH: number = 0;\n    private _uid: string = \"sleekgrid_\" + Math.round(1000000 * Math.random());\n    private _viewportH: number;\n    private _viewportHasHScroll: boolean;\n    private _viewportHasVScroll: boolean;\n    private _viewportTopH: number = 0;\n    private _viewportW: number;\n    private _virtualHeight: number;\n    private _vScrollDir: number = 1;\n\n    private _boundAncestorScroll: HTMLElement[] = [];\n    private _canvasBottomL: HTMLDivElement;\n    private _canvasBottomR: HTMLDivElement;\n    private _canvasTopL: HTMLDivElement;\n    private _canvasTopR: HTMLDivElement;\n    private _container: HTMLElement;\n    private _focusSink1: HTMLDivElement;\n    private _focusSink2: HTMLDivElement;\n    private _groupingPanel: HTMLDivElement;\n    private _headerColsL: HTMLDivElement;\n    private _headerColsR: HTMLDivElement;\n    private _headerRowColsL: HTMLDivElement;\n    private _headerRowColsR: HTMLDivElement;\n    private _headerRowSpacerL: HTMLDivElement;\n    private _headerRowSpacerR: HTMLDivElement;\n    private _footerRowColsL: HTMLDivElement;\n    private _footerRowColsR: HTMLDivElement;\n    private _footerRowSpacerL: HTMLDivElement;\n    private _footerRowSpacerR: HTMLDivElement;\n    private _paneBottomL: HTMLDivElement;\n    private _paneBottomR: HTMLDivElement;\n    private _paneHeaderL: HTMLDivElement;\n    private _paneHeaderR: HTMLDivElement;\n    private _paneTopL: HTMLDivElement;\n    private _paneTopR: HTMLDivElement;\n    private _scrollContainerX: HTMLDivElement;\n    private _scrollContainerY: HTMLDivElement;\n    private _topPanelL: HTMLDivElement;\n    private _topPanelR: HTMLDivElement;\n    private _viewportBottomL: HTMLDivElement;\n    private _viewportBottomR: HTMLDivElement;\n    private _viewportTopL: HTMLDivElement;\n    private _viewportTopR: HTMLDivElement;\n\n    readonly onActiveCellChanged = new Event<ArgsCell>();\n    readonly onActiveCellPositionChanged = new Event<ArgsGrid>();\n    readonly onAddNewRow = new Event<ArgsAddNewRow>();\n    readonly onBeforeCellEditorDestroy = new Event<ArgsEditorDestroy>();\n    readonly onBeforeDestroy = new Event<ArgsGrid>();\n    readonly onBeforeEditCell = new Event<ArgsCellEdit>();\n    readonly onBeforeFooterRowCellDestroy = new Event<ArgsColumnNode>();\n    readonly onBeforeHeaderCellDestroy = new Event<ArgsColumnNode>();\n    readonly onBeforeHeaderRowCellDestroy = new Event<ArgsColumnNode>();\n    readonly onCellChange = new Event<ArgsCellChange>();\n    readonly onCellCssStylesChanged = new Event<ArgsCssStyle>();\n    readonly onClick = new Event<ArgsCell, JQueryMouseEventObject>();\n    readonly onColumnsReordered = new Event<ArgsGrid>();\n    readonly onColumnsResized = new Event<ArgsGrid>();\n    readonly onContextMenu = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDblClick = new Event<ArgsCell, JQueryMouseEventObject>();\n    readonly onDrag = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragEnd = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragInit = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onDragStart = new Event<ArgsGrid, JQueryEventObject>();\n    readonly onFooterRowCellRendered = new Event<ArgsColumnNode>();\n    readonly onHeaderCellRendered = new Event<ArgsColumnNode>();\n    readonly onHeaderClick = new Event<ArgsColumn>();\n    readonly onHeaderContextMenu = new Event<ArgsColumn>();\n    readonly onHeaderMouseEnter = new Event<ArgsColumn, MouseEvent>();\n    readonly onHeaderMouseLeave = new Event<ArgsColumn, MouseEvent>();\n    readonly onHeaderRowCellRendered = new Event<ArgsColumnNode>();\n    readonly onKeyDown = new Event<ArgsCell, JQueryKeyEventObject>();\n    readonly onMouseEnter = new Event<ArgsGrid, MouseEvent>();\n    readonly onMouseLeave = new Event<ArgsGrid, MouseEvent>();\n    readonly onScroll = new Event<ArgsScroll>();\n    readonly onSelectedRowsChanged = new Event<ArgsSelectedRowsChange>();\n    readonly onSort = new Event<ArgsSort>();\n    readonly onValidationError = new Event<ArgsValidationError>();\n    readonly onViewportChanged = new Event<ArgsGrid>();\n\n    constructor(container: JQuery | HTMLElement, data: any, columns: Column<TItem>[], options: GridOptions<TItem>) {\n\n        this._data = data;\n\n        // settings\n\n\n        this._colDefaults = Object.assign({}, columnDefaults);\n\n        //////////////////////////////////////////////////////////////////////////////////////////////\n        // Initialization\n\n        if (typeof jQuery !== \"undefined\" && container instanceof jQuery)\n            this._container = container[0];\n        else if (container instanceof Element)\n            this._container = container as HTMLElement;\n        else if (typeof container === \"string\")\n            this._container = document.querySelector(container);\n\n        if (this._container == null) {\n            throw new Error(\"SleekGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n        }\n\n        this._rtl = document.body.classList.contains('rtl') || (typeof getComputedStyle != \"undefined\" &&\n            getComputedStyle(this._container).direction == 'rtl');\n        if (this._rtl) {\n            this._rtlS = 'right';\n            this._rtlE = 'left';\n        }\n\n        options = Object.assign({}, gridDefaults, options);\n        this._options = options;\n        this.validateAndEnforceOptions();\n        this._colDefaults.width = options.defaultColumnWidth;\n\n        adjustFrozenColumnCompat(columns, this._options);\n        this.setInitialCols(columns);\n\n        this._editController = {\n            \"commitCurrentEdit\": this.commitCurrentEdit.bind(this),\n            \"cancelCurrentEdit\": this.cancelCurrentEdit.bind(this)\n        };\n\n        if (typeof $ !== \"undefined\")\n            $(this._container).empty();\n        else\n            this._container.innerHTML = '';\n\n        this._container.style.overflow = \"hidden\";\n        this._container.style.outline = \"0\";\n        this._container.classList.add(this._uid);\n\n        if (this._options.useLegacyUI)\n            this._container.classList.add(\"ui-widget\");\n\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test(getComputedStyle(this._container).position)) {\n            this._container.style.position = \"relative\";\n        }\n\n        this._container.appendChild(this._focusSink1 = H('div', {\n            class: \"slick-focus-sink\",\n            hideFocus: '',\n            style: 'position:fixed;width:0!important;height:0!important;top:0;left:0;outline:0!important;',\n            tabIndex: '0'\n        }));\n\n        if (options.groupingPanel) {\n            this._container.appendChild(this._groupingPanel = H('div', {\n                class: \"slick-grouping-panel\",\n                style: \"overflow:hidden; position:relative;\" + (!options.showGroupingPanel ? \" display: none\" : \"\")\n            }));\n        }\n\n        const uisd = this._options.useLegacyUI ? ' ui-state-default' : '';\n\n        var spacerW = this.getCanvasWidth() + (this._scrollDims = getScrollBarDimensions()).width + 'px';\n\n        // -- PANE HEADER LEFT\n        this._paneHeaderL = H('div', { class: \"slick-pane slick-pane-header slick-pane-left\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-left' + uisd, style: !options.showColumnHeader && 'display: none' },\n                this._headerColsL = H('div', { class: 'slick-header-columns slick-header-columns-left', style: this._rtlS + ':-1000px' })));\n\n        // -- PANE HEADER RIGHT\n        this._paneHeaderR = H('div', { class: \"slick-pane slick-pane-header slick-pane-right\", tabIndex: '0' },\n            H('div', { class: 'slick-header slick-header-right' + uisd, style: !options.showColumnHeader && 'display: none' },\n                this._headerColsR = H('div', { class: 'slick-header-columns slick-header-columns-right', style: this._rtlS + ':-1000px' })));\n\n        // -- PANE TOP LEFT (headerrow left + top panel left + viewport top left + footer row right)\n        var headerRowL = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' },\n            this._headerRowColsL = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-left' }),\n            this._headerRowSpacerL = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        var topPanelLS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' },\n            this._topPanelL = H('div', { class: 'slick-top-panel', style: 'width: 10000px' }));\n\n        this._viewportTopL = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-left\", tabIndex: \"0\", hideFocus: '' },\n            this._canvasTopL = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-left\", tabIndex: \"0\", hideFocus: '' }));\n\n        var footerRowL = H('div', { class: 'slick-footerrow' + uisd, style: !options.showFooterRow && 'display: none' },\n            this._footerRowColsL = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-left' }),\n            this._footerRowSpacerL = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        this._paneTopL = H('div', { class: \"slick-pane slick-pane-top slick-pane-left\", tabIndex: \"0\" },\n            headerRowL, topPanelLS, this._viewportTopL, footerRowL);\n\n        // -- PANE TOP RIGHT (headerrow right + top panel right + viewport top right + footer row right)\n        var headerRowR = H('div', { class: 'slick-headerrow' + uisd, style: !options.showHeaderRow && 'display: none' },\n            this._headerRowColsR = H('div', { class: 'slick-headerrow-columns slick-headerrow-columns-right' }),\n            this._headerRowSpacerR = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        var topPanelRS = H('div', { class: 'slick-top-panel-scroller' + uisd, style: !options.showTopPanel && 'display: none' },\n            this._topPanelR = H('div', { class: 'slick-top-panel', style: 'width: 10000px' }))\n\n        this._viewportTopR = H('div', { class: \"slick-viewport slick-viewport-top slick-viewport-right\", tabIndex: \"0\", hideFocus: '' },\n            this._canvasTopR = H('div', { class: \"grid-canvas grid-canvas-top grid-canvas-right\", tabIndex: \"0\", hideFocus: '' }));\n\n        var footerRowR = H('div', { class: 'slick-footer-row' + uisd, style: !options.showFooterRow && 'display: none' },\n            this._footerRowColsR = H('div', { class: 'slick-footerrow-columns slick-footerrow-columns-right' }),\n            this._footerRowSpacerR = H('div', { style: 'display:block;height:1px;position:absolute;top:0;left:0;', width: spacerW }));\n\n        this._paneTopR = H('div', { class: \"slick-pane slick-pane-top slick-pane-right\", tabIndex: \"0\" },\n            headerRowR, topPanelRS, this._viewportTopR, footerRowR);\n\n        // -- PANE BOTTOM LEFT\n        this._paneBottomL = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-left\", tabIndex: \"0\" },\n            this._viewportBottomL = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-left\", tabIndex: \"0\", hideFocus: '' },\n                this._canvasBottomL = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-left\", tabIndex: \"0\", hideFocus: '' })));\n\n        this._paneBottomR = H('div', { class: \"slick-pane slick-pane-bottom slick-pane-right\", tabIndex: \"0\" },\n            this._viewportBottomR = H('div', { class: \"slick-viewport slick-viewport-bottom slick-viewport-right\", tabIndex: \"0\", hideFocus: '' }),\n            this._canvasBottomR = H('div', { class: \"grid-canvas grid-canvas-bottom grid-canvas-right\", tabIndex: \"0\", hideFocus: '' }));\n\n        this._container.append(\n            this._paneHeaderL,\n            this._paneHeaderR,\n            this._paneTopL,\n            this._paneTopR,\n            this._paneBottomL,\n            this._focusSink2 = this._focusSink1.cloneNode() as HTMLDivElement);\n\n        if (options.viewportClass)\n            this.getViewports().forEach(vp => vp.classList.add(options.viewportClass,));\n\n        if (!options.explicitInitialization) {\n            this.init();\n        }\n\n        this.bindToData();\n    }\n\n    init(): void {\n        if (this._initialized)\n            return;\n\n        this._initialized = true;\n\n        this.getViewportWidth();\n        this.getViewportHeight();\n\n        // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n        // calculate the diff so we can set consistent sizes\n        this.measureCellPaddingAndBorder();\n\n         // disable all text selection in header (including input and textarea)\n        disableSelection(this._headerColsL);\n        disableSelection(this._headerColsR);\n\n        var viewports = this.getViewports();\n\n        if (typeof $ !== \"undefined\" && !this._options.enableTextSelectionOnCells) {\n            // disable text selection in grid cells except in input and textarea elements\n            // (this is IE-specific, because selectstart event will only fire in IE)\n            $(viewports).on(\"selectstart.ui\", function () {\n                return $(this).is(\"input,textarea\");\n            });\n        }\n\n        this.adjustFrozenRowOption();\n        this.setPaneVisibility();\n        this.setScroller();\n        this.setOverflow();\n\n        this.updateViewColLeftRight();\n        this.createColumnHeaders();\n        this.createColumnFooters();\n        this.setupColumnSort();\n        this.createCssRules();\n        this.resizeCanvas();\n        this.bindAncestorScrollEvents();\n\n        this._container.addEventListener(\"resize\", this.resizeCanvas);\n\n        viewports.forEach(vp => vp.addEventListener(\"scroll\", this.handleScroll.bind(this)));\n\n        if (typeof $ !== \"undefined\" && ($.fn as any).mousewheel && (this.hasFrozenColumns() || this._hasFrozenRows)) {\n            $(viewports).on(\"mousewheel\", this.handleMouseWheel.bind(this));\n        }\n\n        [this._headerColsL.parentElement, this._headerColsR.parentElement].forEach(hs => {\n            hs.addEventListener(\"contextmenu\", this.handleHeaderContextMenu.bind(this));\n            hs.addEventListener(\"click\", this.handleHeaderClick.bind(this));\n            hs.addEventListener(\"mouseenter\", e => (e.target as HTMLElement).closest(\".slick-header-column\") &&\n                this.handleHeaderMouseEnter(e));\n            hs.addEventListener(\"mouseleave\", e => (e.target as HTMLElement).closest(\".slick-header-column\") &&\n                this.handleHeaderMouseLeave(e));\n        });\n\n        this._headerRowColsL.parentElement.addEventListener('scroll', this.handleHeaderRowScroll);\n        this._headerRowColsR.parentElement.addEventListener('scroll', this.handleHeaderRowScroll);\n\n        this._footerRowColsL.parentElement.addEventListener('scroll', this.handleFooterRowScroll);\n        this._footerRowColsR.parentElement.addEventListener('scroll', this.handleFooterRowScroll);\n\n        [this._focusSink1, this._focusSink2].forEach(fs => fs.addEventListener(\"keydown\", this.handleKeyDown.bind(this)));\n\n        var canvases = Array.from(this.getCanvases());\n        canvases.forEach(canvas => {\n            canvas.addEventListener(\"keydown\", this.handleKeyDown.bind(this))\n            canvas.addEventListener(\"click\", this.handleClick.bind(this))\n            canvas.addEventListener(\"dblclick\", this.handleDblClick.bind(this))\n            canvas.addEventListener(\"contextmenu\", this.handleContextMenu.bind(this));\n        });\n\n        if (typeof $ !== \"undefined\" && ($.fn as any).drag) {\n            $(canvases)\n                .on(\"draginit\", this.handleDragInit.bind(this))\n                .on(\"dragstart\", { distance: 3 }, this.handleDragStart.bind(this))\n                .on(\"drag\", this.handleDrag.bind(this))\n                .on(\"dragend\", this.handleDragEnd.bind(this))\n        }\n\n        canvases.forEach(canvas => {\n            canvas.addEventListener(\"mouseenter\", e => (e.target as HTMLElement).closest(\".slick-cell\") &&\n                this.handleMouseEnter(e));\n            canvas.addEventListener(\"mouseleave\", e => (e.target as HTMLElement).closest(\".slick-cell\") &&\n                this.handleMouseLeave(e));\n        });\n\n        // Work around http://crbug.com/312427.\n        if (navigator.userAgent.toLowerCase().match(/webkit/) &&\n            navigator.userAgent.toLowerCase().match(/macintosh/) &&\n            typeof $ !== \"undefined\") {\n            $(canvases).on(\"mousewheel\", this.handleMouseWheel.bind(this));\n        }\n    }\n\n    private hasFrozenColumns(): boolean {\n        return this._frozenCols > 0;\n    }\n\n    registerPlugin(plugin: IPlugin): void {\n        this._plugins.unshift(plugin);\n        plugin.init(this);\n    }\n\n    unregisterPlugin(plugin: IPlugin): void {\n        for (var i = this._plugins.length; i >= 0; i--) {\n            if (this._plugins[i] === plugin) {\n                if (this._plugins[i].destroy) {\n                    this._plugins[i].destroy();\n                }\n                this._plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    getPluginByName(name: string): IPlugin {\n        for (var i = this._plugins.length - 1; i >= 0; i--) {\n            if (this._plugins[i].pluginName === name)\n                return this._plugins[i];\n        }\n    }\n\n    setSelectionModel(model: SelectionModel): void {\n        if (this._selectionModel) {\n            this._selectionModel.onSelectedRangesChanged.unsubscribe(this.handleSelectedRangesChanged);\n            if (this._selectionModel.destroy) {\n                this._selectionModel.destroy();\n            }\n        }\n\n        this._selectionModel = model;\n        if (this._selectionModel) {\n            this._selectionModel.init(this);\n            this._selectionModel.onSelectedRangesChanged.subscribe(this.handleSelectedRangesChanged);\n        }\n    }\n\n    getScrollBarDimensions(): { width: number; height: number; } {\n        return this._scrollDims;\n    }\n\n    getDisplayedScrollbarDimensions(): { width: number; height: number; } {\n        return {\n            width: this._viewportHasVScroll ? this._scrollDims.width : 0,\n            height: this._viewportHasHScroll ? this._scrollDims.height : 0\n        };\n    }\n\n    getAbsoluteColumnMinWidth() {\n        return this._absoluteColMinWidth;\n    }\n\n    getSelectionModel(): SelectionModel {\n        return this._selectionModel;\n    }\n\n    getCanvasNode(): HTMLDivElement {\n        return this._canvasTopL;\n    }\n\n    getCanvases(): JQuery {\n        var canvases = [this._canvasTopL, this._canvasTopR, this._canvasBottomL, this._canvasBottomR];\n        return typeof $ !== \"undefined\" ? $(canvases) : canvases as any;\n    }\n\n    getActiveCanvasNode(e?: IEventData): HTMLElement {\n        this.setActiveCanvasNode(e);\n        return this._activeCanvasNode;\n    }\n\n    setActiveCanvasNode(e?: IEventData): void {\n        if (e) {\n            this._activeCanvasNode = (e.target as HTMLElement).closest('.grid-canvas');\n        }\n    }\n\n    getViewportNode(): HTMLDivElement {\n        return this._viewportTopL;\n    }\n\n    private getViewports(): HTMLDivElement[] {\n        return [this._viewportTopL, this._viewportTopR, this._viewportBottomL, this._viewportBottomR];\n    }\n\n    getActiveViewportNode(e?: IEventData): HTMLElement {\n        this.setActiveViewportNode(e);\n        return this._activeViewportNode;\n    }\n\n    setActiveViewportNode(e?: IEventData) {\n        if (e) {\n            this._activeViewportNode = (e.target as HTMLElement).closest('.slick-viewport');\n        }\n    }\n\n    private calcHeaderWidths(): void {\n        this._headersWidthL = this._headersWidthR = 0;\n\n        var scrollWidth = this._scrollDims.width;\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0, ii = cols.length; i < ii; i++) {\n            var width = cols[i].width;\n\n            if (frozenCols > 0 && i >= frozenCols) {\n                this._headersWidthR += width;\n            } else {\n                this._headersWidthL += width;\n            }\n        }\n\n        if (frozenCols > 0) {\n            this._headersWidthL = this._headersWidthL + 1000;\n\n            this._headersWidthR = Math.max(this._headersWidthR, this._viewportW) + this._headersWidthL;\n            this._headersWidthR += scrollWidth;\n        } else {\n            this._headersWidthL += scrollWidth;\n            this._headersWidthL = Math.max(this._headersWidthL, this._viewportW) + 1000;\n        }\n    }\n\n    private getCanvasWidth(): number {\n        var availableWidth = this._viewportHasVScroll ? this._viewportW - this._scrollDims.width : this._viewportW;\n\n        var cols = this._cols, i = cols.length, frozenCols = this._frozenCols;\n\n        this._canvasWidthL = this._canvasWidthR = 0;\n\n        while (i--) {\n            if (frozenCols > 0 && i >= frozenCols) {\n                this._canvasWidthR += cols[i].width;\n            } else {\n                this._canvasWidthL += cols[i].width;\n            }\n        }\n\n        var totalRowWidth = this._canvasWidthL + this._canvasWidthR;\n\n        return this._options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n    }\n\n    private updateCanvasWidth(forceColumnWidthsUpdate?: boolean): void {\n        var oldCanvasWidth = this._canvasWidth;\n        var oldCanvasWidthL = this._canvasWidthL;\n        var oldCanvasWidthR = this._canvasWidthR;\n        var widthChanged;\n        this._canvasWidth = this.getCanvasWidth();\n        var scrollWidth = this._scrollDims.width;\n\n        widthChanged = this._canvasWidth !== oldCanvasWidth || this._canvasWidthL !== oldCanvasWidthL || this._canvasWidthR !== oldCanvasWidthR;\n\n        if (widthChanged || this.hasFrozenColumns() || this._hasFrozenRows) {\n            var canvasWidthL = this._canvasWidthL + 'px'\n            var canvasWidthR = this._canvasWidthR + 'px';\n\n            this._canvasTopL.style.width = canvasWidthL;\n\n            this.calcHeaderWidths();\n            this._headerColsL.style.width = this._headersWidthL + 'px';\n            this._headerColsR.style.width = this._headersWidthR + 'px';\n\n            if (this._groupingPanel) {\n                this._groupingPanel.style.width = this._canvasWidth + 'px';\n            }\n\n            if (this.hasFrozenColumns()) {\n                var viewportMinus = (this._viewportW - this._canvasWidthL) + 'px';\n\n                this._canvasTopR.style.width = canvasWidthR;\n                this._paneHeaderL.style.width = canvasWidthL;\n                this._paneHeaderR.style[this._rtlS] = canvasWidthL;\n                this._paneHeaderR.style.width = viewportMinus;\n\n                this._paneTopL.style.width = canvasWidthL;\n                this._paneTopR.style[this._rtlS] = canvasWidthL;\n                this._paneTopR.style.width = viewportMinus;\n\n                this._headerRowColsL.style.width = canvasWidthL;\n                this._headerRowColsL.parentElement.style.width = canvasWidthL;\n                this._headerRowColsR.style.width = canvasWidthR;\n                this._headerRowColsR.parentElement.style.width = viewportMinus;\n\n                this._footerRowColsL.style.width = canvasWidthL;\n                this._footerRowColsL.parentElement.style.width = canvasWidthL;\n                this._footerRowColsR.style.width = canvasWidthR;\n                this._footerRowColsR.parentElement.style.width = viewportMinus;\n\n                this._viewportTopL.style.width = canvasWidthL;\n                this._viewportTopR.style.width = viewportMinus;\n\n                if (this._hasFrozenRows) {\n                    this._paneBottomL.style.width = canvasWidthL;\n                    this._paneBottomR.style[this._rtlS] = canvasWidthL;\n\n                    this._viewportBottomL.style.width = canvasWidthL;\n                    this._viewportBottomR.style.width = viewportMinus;\n\n                    this._canvasBottomL.style.width = canvasWidthL;\n                    this._canvasBottomR.style.width = canvasWidthR;\n                }\n            } else {\n                this._paneHeaderL.style.width = '100%';\n                this._paneTopL.style.width = '100%';\n                this._headerRowColsL.parentElement.style.width = '100%';\n                this._headerRowColsL.style.width = this._canvasWidth + 'px';\n                this._footerRowColsL.parentElement.style.width = '100%';\n                this._footerRowColsL.style.width = this._canvasWidth + 'px';\n                this._viewportTopL.style.width = '100%';\n\n                if (this._hasFrozenRows) {\n                    this._viewportBottomL.style.width = '100%';\n                    this._canvasBottomL.style.width = canvasWidthL;\n                }\n            }\n\n            this._viewportHasHScroll = (this._canvasWidth > this._viewportW - scrollWidth);\n        }\n\n        var w = (this._canvasWidth + (this._viewportHasVScroll ? scrollWidth : 0)) + 'px';\n\n        this._headerRowSpacerL.style.width = w;\n        this._headerRowSpacerR.style.width = w;\n        this._footerRowSpacerL.style.width = w;\n        this._footerRowSpacerR.style.width = w;\n\n        if (widthChanged || forceColumnWidthsUpdate) {\n            this.applyColumnWidths();\n        }\n    }\n\n    private bindAncestorScrollEvents(): void {\n        var elem: HTMLElement = (this._hasFrozenRows && !this._options.frozenBottom) ? this._canvasBottomL : this._canvasTopL;\n        while ((elem = elem.parentNode as HTMLElement) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == this._viewportTopL || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                elem.addEventListener('scroll', this.handleActiveCellPositionChange);\n                this._boundAncestorScroll.push(elem);\n            }\n        }\n    }\n\n    private unbindAncestorScrollEvents(): void {\n        if (this._boundAncestorScroll) {\n            for (var x of this._boundAncestorScroll)\n                x.removeEventListener('scroll', this.handleActiveCellPositionChange);\n        }\n        this._boundAncestorScroll = [];\n    }\n\n    updateColumnHeader(columnId: string, title?: string, toolTip?: string): void {\n        if (!this._initialized) { return; }\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n\n        var columnDef = this._cols[idx];\n        var header = ((this._frozenCols > 0 && idx >= this._frozenCols) ? this._headerColsR.children.item(idx - this._frozenCols) : this._headerColsL.children.item(idx)) as HTMLElement;\n        if (!header)\n            return;\n\n        if (title !== undefined) {\n            columnDef.name = title;\n        }\n        if (toolTip !== undefined) {\n            columnDef.toolTip = toolTip;\n        }\n\n        this.trigger(this.onBeforeHeaderCellDestroy, {\n            node: header,\n            column: columnDef\n        });\n\n        header.title = toolTip || \"\";\n        var child = header.firstElementChild;\n        child && (child.innerHTML = title);\n\n        this.trigger(this.onHeaderCellRendered, {\n            node: header,\n            column: columnDef\n        });\n    }\n\n    getHeader(): HTMLDivElement {\n        return this._headerColsL;\n    }\n\n    getHeaderColumn(columnIdOrIdx: string | number): HTMLDivElement {\n        var idx = (typeof columnIdOrIdx === \"number\" ? columnIdOrIdx : this.getColumnIndex(columnIdOrIdx));\n        if (idx == null)\n            return null;\n\n        return (this._frozenCols > 0 && idx >= this._frozenCols ? this._headerColsR.children.item(idx - this._frozenCols) : this._headerColsL.children.item(idx)) as HTMLDivElement;\n    }\n\n    getGroupingPanel(): HTMLDivElement {\n        return this._groupingPanel;\n    }\n\n    getHeaderRow(): HTMLDivElement {\n        return this._headerRowColsL;\n    }\n\n    getHeaderRowColumn(columnId: string): HTMLElement {\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null)\n            return;\n\n        var headerRowTarget: HTMLDivElement, frozenCols = this._frozenCols;\n\n        if (frozenCols <= 0 || idx < frozenCols) {\n            headerRowTarget = this._headerRowColsL;\n        }\n        else {\n            headerRowTarget = this._headerRowColsR;\n            idx -= frozenCols;\n        }\n\n        return headerRowTarget.childNodes.item(idx) as HTMLElement;\n    }\n\n    getFooterRow(): HTMLDivElement {\n        return this._footerRowColsL;\n    }\n\n    getFooterRowColumn(columnId: string): HTMLElement {\n        var idx = this.getColumnIndex(columnId);\n        if (idx == null)\n            return null;\n\n        var footerRowTarget: HTMLDivElement, frozenCols = this._frozenCols;\n\n        if (frozenCols <= 0 || idx < frozenCols) {\n            footerRowTarget = this._footerRowColsL;\n        }\n        else {\n            footerRowTarget = this._footerRowColsR;\n            idx -= frozenCols;\n        }\n\n        return footerRowTarget.childNodes.item(idx) as HTMLElement;\n    }\n\n    private createColumnFooters(): void {\n        [this._footerRowColsL, this._footerRowColsR].forEach(frc => frc.querySelectorAll(\".slick-footerrow-column\")\n            .forEach((el) => {\n                var columnDef = this.getColumnFromNode(el);\n                if (columnDef) {\n                    this.trigger(this.onBeforeFooterRowCellDestroy, {\n                        node: el as HTMLElement,\n                        column: columnDef\n                    });\n                }\n            }));\n\n        const _$ = typeof $ !== \"undefined\";\n\n        if (_$) {\n            $(this._footerRowColsL).empty();\n            $(this._footerRowColsR).empty();\n        }\n        else {\n            this._footerRowColsL.innerHTML = '';\n            this._footerRowColsR.innerHTML = '';\n        }\n\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var footerRowCell = H(\"div\", { class: \"slick-footerrow-column l\" + i + \" r\" + i + (this._options.useLegacyUI ? ' ui-state-default' : '') });\n            footerRowCell.dataset.c = i.toString();\n            _$ && $(footerRowCell).data(\"column\", m);\n\n            if (m.footerCssClass)\n                footerRowCell.classList.add(m.footerCssClass);\n            else if (m.cssClass)\n                footerRowCell.classList.add(m.cssClass);\n\n            (frozenCols > 0 && i >= frozenCols ? this._footerRowColsR : this._footerRowColsL).appendChild(footerRowCell);\n\n            this.trigger(this.onFooterRowCellRendered, {\n                node: footerRowCell,\n                column: m\n            });\n        }\n    }\n\n    private formatGroupTotal(total: GroupTotals, columnDef: Column<TItem>): any {\n        if (columnDef.formatter != null) {\n            var item = new NonDataRow();\n            item[columnDef.field] = total;\n            try {\n                return columnDef.formatter(-1, -1, total, columnDef, item as any);\n            }\n            catch (e) {\n            }\n        }\n\n        //@ts-ignore\n        if (typeof total == \"number\" && typeof Q !== \"undefined\" && Q.formatNumber) {\n            if ((columnDef as any).sourceItem && (columnDef as any).sourceItem.displayFormat) {\n                //@ts-ignore\n                return Q.formatNumber(total, columnDef.sourceItem.displayFormat);\n            }\n            else\n                //@ts-ignore\n                return Q.formatNumber(total, \"#,##0.##\");\n        }\n        else\n            return htmlEncode(total?.toString());\n    }\n\n    private groupTotalText(totals: GroupTotals, columnDef: Column<TItem>, key: string): string {\n        var ltKey = (key.substring(0, 1).toUpperCase() + key.substring(1));\n        //@ts-ignore\n        var text = (typeof Q !== \"undefined\" && Q.tryGetText && Q.tryGetText(ltKey)) || ltKey;\n\n        var total = totals[key][columnDef.field];\n        total = this.formatGroupTotal(total, columnDef);\n\n        return \"<span class='aggregate agg-\" + key + \"'  title='\" + text + \"'>\" +\n            total +\n            \"</span>\";\n    }\n\n    private groupTotalsFormatter(totals: GroupTotals, columnDef: Column<TItem>): string {\n        if (!totals || !columnDef)\n            return \"\";\n\n        var text: string = null;\n        var self = this;\n\n        [\"sum\", \"avg\", \"min\", \"max\", \"cnt\"].forEach(function (key) {\n            if (text == null && totals[key] && totals[key][columnDef.field] != null) {\n                text = self.groupTotalText(totals, columnDef, key);\n                return false;\n            }\n        });\n\n        return text || \"\";\n    }\n\n    private createColumnHeaders(): void {\n        [this._headerColsL, this._headerColsR].forEach(hc => hc.querySelectorAll(\".slick-header-column\")\n            .forEach((el) => {\n                var columnDef = this.getColumnFromNode(el);\n                if (columnDef) {\n                    this.trigger(this.onBeforeHeaderCellDestroy, {\n                        node: el as HTMLElement,\n                        column: columnDef\n                    });\n                }\n            }));\n\n        const _$ = typeof $ !== \"undefined\";\n        if (_$) {\n            $(this._headerColsL).empty();\n            $(this._headerColsR).empty();\n        }\n        else {\n            this._headerColsL.innerHTML = '';\n            this._headerColsR.innerHTML = '';\n        }\n\n        this.calcHeaderWidths();\n\n        this._headerColsL.style.width = this._headersWidthL + 'px';\n        this._headerColsR.style.width = this._headersWidthR + 'px';\n\n        var cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var headerTarget = frozenCols > 0 && i >= frozenCols ? this._headerColsR : this._headerColsL;\n\n            var name = document.createElement(\"span\");\n            name.className = \"slick-column-name\";\n            if (m.nameIsHtml)\n                name.innerHTML = m.name;\n            else\n                name.innerText = m.name;\n            var header = H(\"div\", {\n                class: \"slick-header-column\" + (this._options.useLegacyUI ? \" ui-state-default \" : \"\"),\n                id: \"\" + this._uid + m.id,\n                title: m.toolTip || \"\",\n                style: \"width: \" + (m.width - this._headerColumnWidthDiff) + \"px\"\n            }, name);\n\n            header.dataset.c = i.toString();\n            _$ && $(header).data(\"column\", m);\n\n            m.headerCssClass && header.classList.add(m.headerCssClass);\n\n            i < frozenCols && header.classList.add(\"frozen\");\n\n            headerTarget.appendChild(header);\n\n            if ((this._options.enableColumnReorder || m.sortable) && this._options.useLegacyUI) {\n                header.addEventListener('mouseenter', addUiStateHover);\n                header.addEventListener('mouseleave', removeUiStateHover);\n            }\n\n            if (m.sortable) {\n                header.classList.add(\"slick-header-sortable\");\n                header.appendChild(H(\"span\", { class: \"slick-sort-indicator\" }));\n            }\n\n            this.trigger(this.onHeaderCellRendered, {\n                node: header,\n                column: m\n            });\n\n            if (this._options.showHeaderRow) {\n                var headerRowTarget = frozenCols > 0 && i >= frozenCols ? this._headerRowColsR : this._headerRowColsL;\n\n                var headerRowCell = H(\"div\", { class: \"slick-headerrow-column l\" + i + \" r\" + i + (this._options.useLegacyUI ? \" ui-state-default\" : \"\") });\n                headerRowCell.dataset.c = i.toString();\n                _$ && $(headerRowCell).data(\"column\", m);\n                headerRowTarget.appendChild(headerRowCell);\n\n                this.trigger(this.onHeaderRowCellRendered, {\n                    node: headerRowCell,\n                    column: m\n                });\n            }\n        }\n\n        this.setSortColumns(this._sortColumns);\n        this.setupColumnResize();\n        if (this._options.enableColumnReorder)\n            this.setupColumnReorder();\n    }\n\n    private setupColumnSort(): void {\n        [this._headerColsL, this._headerColsR].forEach(el => el.addEventListener(\"click\", e => {\n\n            var tgt = e.target as HTMLElement;\n            if (tgt.classList.contains(\"slick-resizable-handle\")) {\n                return;\n            }\n\n            var colNode = tgt.closest(\".slick-header-column\");\n            if (!colNode) {\n                return;\n            }\n\n            var column = this.getColumnFromNode(colNode);\n            if (column.sortable) {\n                if (!this.getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n\n                var sortOpts = null;\n                var i = 0;\n                for (; i < this._sortColumns.length; i++) {\n                    if (this._sortColumns[i].columnId == column.id) {\n                        sortOpts = this._sortColumns[i];\n                        sortOpts.sortAsc = !sortOpts.sortAsc;\n                        break;\n                    }\n                }\n\n                if (e.metaKey && this._options.multiColumnSort) {\n                    if (sortOpts) {\n                        this._sortColumns.splice(i, 1);\n                    }\n                }\n                else {\n                    if ((!e.shiftKey && !e.metaKey) || !this._options.multiColumnSort) {\n                        this._sortColumns = [];\n                    }\n\n                    if (!sortOpts) {\n                        sortOpts = { columnId: column.id, sortAsc: column.defaultSortAsc };\n                        this._sortColumns.push(sortOpts);\n                    } else if (this._sortColumns.length == 0) {\n                        this._sortColumns.push(sortOpts);\n                    }\n                }\n\n                this.setSortColumns(this._sortColumns);\n\n                if (!this._options.multiColumnSort) {\n                    this.trigger(this.onSort, {\n                        multiColumnSort: false,\n                        sortCol: column,\n                        sortAsc: sortOpts.sortAsc\n                    }, e);\n                } else {\n                    var cols = this._initCols;\n                    this.trigger(this.onSort, {\n                        multiColumnSort: true,\n                        sortCols: this._sortColumns.map(col => ({ sortCol: cols[this.getInitialColumnIndex(col.columnId)], sortAsc: col.sortAsc }))\n                    }, e);\n                }\n            }\n        }));\n    }\n\n    private setupColumnReorder(): void {\n        ($([this._headerColsL, this._headerColsR]).filter(\":ui-sortable\") as any).sortable(\"destroy\");\n        var columnScrollTimer: number = null;\n\n        var scrollColumnsRight = () => {\n            this._scrollContainerX.scrollLeft = this._scrollContainerX.scrollLeft + 10;\n        }\n\n        var scrollColumnsLeft = () => {\n            this._scrollContainerX.scrollLeft = this._scrollContainerX.scrollLeft - 10;\n        }\n\n        var canDragScroll: boolean;\n\n        var hasGrouping = this._options.groupingPanel;\n        ($([this._headerColsL, this._headerColsR]) as any).sortable({\n            containment: hasGrouping ? undefined : \"parent\",\n            distance: 3,\n            axis: hasGrouping ? undefined : \"x\",\n            cursor: \"default\",\n            tolerance: \"intersection\",\n            helper: \"clone\",\n            placeholder: \"slick-sortable-placeholder\" + (this._options.useLegacyUI ? \" ui-state-default\" : \"\") + \" slick-header-column\",\n            forcePlaceholderSize: hasGrouping ? true : undefined,\n            appendTo: hasGrouping ? \"body\" : undefined,\n            start: (_: any, ui: any) => {\n                ui.placeholder.width(ui.helper.outerWidth() - this._headerColumnWidthDiff);\n                canDragScroll = !this.hasFrozenColumns() ||\n                    (ui.placeholder.offset()[this._rtlS] + Math.round(ui.placeholder.width())) > $(this._scrollContainerX).offset()[this._rtlS];\n                $(ui.helper).addClass(\"slick-header-column-active\");\n            },\n            beforeStop: (_: any, ui: any) => {\n                $(ui.helper).removeClass(\"slick-header-column-active\");\n                if (hasGrouping) {\n                    var $headerDraggableGroupBy = $(this.getGroupingPanel());\n                    var hasDroppedColumn = $headerDraggableGroupBy\n                        .find(\".slick-dropped-grouping\").length;\n                    if (hasDroppedColumn > 0) {\n                        $headerDraggableGroupBy.find(\".slick-dropped-placeholder\").hide();\n                        $headerDraggableGroupBy.find(\".slick-dropped-grouping\").show();\n                    }\n                }\n            },\n            sort: (e: JQueryEventObject) => {\n                if (canDragScroll && (e.originalEvent as any).pageX > this._container.clientWidth) {\n                    if (!(columnScrollTimer)) {\n                        columnScrollTimer = setInterval(\n                            scrollColumnsRight, 100);\n                    }\n                } else if (canDragScroll && (e.originalEvent as any).pageX < $(this._scrollContainerX).offset().left) {\n                    if (!(columnScrollTimer)) {\n                        columnScrollTimer = setInterval(\n                            scrollColumnsLeft, 100);\n                    }\n                } else {\n                    clearInterval(columnScrollTimer);\n                    columnScrollTimer = null;\n                }\n            },\n            stop: (e: any) => {\n                var cancel = false;\n                clearInterval(columnScrollTimer);\n                columnScrollTimer = null;\n\n                if (cancel || !this.getEditorLock().commitCurrentEdit()) {\n                    ($(e.target) as any).sortable(\"cancel\");\n                    return;\n                }\n\n                ;\n                var reorderedCols = sortToDesiredOrderAndKeepRest(this._initCols,\n                    (this._headerColsL as any).sortable(\"toArray\").map((x: string) => x.substring(this._uid.length)));\n\n                reorderedCols = sortToDesiredOrderAndKeepRest(reorderedCols,\n                    (this._headerColsR as any).sortable(\"toArray\").map((x: string) => x.substring(this._uid.length)));\n\n                this.setColumns(reorderedCols);\n                this.trigger(this.onColumnsReordered, {});\n                e.stopPropagation();\n                this.setupColumnResize();\n            }\n        });\n    }\n\n    private setupColumnResize(): void {\n\n        if (typeof $ === \"undefined\" || !$.fn || !($.fn as any).drag)\n            return;\n\n        var $col: JQuery, j: number, k: number, c: Column<TItem>, pageX: number, columnElements: JQuery, minPageX: number, maxPageX: number, firstResizable: number, lastResizable: number, cols = this._cols;\n        columnElements = $([this._headerColsL, this._headerColsR]).children();\n        columnElements.find(\".slick-resizable-handle\").remove();\n        columnElements.each((i) => {\n            if (cols[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n        if (firstResizable === undefined) {\n            return;\n        }\n        columnElements.each((i, e) => {\n            if (i < firstResizable || (this._options.forceFitColumns && i >= lastResizable)) {\n                return;\n            }\n            $col = $(e);\n            $(\"<div class='slick-resizable-handle' />\")\n                .appendTo(e)\n                .on(\"dragstart\", (e, dd) => {\n                    if (!this.getEditorLock().commitCurrentEdit()) {\n                        return false;\n                    }\n                    pageX = e.pageX;\n                    $(e.target).parent().addClass(\"slick-header-column-active\");\n                    var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                    // lock each column's width option to current width\n                    columnElements.each((i, e) => {\n                        cols[i].previousWidth = $(e).outerWidth();\n                    });\n                    if (this._options.forceFitColumns) {\n                        shrinkLeewayOnRight = 0;\n                        stretchLeewayOnRight = 0;\n                        // colums on right affect maxPageX/minPageX\n                        for (j = i + 1; j < columnElements.length; j++) {\n                            c = cols[j];\n                            if (c.resizable) {\n                                if (stretchLeewayOnRight != null) {\n                                    if (c.maxWidth) {\n                                        stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                    } else {\n                                        stretchLeewayOnRight = null;\n                                    }\n                                }\n                                shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                            }\n                        }\n                    }\n                    var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                    for (j = 0; j <= i; j++) {\n                        // columns on left only affect minPageX\n                        c = cols[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnLeft != null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnLeft = null;\n                                }\n                            }\n                            shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                        }\n                    }\n                    if (shrinkLeewayOnRight === null) {\n                        shrinkLeewayOnRight = 100000;\n                    }\n                    if (shrinkLeewayOnLeft === null) {\n                        shrinkLeewayOnLeft = 100000;\n                    }\n                    if (stretchLeewayOnRight === null) {\n                        stretchLeewayOnRight = 100000;\n                    }\n                    if (stretchLeewayOnLeft === null) {\n                        stretchLeewayOnLeft = 100000;\n                    }\n                    maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                    minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n                })\n                .on(\"drag\", (e, dd) => {\n                    var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n                    if (d < 0) { // shrink column\n                        x = d;\n\n                        var newCanvasWidthL = 0, newCanvasWidthR = 0;\n\n                        for (j = i; j >= 0; j--) {\n                            c = cols[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n\n                        var frozenCols = this._frozenCols;\n\n                        for (k = 0; k <= i; k++) {\n                            c = cols[k];\n\n                            if (frozenCols > 0 && k >= frozenCols) {\n                                newCanvasWidthR += c.width;\n                            } else {\n                                newCanvasWidthL += c.width;\n                            }\n                        }\n\n                        if (this._options.forceFitColumns) {\n                            x = -d;\n                            for (j = i + 1; j < columnElements.length; j++) {\n                                c = cols[j];\n                                if (c.resizable) {\n                                    if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                                        x -= c.maxWidth - c.previousWidth;\n                                        c.width = c.maxWidth;\n                                    } else {\n                                        c.width = c.previousWidth + x;\n                                        x = 0;\n                                    }\n\n                                    if (frozenCols > 0 && j >= frozenCols) {\n                                        newCanvasWidthR += c.width;\n                                    } else {\n                                        newCanvasWidthL += c.width;\n                                    }\n                                }\n                            }\n                        } else {\n                            for (j = i + 1; j < columnElements.length; j++) {\n                                c = cols[j];\n\n                                if (frozenCols >= 0 && j >= frozenCols) {\n                                    newCanvasWidthR += c.width;\n                                } else {\n                                    newCanvasWidthL += c.width;\n                                }\n                            }\n                        }\n                    } else { // stretch column\n                        x = d;\n\n                        var newCanvasWidthL = 0, newCanvasWidthR = 0;\n\n                        for (j = i; j >= 0; j--) {\n                            c = cols[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && (c.maxWidth - c.previousWidth < x)) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n\n                        for (k = 0; k <= i; k++) {\n                            c = cols[k];\n\n                            if (frozenCols > 0 && k >= frozenCols) {\n                                newCanvasWidthR += c.width;\n                            } else {\n                                newCanvasWidthL += c.width;\n                            }\n                        }\n\n                        if (this._options.forceFitColumns) {\n                            x = -d;\n                            for (j = i + 1; j < columnElements.length; j++) {\n                                c = cols[j];\n                                if (c.resizable) {\n                                    actualMinWidth = Math.max(c.minWidth || 0, this._absoluteColMinWidth);\n                                    if (x && c.previousWidth + x < actualMinWidth) {\n                                        x += c.previousWidth - actualMinWidth;\n                                        c.width = actualMinWidth;\n                                    } else {\n                                        c.width = c.previousWidth + x;\n                                        x = 0;\n                                    }\n\n                                    if (frozenCols && j >= frozenCols) {\n                                        newCanvasWidthR += c.width;\n                                    } else {\n                                        newCanvasWidthL += c.width;\n                                    }\n                                }\n                            }\n                        } else {\n                            for (j = i + 1; j < columnElements.length; j++) {\n                                c = cols[j];\n\n                                if (frozenCols > 0 && j >= frozenCols) {\n                                    newCanvasWidthR += c.width;\n                                } else {\n                                    newCanvasWidthL += c.width;\n                                }\n                            }\n                        }\n                    }\n\n                    if (this.hasFrozenColumns() && newCanvasWidthL != this._canvasWidthL) {\n                        this._headerColsL.style.width = newCanvasWidthL + 1000 + 'px';\n                        this._paneHeaderR.style[this._rtlS] = newCanvasWidthL + 'px';\n                    }\n\n                    this.applyColumnHeaderWidths();\n                    if (this._options.syncColumnCellResize) {\n                        this.applyColumnWidths();\n                    }\n                })\n                .on(\"dragend\", (e: any) => {\n                    var newWidth;\n                    $(e.target).parent().removeClass(\"slick-header-column-active\");\n                    for (j = 0; j < columnElements.length; j++) {\n                        c = cols[j];\n                        newWidth = $(columnElements[j]).outerWidth();\n\n                        if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                            this.invalidateAllRows();\n                        }\n                    }\n                    this.updateCanvasWidth(true);\n                    this.render();\n                    this.trigger(this.onColumnsResized);\n                });\n        });\n    }\n\n    private getVBoxDelta(el: HTMLElement): number {\n        var style = getComputedStyle(el);\n        if (el.style.boxSizing == 'border-box')\n            return 0;\n\n        var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n        var delta = 0;\n        p.forEach(val => delta += parseFloat(style.getPropertyValue(val)) || 0);\n        return delta;\n    }\n\n    private adjustFrozenRowOption(): void {\n        this._options.frozenRow = (this._options.frozenRow >= 0\n            && this._options.frozenRow < this._numVisibleRows\n        )\n            ? this._options.frozenRow\n            : -1;\n\n        if (this._options.frozenRow > -1) {\n            this._hasFrozenRows = true;\n            this._frozenRowsHeight = (this._options.frozenRow) * this._options.rowHeight;\n\n            var dataLength = this.getDataLength() || this._data.length;\n\n            this._actualFrozenRow = (this._options.frozenBottom)\n                ? (dataLength - this._options.frozenRow)\n                : this._options.frozenRow;\n        } else {\n            this._hasFrozenRows = false;\n        }\n    }\n\n    private setPaneVisibility(): void {\n        this._paneHeaderR.style.display = this._paneTopR.style.display = this._hasFrozenRows ? '' : 'none';\n        this._paneBottomL.style.display = this._hasFrozenRows ? '' : 'none';\n        this._paneBottomR.style.display = this._hasFrozenRows && this.hasFrozenColumns() ? '' : 'none';\n    }\n\n    private setOverflow(): void {\n\n        var frozenRows = this._hasFrozenRows;\n        var frozenCols = this.hasFrozenColumns();\n        var alwaysHS = this._options.alwaysAllowHorizontalScroll;\n        var alwaysVS = this._options.alwaysShowVerticalScroll;\n\n        this._viewportTopL.style.overflowX = this._viewportTopR.style.overflowX = (frozenRows && !alwaysHS) ? 'hidden' : (frozenCols ? 'scroll' : 'auto');\n        this._viewportTopL.style.overflowY = this._viewportBottomL.style.overflowY = (!frozenCols && alwaysVS) ? 'scroll' : (frozenCols ? 'hidden' : (frozenRows ? 'scroll' : 'auto'));\n        this._viewportTopR.style.overflowY = (alwaysVS || frozenRows) ? 'scroll' : 'auto';\n        this._viewportBottomL.style.overflowX = this._viewportBottomR.style.overflowX = (frozenCols && !alwaysHS) ? 'scroll' : 'auto';\n        this._viewportBottomR.style.overflowY = (alwaysVS) ? 'scroll' : 'auto';\n\n        if (this._options.viewportClass)\n            this.getViewports().forEach(vp => vp.classList.add(this._options.viewportClass));\n    }\n\n    private setScroller(): void {\n        if (this.hasFrozenColumns()) {\n            if (this._hasFrozenRows) {\n                if (this._options.frozenBottom) {\n                    this._scrollContainerX = this._viewportBottomR;\n                    this._scrollContainerY = this._viewportTopR;\n                } else {\n                    this._scrollContainerX = this._scrollContainerY = this._viewportBottomR;\n                }\n            } else {\n                this._scrollContainerX = this._scrollContainerY = this._viewportTopR;\n            }\n        } else {\n            if (this._hasFrozenRows) {\n                if (this._options.frozenBottom) {\n                    this._scrollContainerX = this._viewportBottomL;\n                    this._scrollContainerY = this._viewportTopL;\n                } else {\n                    this._scrollContainerX = this._scrollContainerY = this._viewportBottomL;\n                }\n            } else {\n                this._scrollContainerX = this._scrollContainerY = this._viewportTopL;\n            }\n        }\n    }\n\n    private measureCellPaddingAndBorder(): void {\n        const h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n        const v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n        var el = this._headerColsL.appendChild(H(\"div\", { class: \"slick-header-column\" + (this._options.useLegacyUI ? \" ui-state-default\" : \"\"), style: \"visibility:hidden\" }));\n        this._headerColumnWidthDiff = 0;\n        var cs = getComputedStyle(el);\n        if (cs.boxSizing != \"border-box\")\n            h.forEach(val => this._headerColumnWidthDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n        el.remove();\n\n        var r = this._canvasTopL.appendChild(H(\"div\", { class: \"slick-row\" },\n            el = H(\"div\", { class: \"slick-cell\", id: \"\", style: \"visibility: hidden\" })));\n        el.innerHTML = \"-\";\n        this._cellWidthDiff = this._cellHeightDiff = 0;\n        cs = getComputedStyle(el);\n        if (cs.boxSizing != \"border-box\") {\n            h.forEach(val => this._cellWidthDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n            v.forEach(val => this._cellHeightDiff += parseFloat(cs.getPropertyValue(val)) || 0);\n        }\n        r.remove();\n\n        this._absoluteColMinWidth = Math.max(this._headerColumnWidthDiff, this._cellWidthDiff);\n    }\n\n    private createCssRules() {\n        var el = this._styleNode = document.createElement('style');\n        el.dataset.uid = this._uid;\n        var rowHeight = (this._options.rowHeight - this._cellHeightDiff);\n        var rules = [\n            \".\" + this._uid + \" .slick-group-header-column { \" + this._rtlS + \": 1000px; }\",\n            \".\" + this._uid + \" .slick-header-column { \" + this._rtlS + \": 1000px; }\",\n            \".\" + this._uid + \" .slick-top-panel { height:\" + this._options.topPanelHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-grouping-panel { height:\" + this._options.groupingPanelHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-headerrow-columns { height:\" + this._options.headerRowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-cell { height:\" + rowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-row { height:\" + this._options.rowHeight + \"px; }\",\n            \".\" + this._uid + \" .slick-footerrow-columns { height:\" + this._options.footerRowHeight + \"px; }\"\n        ];\n\n        var cols = this._cols;\n        for (var i = 0; i < cols.length; i++) {\n            rules.push(\".\" + this._uid + \" .l\" + i + \" { }\");\n            rules.push(\".\" + this._uid + \" .r\" + i + \" { }\");\n        }\n\n        el.appendChild(document.createTextNode(rules.join(\" \")));\n        document.head.appendChild(el);\n    }\n\n    private getColumnCssRules(idx: number): { right: any; left: any; } {\n        if (!this._stylesheet) {\n            var stylesheetFromUid = document.querySelector(\"style[data-uid='\" + this._uid + \"']\") as any\n            if (stylesheetFromUid && stylesheetFromUid.sheet) {\n                this._stylesheet = stylesheetFromUid.sheet;\n            } else {\n                var sheets = document.styleSheets;\n                for (var i = 0; i < sheets.length; i++) {\n                    if ((sheets[i].ownerNode || (sheets[i] as any).owningElement) == this._styleNode) {\n                        this._stylesheet = sheets[i];\n                        break;\n                    }\n                }\n            }\n\n            if (!this._stylesheet) {\n                throw new Error(\"Cannot find stylesheet.\");\n            }\n\n            // find and cache column CSS rules\n            this._columnCssRulesL = [];\n            this._columnCssRulesR = [];\n            var cssRules = (this._stylesheet.cssRules || this._stylesheet.rules);\n            var matches, columnIdx;\n            for (var i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substring(2, matches[0].length), 10);\n                    this._columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substring(2, matches[0].length), 10);\n                    this._columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n\n        return this._rtl ? {\n            \"right\": this._columnCssRulesL[idx],\n            \"left\": this._columnCssRulesR[idx]\n        } : {\n            \"left\": this._columnCssRulesL[idx],\n            \"right\": this._columnCssRulesR[idx]\n        }\n    }\n\n    private removeCssRules() {\n        this._styleNode.remove();\n        this._stylesheet = null;\n    }\n\n    destroy() {\n        this.getEditorLock().cancelCurrentEdit();\n\n        this.trigger(this.onBeforeDestroy);\n\n        var i = this._plugins.length;\n        while (i--) {\n            this.unregisterPlugin(this._plugins[i]);\n        }\n\n        if (this._options.enableColumnReorder) {\n            ($([this._headerColsL, this._headerColsR]).filter(\":ui-sortable\") as any).sortable(\"destroy\");\n        }\n\n        this.unbindAncestorScrollEvents();\n        $(this._container).off(\".slickgrid\");\n        this.removeCssRules();\n\n        this.getCanvases().off(\"draginit dragstart dragend drag\");\n        $(this._container).empty().removeClass(this._uid);\n\n        for (var k in this) {\n            if (!Object.prototype.hasOwnProperty.call(this, k))\n                continue;\n            if (k.startsWith('on')) {\n                var ev: any = this[k];\n                if ((ev as Event)?.clear && (ev as Event)?.subscribe)\n                    (ev as Event)?.clear();\n            }\n            delete this[k];\n        }\n    }\n\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n\n    private trigger<TArgs extends ArgsGrid, TEventData extends IEventData = IEventData>(\n        evt: Event<TArgs, TEventData>, args?: TArgs, e?: TEventData) {\n        e = e || new EventData() as any;\n        args = args || {} as any;\n        args.grid = this;\n        return evt.notify(args, e, this);\n    }\n\n    getEditorLock(): EditorLock {\n        return this._options.editorLock;\n    }\n\n    getEditController(): EditController {\n        return this._editController;\n    }\n\n    getColumnIndex(id: string): number {\n        return this._colById[id];\n    }\n\n    getInitialColumnIndex(id: string): number {\n        return this._initColById[id];\n    }\n\n    autosizeColumns(): void {\n        var i, c,\n            widths = [],\n            shrinkLeeway = 0,\n            total = 0,\n            prevTotal,\n            availWidth = this._viewportHasVScroll ? this._viewportW - this._scrollDims.width : this._viewportW,\n            cols = this._cols;\n\n        for (i = 0; i < cols.length; i++) {\n            c = cols[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, this._absoluteColMinWidth);\n            }\n        }\n\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < cols.length && total > availWidth; i++) {\n                c = cols[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= this._absoluteColMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, this._absoluteColMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {  // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < cols.length && total < availWidth; i++) {\n                c = cols[i];\n                var currentWidth = widths[i];\n                var growSize;\n\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += (total <= availWidth ? growSize : 0);\n            }\n            if (prevTotal >= total) {  // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n\n        var reRender = false;\n        for (i = 0; i < cols.length; i++) {\n            if (cols[i].rerenderOnResize && cols[i].width != widths[i]) {\n                reRender = true;\n            }\n            cols[i].width = widths[i];\n        }\n\n        this.applyColumnHeaderWidths();\n        this.updateCanvasWidth(true);\n        if (reRender) {\n            this.invalidateAllRows();\n            this.render();\n        }\n    }\n\n    private applyColumnHeaderWidths(): void {\n        if (!this._initialized) { return; }\n        var h: HTMLElement, cols = this._cols, colsL = cols.length, frozenCols = this._frozenCols, headersL = this._headerColsL.children, headersR = this._headerColsR.children;\n        for (var i = 0, ii = headersL.length + headersR.length; i < ii && i < colsL; i++) {\n            h = (frozenCols && i >= frozenCols ? headersR : headersL).item(i) as HTMLElement;\n            h.style.width = cols[i].width + 'px';\n        }\n\n        this.updateViewColLeftRight();\n    }\n\n    private applyColumnWidths(): void {\n        var x = 0, w, rule, cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0; i < cols.length; i++) {\n            if (frozenCols == i)\n                x = 0;\n            w = cols[i].width;\n            rule = this.getColumnCssRules(i);\n            rule[this._rtlS].style[this._rtlS] = x + \"px\";\n            rule[this._rtlE].style[this._rtlE] = (((frozenCols > 0 && i >= frozenCols) ? this._canvasWidthR : this._canvasWidthL) - x - w) + \"px\";\n            x += w;\n        }\n    }\n\n    setSortColumn(columnId: string, ascending: boolean) {\n        this.setSortColumns([{ columnId: columnId, sortAsc: ascending }]);\n    }\n\n    setSortColumns(cols: ColumnSort[]) {\n        this._sortColumns = cols || [];\n\n        var headerColumnEls = Array.from(this._headerColsL.children).concat(Array.from(this._headerColsR.children));\n        headerColumnEls.forEach(hel => {\n            hel.classList.remove(\"slick-header-column-sorted\");\n            var si = hel.querySelector(\".slick-sort-indicator\");\n            si && si.classList.remove(\"slick-sort-indicator-asc\", \"slick-sort-indicator-desc\");\n        });\n\n        this._sortColumns.forEach(col => {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = this.getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                var header = headerColumnEls[columnIndex];\n                if (header) {\n                    header.classList.add(\"slick-header-column-sorted\");\n                    var si = header.querySelector(\".slick-sort-indicator\");\n                    si && si.classList.add(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n                }\n            }\n        });\n    }\n\n    getSortColumns(): ColumnSort[] {\n        return this._sortColumns;\n    }\n\n    private handleSelectedRangesChanged = (e: IEventData, ranges: Range[]): void => {\n        var previousSelectedRows = this._selectedRows.slice(0); // shallow copy previously selected rows for later comparison\n        this._selectedRows = [];\n        var hash = {}, cols = this._cols;\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {  // prevent duplicates\n                    this._selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (this.canCellBeSelected(j, k)) {\n                        hash[j][cols[k].id] = this._options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n\n        this.setCellCssStyles(this._options.selectedCellCssClass, hash);\n\n        if (!simpleArrayEquals(previousSelectedRows, this._selectedRows)) {\n            var caller = e && (e as any).detail && (e as any).detail.caller || 'click';\n            var newSelectedAdditions = this._selectedRows.filter(i => previousSelectedRows.indexOf(i) < 0);\n            var newSelectedDeletions = previousSelectedRows.filter(i => this._selectedRows.indexOf(i) < 0);\n\n            this.trigger(this.onSelectedRowsChanged, {\n                rows: this.getSelectedRows(),\n                previousSelectedRows: previousSelectedRows,\n                caller: caller,\n                changedSelectedRows: newSelectedAdditions,\n                changedUnselectedRows: newSelectedDeletions\n            }, e);\n        }\n\n        this._selectedRows = [];\n        var hash = {}, cols = this._cols;\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {  // prevent duplicates\n                    this._selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (this.canCellBeSelected(j, k)) {\n                        hash[j][cols[k].id] = this._options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n    }\n\n    getColumns(): Column<TItem>[] {\n        return this._cols;\n    }\n\n    getInitialColumns(): Column<TItem>[] {\n        return this._initCols;\n    }\n\n    private updateViewColLeftRight(): void {\n        this._colLeft = [];\n        this._colRight = [];\n        var x = 0, r: number, cols = this._cols, i: number, l: number = cols.length, frozenCols = this._frozenCols;\n        for (var i = 0; i < l; i++) {\n            if (frozenCols === i)\n                x = 0;\n            r = x + cols[i].width;\n            this._colLeft[i] = x;\n            this._colRight[i] = r;\n            x = r;\n        }\n    }\n\n    private setInitialCols(initCols: Column[]) {\n\n        var defs = this._colDefaults;\n        var initColById = {};\n        var frozenColumns: Column[] = [];\n        var viewCols: Column[] = [];\n        var viewColById: { [key: string]: number } = {};\n        var i: number, m: Column, k: string;\n        for (i = 0; i < initCols.length; i++) {\n            m = initCols[i];\n\n            for (k in defs) {\n                if (m[k] === undefined)\n                    m[k] = this._colDefaults[k];\n            }\n\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n\n            initColById[m.id] = i;\n\n            if (m.visible !== false) {\n                (m.frozen ? frozenColumns : viewCols).push(m);\n            }\n        }\n\n        this._frozenCols = frozenColumns.length;\n        if (frozenColumns.length > 0)\n            viewCols = frozenColumns.concat(viewCols);\n\n        for (i = 0; i < viewCols.length; i++) {\n            m = viewCols[i];\n            viewColById[m.id] = i;\n        }\n\n        this._initCols = initCols;\n        this._initColById = initColById;\n        this._cols = viewCols;\n        this._colById = viewColById;\n    }\n\n    setColumns(columns: Column<TItem>[]): void {\n        this.setInitialCols(columns);\n        this.updateViewColLeftRight();\n\n        if (this._initialized) {\n            this.setPaneVisibility();\n            this.setOverflow();\n\n            this.invalidateAllRows();\n            this.createColumnHeaders();\n            this.createColumnFooters();\n            this.updateFooterTotals();\n            this.removeCssRules();\n            this.createCssRules();\n            this.resizeCanvas();\n            this.updateCanvasWidth();\n            this.applyColumnWidths();\n            this.handleScroll();\n            this.getSelectionModel()?.refreshSelections();\n        }\n    }\n\n    getOptions(): GridOptions<TItem> {\n        return this._options;\n    }\n\n    setOptions(args: GridOptions<TItem>, suppressRender?: boolean, suppressColumnSet?: boolean, suppressSetOverflow?: boolean): void {\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n\n        this.makeActiveCellNormal();\n\n        if (args.showColumnHeader !== undefined) {\n            this.setColumnHeaderVisibility(args.showColumnHeader);\n        }\n\n        if (this._options.enableAddRow !== args.enableAddRow) {\n            this.invalidateRow(this.getDataLength());\n        }\n\n        this._options = $.extend(this._options, args);\n        this.validateAndEnforceOptions();\n        this.adjustFrozenRowOption();\n\n        this.getViewports().forEach(vp => vp.style.overflowY = this._options.autoHeight ? \"hidden\" : \"auto\");\n\n        if (!suppressSetOverflow) {\n            this.setOverflow();\n        }\n\n        if (args.columns && !suppressColumnSet) {\n            adjustFrozenColumnCompat(args.columns, this._options);\n            this.setColumns(args.columns ?? this._initCols);\n        }\n        else if (args.frozenColumn != null) {\n            adjustFrozenColumnCompat(this._initCols, this._options);\n            this.setColumns(this._initCols);\n        }\n\n        this.setScroller();\n        if (!suppressRender)\n            this.render();\n    }\n\n    private validateAndEnforceOptions(): void {\n        if (this._options.autoHeight) {\n            this._options.leaveSpaceForNewRows = false;\n        }\n    }\n\n    private viewOnRowCountChanged = () => {\n        this.updateRowCount();\n        this.render();\n    }\n\n    private viewOnRowsChanged = (_: any, args: { rows: number[] }): void => {\n        this.invalidateRows(args.rows);\n        this.render();\n        this.updateFooterTotals();\n    }\n\n    private viewOnDataChanged = (): void => {\n        this.invalidate();\n        this.render();\n    }\n\n    private bindToData(): void {\n        if (this._data) {\n            this._data.onRowCountChanged && this._data.onRowCountChanged.subscribe(this.viewOnRowCountChanged);\n            this._data.onRowsChanged && this._data.onRowsChanged.subscribe(this.viewOnRowsChanged);\n            this._data.onDataChanged && this._data.onDataChanged.subscribe(this.viewOnDataChanged);\n        }\n    }\n\n    private unbindFromData(): void {\n        if (this._data) {\n            this._data.onRowCountChanged && this._data.onRowCountChanged.unsubscribe(this.viewOnRowCountChanged);\n            this._data.onRowsChanged && this._data.onRowsChanged.unsubscribe(this.viewOnRowsChanged);\n            this._data.onDataChanged && this._data.onDataChanged.unsubscribe(this.viewOnDataChanged);\n        }\n    }\n\n    setData(newData: any, scrollToTop?: boolean) {\n        this.unbindFromData();\n        this._data = newData;\n        this.bindToData();\n        this.invalidateAllRows();\n        this.updateRowCount();\n        if (scrollToTop) {\n            this.scrollTo(0);\n        }\n    }\n\n    getData(): any {\n        return this._data;\n    }\n\n    getDataLength(): number {\n        if (this._data.getLength) {\n            return this._data.getLength();\n        } else {\n            return this._data.length;\n        }\n    }\n\n    private getDataLengthIncludingAddNew(): number {\n        return this.getDataLength() + (!this._options.enableAddRow ? 0 :\n            (!this._pagingActive || this._pagingIsLastPage ? 1 : 0));\n    }\n\n    getDataItem(i: number): TItem {\n        if (this._data.getItem) {\n            return this._data.getItem(i);\n        } else {\n            return this._data[i];\n        }\n    }\n\n    getTopPanel(): HTMLDivElement {\n        return this._topPanelL;\n    }\n\n    setTopPanelVisibility(visible: boolean): void {\n        if (this._options.showTopPanel != visible) {\n            this._options.showTopPanel = !!visible;\n            $([this._topPanelL.parentElement, this._topPanelR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    setColumnHeaderVisibility(visible: boolean, animate?: boolean) {\n        if (this._options.showColumnHeader != visible) {\n            this._options.showColumnHeader = visible;\n            var headerScroller = $([this._headerColsL.parentElement, this._headerColsR.parentElement]);\n            if (visible) {\n                if (animate) {\n                    headerScroller.slideDown(\"fast\", this.resizeCanvas);\n                } else {\n                    headerScroller.show();\n                    this.resizeCanvas();\n                }\n            } else {\n                if (animate) {\n                    headerScroller.slideUp(\"fast\", this.resizeCanvas);\n                } else {\n                    headerScroller.hide();\n                    this.resizeCanvas();\n                }\n            }\n        }\n    }\n\n    setFooterRowVisibility(visible: boolean): void {\n        if (this._options.showFooterRow != visible) {\n            this._options.showFooterRow = !!visible;\n            $([this._footerRowColsL.parentElement, this._footerRowColsR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    setGroupingPanelVisibility(visible: boolean): void {\n        if (this._options.showGroupingPanel != visible) {\n            this._options.showGroupingPanel = visible;\n            if (!this._options.groupingPanel)\n                return;\n            if (visible) {\n                $(this._groupingPanel).slideDown(\"fast\", this.resizeCanvas);\n            } else {\n                $(this._groupingPanel).slideUp(\"fast\", this.resizeCanvas);\n            }\n        }\n    }\n\n    setHeaderRowVisibility(visible: boolean): void {\n        if (this._options.showHeaderRow != visible) {\n            this._options.showHeaderRow = visible;\n            $([this._headerRowColsL.parentElement, this._headerRowColsR.parentElement])[visible ? \"slideDown\" : \"slideUp\"](\"fast\", this.resizeCanvas);\n        }\n    }\n\n    getContainerNode(): HTMLElement {\n        return this._container;\n    }\n\n    getUID(): string {\n        return this._uid;\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n\n    private getRowTop(row: number): number {\n        return this._options.rowHeight * row - this._pageOffset;\n    }\n\n    private getRowFromPosition(y: number): number {\n        return Math.floor((y + this._pageOffset) / this._options.rowHeight);\n    }\n\n    private scrollTo(y: number): void {\n        y = Math.max(y, 0);\n        y = Math.min(y, this._virtualHeight - Math.round($(this._scrollContainerY).height()) + ((this._viewportHasHScroll || this.hasFrozenColumns()) ? this._scrollDims.height : 0));\n\n        var oldOffset = this._pageOffset;\n\n        this._page = Math.min(this._numberOfPages - 1, Math.floor(y / this._pageHeight));\n        this._pageOffset = Math.round(this._page * this._jumpinessCoefficient);\n        var newScrollTop = y - this._pageOffset;\n\n        if (this._pageOffset != oldOffset) {\n            var range = this.getVisibleRange(newScrollTop);\n            this.cleanupRows(range);\n            this.updateRowPositions();\n        }\n\n        if (this._scrollTopPrev != newScrollTop) {\n            this._vScrollDir = (this._scrollTopPrev + oldOffset < newScrollTop + this._pageOffset) ? 1 : -1;\n\n            this._scrollTopRendered = (this._scrollTop = this._scrollTopPrev = newScrollTop);\n\n            if (this.hasFrozenColumns()) {\n                this._viewportTopL.scrollTop = newScrollTop;\n            }\n\n            if (this._hasFrozenRows) {\n                this._viewportBottomL.scrollTop = this._viewportBottomR.scrollTop = newScrollTop;\n            }\n\n            this._scrollContainerY.scrollTop = newScrollTop;\n\n            this.trigger(this.onViewportChanged);\n        }\n    }\n\n    getFormatter(row: number, column: Column<TItem>): ColumnFormatter<TItem> {\n        var data = this._data;\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row) as ItemMetadata;\n        var colsMetadata = rowMetadata && rowMetadata.columns;\n        var colOverrides = colsMetadata && (colsMetadata[column.id] || colsMetadata[this.getInitialColumnIndex(column.id)]);\n\n        return (colOverrides && colOverrides.formatter) ||\n            (rowMetadata && rowMetadata.formatter) ||\n            column.formatter ||\n            (this._options.formatterFactory && this._options.formatterFactory.getFormatter(column)) ||\n            this._options.defaultFormatter;\n    }\n\n    private getEditor(row: number, cell: number): Editor {\n        var column = this._cols[cell];\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n\n        return column.editor || (this._options.editorFactory && this._options.editorFactory.getEditor(column));\n    }\n\n    private getDataItemValueForColumn(item: TItem, columnDef: Column<TItem>): any {\n        if (this._options.dataItemColumnValueExtractor) {\n            return this._options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n\n    private appendRowHtml(stringArrayL: string[], stringArrayR: string[], row: number, range: ViewRange, dataLength: number): void {\n        var d = this.getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = \"slick-row\" +\n            (this._hasFrozenRows && row <= this._options.frozenRow ? ' frozen' : '') +\n            (dataLoading ? \" loading\" : \"\") +\n            (row === this._activeRow ? \" active\" : \"\") +\n            (row % 2 == 1 ? \" odd\" : \" even\");\n\n        if (!d) {\n            rowCss += \" \" + this._options.addNewRowCssClass;\n        }\n\n        var metadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n\n        if (metadata && metadata.cssClasses) {\n            rowCss += \" \" + metadata.cssClasses;\n        }\n\n        var frozenRowOffset = this.getFrozenRowOffset(row);\n\n        var rowHtml = \"<div class='\" + (this._options.useLegacyUI ? \"ui-widget-content \" : \"\") + rowCss + \"' style='top:\"\n            + (this.getRowTop(row) - frozenRowOffset)\n            + \"px'>\";\n\n        stringArrayL.push(rowHtml);\n\n        if (this.hasFrozenColumns()) {\n            stringArrayR.push(rowHtml);\n        }\n\n        var colspan, m, cols = this._cols, frozenCols = this._frozenCols;\n        for (var i = 0, ii = cols.length; i < ii; i++) {\n            var columnData = null;\n            m = cols[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = (columnData && columnData.colspan) || 1;\n                if (colspan === \"*\") {\n                    colspan = ii - i;\n                }\n            }\n\n            // Do not render cells outside of the viewport.\n            if (this._colRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (this._colLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n\n                this.appendCellHtml(frozenCols > 0 && i >= frozenCols ? stringArrayR : stringArrayL, row, i, colspan, d, columnData);\n            }\n\n            if (colspan > 1) {\n                i += (colspan - 1);\n            }\n        }\n\n        stringArrayL.push(\"</div>\");\n\n        if (this.hasFrozenColumns()) {\n            stringArrayR.push(\"</div>\");\n        }\n    }\n\n    private appendCellHtml(sb: string[], row: number, cell: number, colspan: number, item: TItem, metadata: any): void {\n        var cols = this._cols, frozenCols = this._frozenCols, m = cols[cell];\n        var klass = \"slick-cell l\" + cell + \" r\" + Math.min(cols.length - 1, cell + colspan - 1) +\n            (m.cssClass ? \" \" + m.cssClass : \"\");\n\n        if (cell < frozenCols)\n            klass += ' frozen';\n\n        if (row === this._activeRow && cell === this._activeCell)\n            klass += \" active\";\n\n        if (metadata && metadata.cssClasses) {\n            klass += \" \" + metadata.cssClasses;\n        }\n\n        for (var key in this._cellCssClasses) {\n            if (this._cellCssClasses[key][row] && this._cellCssClasses[key][row][m.id]) {\n                klass += (\" \" + this._cellCssClasses[key][row][m.id]);\n            }\n        }\n\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        var fmtResult: FormatterResult | string;\n        if (item) {\n            var value = this.getDataItemValueForColumn(item, m);\n            fmtResult = this.getFormatter(row, m)(row, cell, value, m, item, this);\n        }\n\n        if (fmtResult == null)\n            sb.push('<div class=\"' + attrEncode(klass) + '\"></div>');\n        else if (typeof fmtResult === \"string\")\n            sb.push('<div class=\"' + attrEncode(klass) + '\">' + fmtResult + '</div>');\n        else {\n            if (fmtResult.addClass?.length)\n                klass += (\" \" + fmtResult.addClass);\n\n            sb.push('<div class=\"' + attrEncode(klass) + '\"');\n\n            if (fmtResult.addClass?.length)\n                sb.push(' data-fmtcls=\"' + attrEncode(fmtResult.addClass) + '\"');\n\n            var attrs = fmtResult.addAttrs;\n            if (attrs != null) {\n                var ks = [];\n                for (var k in attrs) {\n                    sb.push(k + '=\"' + attrEncode(attrs[k]) + '\"');\n                    ks.push(k);\n                }\n                sb.push(' data-fmtatt=\"' + attrEncode(ks.join(',')) + '\"');\n            }\n\n            var toolTip = fmtResult.toolTip;\n            if (toolTip != null && toolTip.length)\n                sb.push('tooltip=\"' + attrEncode(toolTip) + '\"');\n\n            if (fmtResult.text?.length)\n                sb.push('>' + fmtResult.text + '</div>');\n            else\n                sb.push('></div>');\n        }\n\n        this._rowsCache[row].cellRenderQueue.push(cell);\n        this._rowsCache[row].cellColSpans[cell] = colspan;\n    }\n\n    private cleanupRows(rangeToKeep: ViewRange): void {\n        var i: number;\n        for (var x in this._rowsCache) {\n            var removeFrozenRow = true;\n            i = parseInt(x, 10);\n            if (this._hasFrozenRows\n                && ((this._options.frozenBottom && i >= this._actualFrozenRow) // Frozen bottom rows\n                    || (!this._options.frozenBottom && i <= this._actualFrozenRow) // Frozen top rows\n                )\n            ) {\n                removeFrozenRow = false;\n            }\n\n            if (i !== this._activeRow\n                && (i < rangeToKeep.top || i > rangeToKeep.bottom)\n                && (removeFrozenRow)) {\n                this.removeRowFromCache(i);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    invalidate(): void {\n        this.updateRowCount();\n        this.invalidateAllRows();\n        this.render();\n        this.updateFooterTotals();\n    }\n\n    invalidateAllRows(): void {\n        if (this._currentEditor) {\n            this.makeActiveCellNormal();\n        }\n        for (var row in this._rowsCache) {\n            this.removeRowFromCache(parseInt(row, 10));\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    private queuePostProcessedRowForCleanup(cacheEntry: CachedRow, postProcessedRow: { [key: number]: any }, rowIdx: number): void {\n        this._postProcessGroupId++;\n\n        // store and detach node for later async cleanup\n        for (var x in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(x)) {\n                var columnIdx = parseInt(x, 10);\n                this._postProcessCleanupQueue.push({\n                    groupId: this._postProcessGroupId,\n                    cellNode: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n\n        this._postProcessCleanupQueue.push({\n            groupId: this._postProcessGroupId,\n            rowNodeL: cacheEntry.rowNodeL,\n            rowNodeR: cacheEntry.rowNodeR\n        });\n\n        cacheEntry.rowNodeL?.remove();\n        cacheEntry.rowNodeR?.remove();\n    }\n\n    private queuePostProcessedCellForCleanup(cellnode: HTMLElement, columnIdx: number, rowIdx: number): void {\n        this._postProcessCleanupQueue.push({\n            groupId: this._postProcessGroupId,\n            cellNode: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n\n    private removeRowFromCache(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n\n        if (this._options.enableAsyncPostRenderCleanup && this._postProcessedRows[row]) {\n            this.queuePostProcessedRowForCleanup(cacheEntry, this._postProcessedRows[row], row);\n        }\n        else {\n            cacheEntry.rowNodeL?.parentElement?.removeChild(cacheEntry.rowNodeL);\n            cacheEntry.rowNodeR?.parentElement?.removeChild(cacheEntry.rowNodeR);\n        }\n\n        delete this._rowsCache[row];\n        delete this._postProcessedRows[row];\n    }\n\n    invalidateRows(rows: number[]): void {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        this._vScrollDir = 0;\n        for (i = 0, rl = rows.length; i < rl; i++) {\n            if (this._currentEditor && this._activeRow === rows[i]) {\n                this.makeActiveCellNormal();\n            }\n            if (this._rowsCache[rows[i]]) {\n                this.removeRowFromCache(rows[i]);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n    }\n\n    invalidateRow(row: number): void {\n        this.invalidateRows([row]);\n    }\n\n    applyFormatResultToCellNode(fmtResult: FormatterResult | string, cellNode: HTMLElement) {\n        var oldFmtCls = cellNode.dataset?.fmtcls as string;\n        if (oldFmtCls != null && oldFmtCls.length > 0) {\n            cellNode.classList.remove(...oldFmtCls.split(' '));\n            delete cellNode.dataset.fmtcls;\n        }\n\n        var oldFmtAtt = cellNode.dataset?.fmtatt as string;\n        if (oldFmtAtt != null && oldFmtAtt.length > 0) {\n            for (var k of oldFmtAtt.split(','))\n                cellNode.removeAttribute(k);\n            delete cellNode.dataset.fmtatt;\n        }\n\n        cellNode.removeAttribute('tooltip');\n\n        if (fmtResult == null) {\n            cellNode.innerHTML = '';\n            return;\n        }\n\n        if (typeof fmtResult === \"string\") {\n            cellNode.innerHTML = fmtResult;\n            return;\n        }\n\n        cellNode.innerHTML = fmtResult.text;\n\n        if (fmtResult.addClass?.length) {\n            cellNode.classList.add(...fmtResult.addClass.split(' '));\n            cellNode.dataset.fmtcls = fmtResult.addClass;\n        }\n\n        if (fmtResult.addAttrs != null) {\n            var keys = Object.keys(fmtResult.addAttrs);\n            if (keys.length) {\n                for (var k of keys) {\n                    cellNode.setAttribute(k, fmtResult.addAttrs[k]);\n                }\n                cellNode.dataset.fmtatt = keys.join(',');\n            }\n        }\n\n        if (fmtResult.toolTip?.length)\n            cellNode.setAttribute('tooltip', fmtResult.toolTip);\n    }\n\n    updateCell(row: number, cell: number): void {\n        var cellNode = this.getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n\n        var m = this._cols[cell], d = this.getDataItem(row);\n        if (this._currentEditor && this._activeRow === row && this._activeCell === cell) {\n            this._currentEditor.loadValue(d);\n        } else {\n            var fmtResult = d ? this.getFormatter(row, m)(row, cell, this.getDataItemValueForColumn(d, m), m, d) : \"\";\n            this.applyFormatResultToCellNode(fmtResult, cellNode);\n            this.invalidatePostProcessingResults(row);\n        }\n    }\n\n    updateRow(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n\n        this.ensureCellNodesInRowsCache(row);\n\n        var d = this.getDataItem(row);\n        var fmtResult: FormatterResult | string;\n\n        for (var x in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                continue;\n            }\n\n            var columnIdx = parseInt(x, 10);\n            var m = this._cols[columnIdx],\n                node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n            if (row === this._activeRow && columnIdx === this._activeCell && this._currentEditor) {\n                this._currentEditor.loadValue(d);\n            }\n            else {\n                fmtResult = d ? this.getFormatter(row, m)(row, columnIdx, this.getDataItemValueForColumn(d, m), m, d) : '';\n                this.applyFormatResultToCellNode(fmtResult, node);\n            }\n        }\n\n        this.invalidatePostProcessingResults(row);\n    }\n\n    private getViewportHeight(): number {\n        if (!this._options.autoHeight || this.hasFrozenColumns()) {\n            this._topPanelH = this._options.showTopPanel ? this._options.topPanelHeight + this.getVBoxDelta(this._topPanelL.parentElement) : 0;\n            this._headerRowH = this._options.showHeaderRow ? this._options.headerRowHeight + this.getVBoxDelta(this._headerRowColsL.parentElement) : 0;\n            this._footerRowH = this._options.showFooterRow ? this._options.footerRowHeight + this.getVBoxDelta(this._footerRowColsL.parentElement) : 0;\n        }\n\n        if (this._options.autoHeight) {\n            this._viewportH = this._options.rowHeight * this.getDataLengthIncludingAddNew();\n\n            if (!this.hasFrozenColumns()) {\n                this._viewportH += this._paneHeaderL.offsetHeight;\n                this._viewportH += this._options.showHeaderRow ? this._options.headerRowHeight + this.getVBoxDelta(this._headerRowColsL.parentElement) : 0;\n                this._viewportH += this._options.showFooterRow ? this._options.footerRowHeight + this.getVBoxDelta(this._footerRowColsL.parentElement) : 0;\n                this._viewportH += this.getCanvasWidth() > this._viewportW ? this._scrollDims.height : 0;\n            }\n        } else {\n            var columnNamesH = (this._options.showColumnHeader) ? parseFloat(getComputedStyle(this._headerColsL.parentElement).height)\n                + this.getVBoxDelta(this._headerColsL.parentElement) : 0;\n            this._groupingPanelH = (this._options.groupingPanel && this._options.showGroupingPanel) ?\n                (this._options.groupingPanelHeight + this.getVBoxDelta(this._groupingPanel)) : 0;\n\n            var style = getComputedStyle(this._container);\n            this._viewportH = parseFloat(style.height)\n                - parseFloat(style.paddingTop)\n                - parseFloat(style.paddingBottom)\n                - columnNamesH\n                - this._topPanelH\n                - this._headerRowH\n                - this._footerRowH\n                - this._groupingPanelH;\n        }\n\n        this._numVisibleRows = Math.ceil(this._viewportH / this._options.rowHeight);\n        return this._viewportH;\n    }\n\n    private getViewportWidth(): void {\n        this._viewportW = parseFloat(getComputedStyle(this._container).width);\n    }\n\n    resizeCanvas = (): void => {\n        if (!this._initialized) {\n            return;\n        }\n\n        this._paneTopH = 0\n        this._paneBottomH = 0\n        this._viewportTopH = 0\n\n        this.getViewportWidth();\n        this.getViewportHeight();\n\n        // Account for Frozen Rows\n        if (this._hasFrozenRows) {\n            if (this._options.frozenBottom) {\n                this._paneTopH = this._viewportH - this._frozenRowsHeight - this._scrollDims.height;\n                this._paneBottomH = this._frozenRowsHeight + this._scrollDims.height;\n            } else {\n                this._paneTopH = this._frozenRowsHeight;\n                this._paneBottomH = this._viewportH - this._frozenRowsHeight;\n            }\n        } else {\n            this._paneTopH = this._viewportH;\n        }\n\n        // The top pane includes the top panel and the header row\n        this._paneTopH += this._topPanelH + this._headerRowH + this._footerRowH;\n\n        if (this.hasFrozenColumns() && this._options.autoHeight) {\n            this._paneTopH += this._scrollDims.height;\n        }\n\n        // The top viewport does not contain the top panel or header row\n        this._viewportTopH = this._paneTopH - this._topPanelH - this._headerRowH - this._footerRowH;\n\n        if (this._options.autoHeight) {\n            if (this.hasFrozenColumns()) {\n                this._container.style.height = this._paneTopH + parseFloat(getComputedStyle(this._headerColsL.parentElement).height) + 'px';\n            }\n\n            this._paneTopL.style.position = 'relative';\n        }\n        else\n            this._paneTopL.style.position = '';\n\n        this._paneTopL.style.top = (parseFloat(getComputedStyle(this._paneHeaderL).height) || (this._options.showHeaderRow ? this._options.headerRowHeight : 0) + this._groupingPanelH) + \"px\";\n        this._paneTopL.style.height = this._paneTopH + 'px';\n\n        var paneBottomTop = this._paneTopL.offsetTop + this._paneTopH;\n\n        if (!this._options.autoHeight) {\n            this._viewportTopL.style.height = this._viewportTopH + 'px';\n        }\n\n        if (this.hasFrozenColumns()) {\n            this._paneTopR.style.top = this._paneTopL.style.top;\n            this._paneTopR.style.height = this._paneTopH + 'px';\n\n            this._viewportTopR.style.height = this._viewportTopH + 'px';\n\n            if (this._hasFrozenRows) {\n                this._paneBottomL.style.top = paneBottomTop + 'px';\n                this._paneBottomL.style.height = this._paneBottomH + 'px';\n\n                this._paneBottomR.style.top = paneBottomTop + 'px';\n                this._paneBottomR.style.height = this._paneBottomH + 'px';\n\n                this._viewportBottomR.style.height = this._paneBottomH + 'px';\n            }\n        } else {\n            if (this._hasFrozenRows) {\n                this._paneBottomL.style.width = '100%';\n                this._paneBottomL.style.height = this._paneBottomH + 'px';\n\n                this._paneBottomL.style.top = paneBottomTop + 'px';\n            }\n        }\n\n        if (this._hasFrozenRows) {\n            this._viewportBottomL.style.height = this._paneBottomH + 'px';\n\n            if (this._options.frozenBottom) {\n                this._canvasBottomL.style.height = this._frozenRowsHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasBottomR.style.height = this._frozenRowsHeight + 'px';\n                }\n            } else {\n                this._canvasTopL.style.height = this._frozenRowsHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasTopR.style.height = this._frozenRowsHeight + 'px';\n                }\n            }\n        } else {\n            this._viewportTopR.style.height = this._viewportTopH + 'px';\n        }\n\n        if (!this._scrollDims || !this._scrollDims.width) {\n            this._scrollDims = getScrollBarDimensions(true);\n        }\n\n        if (this._options.forceFitColumns) {\n            this.autosizeColumns();\n        }\n\n        this.updateRowCount();\n        this.handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        this._scrolLLeftRendered = -1;\n        this.render();\n    }\n\n    updatePagingStatusFromView(pagingInfo: { pageSize: number, pageNum: number, totalPages: number }) {\n        this._pagingActive = (pagingInfo.pageSize !== 0);\n        this._pagingIsLastPage = (pagingInfo.pageNum == pagingInfo.totalPages - 1);\n    }\n\n    private updateRowCount(): void {\n        if (!this._initialized) {\n            return;\n        }\n\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        var numberOfRows = 0;\n        var oldH = (this._hasFrozenRows && !this._options.frozenBottom) ? Math.round(parseFloat(getComputedStyle(this._canvasBottomL).height)) : Math.round(parseFloat(getComputedStyle(this._canvasTopL).height));\n\n        if (this._hasFrozenRows) {\n            var numberOfRows = this.getDataLength() - this._options.frozenRow;\n        } else {\n            var numberOfRows = dataLengthIncludingAddNew + (this._options.leaveSpaceForNewRows ? this._numVisibleRows - 1 : 0);\n        }\n\n        var tempViewportH = Math.round(parseFloat(getComputedStyle(this._scrollContainerY).height));\n        var oldViewportHasVScroll = this._viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        this._viewportHasVScroll = !this._options.autoHeight && (numberOfRows * this._options.rowHeight > tempViewportH);\n\n        this.makeActiveCellNormal();\n\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var l = dataLengthIncludingAddNew - 1;\n        for (var x in this._rowsCache) {\n            var i = parseInt(x, 10);\n            if (i >= l) {\n                this.removeRowFromCache(i);\n            }\n        }\n\n        this._options.enableAsyncPostRenderCleanup && this.startPostProcessingCleanup();\n\n        this._virtualHeight = Math.max(this._options.rowHeight * numberOfRows, tempViewportH - this._scrollDims.height);\n\n        if (this._activeCellNode && this._activeRow > l) {\n            this.resetActiveCell();\n        }\n\n        if (this._virtualHeight < getMaxSupportedCssHeight()) {\n            // just one page\n            this._realScrollHeight = this._pageHeight = this._virtualHeight;\n            this._numberOfPages = 1;\n            this._jumpinessCoefficient = 0;\n        } else {\n            // break into pages\n            this._realScrollHeight = getMaxSupportedCssHeight();\n            this._pageHeight = this._realScrollHeight / 100;\n            this._numberOfPages = Math.floor(this._virtualHeight / this._pageHeight);\n            this._jumpinessCoefficient = (this._virtualHeight - this._realScrollHeight) / (this._numberOfPages - 1);\n        }\n\n        if (this._realScrollHeight !== oldH) {\n            if (this._hasFrozenRows && !this._options.frozenBottom) {\n                this._canvasBottomL.style.height = this._realScrollHeight + 'px';\n\n                if (this.hasFrozenColumns()) {\n                    this._canvasBottomR.style.height = this._realScrollHeight + 'px';\n                }\n            } else {\n                this._canvasTopL.style.height = this._realScrollHeight + 'px'\n                this._canvasTopR.style.height = this._realScrollHeight + 'px'\n            }\n\n            this._scrollTop = this._scrollContainerY.scrollTop;\n        }\n\n        var oldScrollTopInRange = (this._scrollTop + this._pageOffset <= this._virtualHeight - tempViewportH);\n\n        if (this._virtualHeight == 0 || this._scrollTop == 0) {\n            this._page = this._pageOffset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            this.scrollTo(this._scrollTop + this._pageOffset);\n        } else {\n            // scroll to bottom\n            this.scrollTo(this._virtualHeight - tempViewportH);\n        }\n\n        if (this._realScrollHeight != oldH && this._options.autoHeight) {\n            this.resizeCanvas();\n        }\n\n        if (this._options.forceFitColumns && oldViewportHasVScroll != this._viewportHasVScroll) {\n            this.autosizeColumns();\n        }\n        this.updateCanvasWidth(false);\n    }\n\n    /**\n     * @param viewportTop optional viewport top\n     * @param viewportLeft optional viewport left\n     * @returns viewport range\n     */\n    getViewport(viewportTop?: number, viewportLeft?: number): ViewRange {\n        return this.getVisibleRange(viewportTop, viewportLeft);\n    }\n\n    getVisibleRange(viewportTop?: number, viewportLeft?: number): ViewRange {\n        if (viewportTop == null) {\n            viewportTop = this._scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = this._scrollLeft;\n        }\n\n        return {\n            top: this.getRowFromPosition(viewportTop),\n            bottom: this.getRowFromPosition(viewportTop + this._viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + this._viewportW\n        };\n    }\n\n    getRenderedRange(viewportTop?: number, viewportLeft?: number): ViewRange {\n        var range = this.getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(this._viewportH / this._options.rowHeight);\n        var minBuffer = this._options.minBuffer || 3;\n\n        if (this._vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (this._vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(this.getDataLengthIncludingAddNew() - 1, range.bottom);\n\n        if (this._options.renderAllCells) {\n            range.leftPx = 0;\n            range.rightPx = this._canvasWidth;\n        }\n        else {\n            range.leftPx -= this._viewportW;\n            range.rightPx += this._viewportW;\n\n            range.leftPx = Math.max(0, range.leftPx);\n            range.rightPx = Math.min(this._canvasWidth, range.rightPx);\n        }\n\n        return range;\n    }\n\n    private ensureCellNodesInRowsCache(row: number): void {\n        var cacheEntry = this._rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNodeR?.lastElementChild ?? cacheEntry.rowNodeL?.lastElementChild;\n                while (lastChild && cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild as HTMLElement;\n                    lastChild = lastChild.previousElementSibling;\n\n                    if (lastChild == null)\n                        lastChild = cacheEntry.rowNodeL?.lastElementChild;\n                }\n            }\n        }\n    }\n\n    private cleanUpCells(range: ViewRange, row: number): void {\n        // Ignore frozen rows\n        if (this._hasFrozenRows\n            && ((this._options.frozenBottom && row > this._actualFrozenRow) // Frozen bottom rows\n                || (row <= this._actualFrozenRow)  // Frozen top rows\n            )\n        ) {\n            return;\n        }\n\n        var totalCellsRemoved = 0;\n        var cacheEntry = this._rowsCache[row];\n\n        // Remove cells outside the range.\n        var cellsToRemove = [], frozenCols = this._frozenCols;\n        for (var x in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                continue;\n            }\n\n            var i = parseInt(x, 10);\n\n            // Ignore frozen columns\n            if (i < frozenCols) {\n                continue;\n            }\n\n            var colspan = cacheEntry.cellColSpans[i], cols = this._cols;\n            if (this._colLeft[i] > range.rightPx || this._colRight[Math.min(cols.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == this._activeRow && i === this._activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n\n        var cellToRemove, node;\n        this._postProcessGroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n\n            if (this._options.enableAsyncPostRenderCleanup && this._postProcessedRows[row] && this._postProcessedRows[row][cellToRemove]) {\n                this.queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                node.parentElement.removeChild(node);\n            }\n\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (this._postProcessedRows[row]) {\n                delete this._postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n\n    private cleanUpAndRenderCells(range: ViewRange) {\n        var cacheEntry;\n        var stringArray: string[] = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        var cols = this._cols;\n\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = this._rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            this.ensureCellNodesInRowsCache(row);\n\n            this.cleanUpCells(range, row);\n\n            // Render missing cells.\n            cellsAdded = 0;\n\n            var metadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n\n            var d = this.getDataItem(row);\n\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = cols.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (this._colLeft[i] > range.rightPx) {\n                    break;\n                }\n\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += (colspan > 1 ? colspan - 1 : 0);\n                    continue;\n                }\n\n                var columnData = null;\n                colspan = 1;\n                if (metadata) {\n                    columnData = metadata[cols[i].id] || metadata[i];\n                    colspan = (columnData && columnData.colspan) || 1;\n                    if (colspan === \"*\") {\n                        colspan = ii - i;\n                    }\n                }\n\n                if (this._colRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    this.appendCellHtml(stringArray, row, i, colspan, d, columnData);\n                    cellsAdded++;\n                }\n\n                i += (colspan > 1 ? colspan - 1 : 0);\n            }\n\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n\n        if (!stringArray.length) {\n            return;\n        }\n\n        var x = document.createElement(\"div\");\n        x.innerHTML = stringArray.join(\"\");\n\n        var processedRow;\n        var node: HTMLElement, frozenCols = this._frozenCols;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = this._rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastElementChild as HTMLElement;\n\n                if (frozenCols > 0 && columnIdx >= frozenCols) {\n                    cacheEntry.rowNodeR.appendChild(node);\n                } else {\n                    cacheEntry.rowNodeL.appendChild(node);\n                }\n\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n\n    private renderRows(range: ViewRange): void {\n        var stringArrayL: string[] = [],\n            stringArrayR: string[] = [],\n            rows = [],\n            needToReselectCell = false,\n            dataLength = this.getDataLength();\n\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (this._rowsCache[i] || (this._hasFrozenRows && this._options.frozenBottom && i == dataLength)) {\n                continue;\n            }\n            rows.push(i);\n\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            this._rowsCache[i] = {\n                rowNodeL: null,\n                rowNodeR: null,\n\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                cellColSpans: [],\n\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                cellNodesByColumnIdx: [],\n\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                cellRenderQueue: []\n            };\n\n            this.appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n            if (this._activeCellNode && this._activeRow === i) {\n                needToReselectCell = true;\n            }\n        }\n\n        if (!rows.length) {\n            return;\n        }\n\n        var l = document.createElement(\"div\"),\n            r = document.createElement(\"div\");\n\n        l.innerHTML = stringArrayL.join(\"\");\n        r.innerHTML = stringArrayR.join(\"\");\n\n        var frozenRows = this._hasFrozenRows, actualFrozen = this._actualFrozenRow, frozenCols = this._frozenCols > 0;\n        var ctl = this._canvasTopL, ctr = this._canvasTopR, cbl = this._canvasBottomL, cbr = this._canvasBottomR;\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            var item = this._rowsCache[rows[i]];\n            item.rowNodeL = l.firstElementChild as HTMLDivElement;\n            item.rowNodeR = r.firstElementChild as HTMLDivElement;\n            if (frozenRows && (rows[i] >= actualFrozen)) {\n                item.rowNodeL && cbl.appendChild(item.rowNodeL);\n                frozenCols && item.rowNodeR && cbr.appendChild(item.rowNodeR);\n            }\n            else {\n                item.rowNodeL && ctl.appendChild(item.rowNodeL);\n                frozenCols && item.rowNodeR && ctr.appendChild(item.rowNodeR);\n            }\n        }\n\n        if (needToReselectCell) {\n            this._activeCellNode = this.getCellNode(this._activeRow, this._activeCell);\n        }\n    }\n\n    private startPostProcessing(): void {\n        if (!this._options.enableAsyncPostRender) {\n            return;\n        }\n\n        clearTimeout(this._hPostRender);\n\n        if (this._options.asyncPostRenderDelay < 0) {\n            this.asyncPostProcessRows();\n        } else {\n            this._hPostRender = setTimeout(this.asyncPostProcessRows.bind(this), this._options.asyncPostRenderDelay);\n        }\n    }\n\n    private startPostProcessingCleanup(): void {\n        if (!this._options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n\n        clearTimeout(this._hPostRenderCleanup);\n\n        if (this._options.asyncPostCleanupDelay < 0) {\n            this.asyncPostProcessCleanupRows();\n        }\n        else {\n            this._hPostRenderCleanup = setTimeout(this.asyncPostProcessCleanupRows.bind(this), this._options.asyncPostCleanupDelay);\n        }\n    }\n\n    private invalidatePostProcessingResults(row: number): void {\n        if (this._options.enableAsyncPostRenderCleanup) {\n            // change status of columns to be re-rendered\n            for (var columnIdx in this._postProcessedRows[row]) {\n                if (this._postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                    this._postProcessedRows[row][columnIdx] = 'C';\n                }\n            }\n        }\n        else {\n            delete this._postProcessedRows[row];\n        }\n\n        this._postProcessFromRow = Math.min(this._postProcessFromRow, row);\n        this._postProcessToRow = Math.max(this._postProcessToRow, row);\n        this.startPostProcessing();\n    }\n\n    private updateRowPositions(): void {\n        for (var row in this._rowsCache) {\n            var c = this._rowsCache[row];\n            var p = this.getRowTop(parseInt(row, 10)) + \"px\";\n            c.rowNodeL && (c.rowNodeL.style.top = p);\n            c.rowNodeR && (c.rowNodeR.style.top = p);\n        }\n    }\n\n    private updateFooterTotals(): void {\n        if (!this._options.showFooterRow || !this._initialized)\n            return;\n\n        var totals = null;\n        if (this._data.getGrandTotals) {\n            totals = this._data.getGrandTotals();\n        }\n\n        var cols = this._cols;\n        for (var i = 0; i < cols.length; i++) {\n            var m = cols[i];\n\n            var content;\n            if (m.field && totals) {\n                content = (m.groupTotalsFormatter && m.groupTotalsFormatter(totals, m, this)) ||\n                    (this.groupTotalsFormatter && this.groupTotalsFormatter(totals, m)) || \"\";\n            }\n\n            this.getFooterRowColumn(m.id).innerHTML = content;\n        }\n    }\n\n    private render(): void {\n        if (!this._initialized) { return; }\n        var visible = this.getVisibleRange();\n        var rendered = this.getRenderedRange();\n\n        // remove rows no longer in the viewport\n        this.cleanupRows(rendered);\n\n        // add new rows & missing cells in existing rows\n        if (this._scrolLLeftRendered != this._scrollLeft) {\n\n            if (this._hasFrozenRows) {\n\n                var renderedFrozenRows = Object.assign({}, rendered);\n\n                if (this._options.frozenBottom) {\n\n                    renderedFrozenRows.top = this._actualFrozenRow;\n                    renderedFrozenRows.bottom = this.getDataLength();\n                }\n                else {\n\n                    renderedFrozenRows.top = 0;\n                    renderedFrozenRows.bottom = this._options.frozenRow;\n                }\n\n                this.cleanUpAndRenderCells(renderedFrozenRows);\n            }\n\n            this.cleanUpAndRenderCells(rendered);\n        }\n\n        // render missing rows\n        this.renderRows(rendered);\n\n        // Render frozen rows\n        if (this._hasFrozenRows) {\n            if (this._options.frozenBottom) {\n                this.renderRows({\n                    top: this._actualFrozenRow, bottom: this.getDataLength() - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\n                });\n            }\n            else {\n                this.renderRows({\n                    top: 0, bottom: this._options.frozenRow - 1, leftPx: rendered.leftPx, rightPx: rendered.rightPx\n                });\n            }\n        }\n\n        this._postProcessFromRow = visible.top;\n        this._postProcessToRow = Math.min(this.getDataLengthIncludingAddNew() - 1, visible.bottom);\n        this.startPostProcessing();\n\n        this._scrollTopRendered = this._scrollTop;\n        this._scrolLLeftRendered = this._scrollLeft;\n        this._hRender = null;\n    }\n\n    private handleHeaderRowScroll = (): void => {\n        if (this._ignoreScrollUntil >= new Date().getTime())\n            return;\n\n        var scrollLeft = (this.hasFrozenColumns ? this._headerRowColsR.parentElement.scrollLeft : this._headerRowColsL.parentElement.scrollLeft);\n        if (scrollLeft != this._scrollContainerX.scrollLeft) {\n            this._scrollContainerX.scrollLeft = scrollLeft;\n        }\n    }\n\n    private handleFooterRowScroll = (): void => {\n        if (this._ignoreScrollUntil >= new Date().getTime())\n            return;\n\n        var scrollLeft = (this.hasFrozenColumns ? this._footerRowColsR.parentElement.scrollLeft : this._footerRowColsL.parentElement.scrollLeft);\n        if (scrollLeft != this._scrollContainerX.scrollLeft) {\n            this._scrollContainerX.scrollLeft = scrollLeft;\n        }\n    }\n\n    private handleMouseWheel(e: JQueryEventObject, delta: number, deltaX: number, deltaY: number): void {\n        deltaX = (typeof deltaX == \"undefined\" ? (e as any).originalEvent.deltaX : deltaX) || 0;\n        deltaY = (typeof deltaY == \"undefined\" ? (e as any).originalEvent.deltaY : deltaY) || 0;\n        this._scrollTop = Math.max(0, this._scrollContainerY.scrollTop - (deltaY * this._options.rowHeight));\n        this._scrollLeft = this._scrollContainerX.scrollLeft + (deltaX * 10);\n        var handled = this._handleScroll(true);\n        if (handled)\n            e.preventDefault();\n    }\n\n    private handleScroll(): boolean {\n        this._scrollTop = this._scrollContainerY.scrollTop;\n        this._scrollLeft = this._scrollContainerX.scrollLeft;\n        return this._handleScroll(false);\n    }\n\n    private _handleScroll(isMouseWheel?: boolean): boolean {\n        var maxScrollDistanceY = this._scrollContainerY.scrollHeight - this._scrollContainerY.clientHeight;\n        var maxScrollDistanceX = this._scrollContainerY.scrollWidth - this._scrollContainerY.clientWidth;\n\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\n        // Sometimes seen in Chrome.\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\n\n        // Ceiling the max scroll values\n        if (this._scrollTop > maxScrollDistanceY) {\n            this._scrollTop = maxScrollDistanceY;\n        }\n        if (this._scrollLeft > maxScrollDistanceX) {\n            this._scrollLeft = maxScrollDistanceX;\n        }\n\n        var vScrollDist = Math.abs(this._scrollTop - this._scrollTopPrev);\n        var hScrollDist = Math.abs(this._scrollLeft - this._scrollLeftPrev);\n\n        if (hScrollDist || vScrollDist)\n            this._ignoreScrollUntil = new Date().getTime() + 100;\n\n        if (hScrollDist) {\n            this._scrollLeftPrev = this._scrollLeft;\n\n            this._scrollContainerX.scrollLeft = this._scrollLeft;\n\n            if (this.hasFrozenColumns()) {\n                this._headerColsR.parentElement.scrollLeft = this._scrollLeft;\n                this._topPanelR.parentElement.scrollLeft = this._scrollLeft;\n                this._headerRowColsR.parentElement.scrollLeft = this._scrollLeft;\n                this._footerRowColsR.parentElement.scrollLeft = this._scrollLeft;\n                if (this._hasFrozenRows) {\n                    this._viewportTopR.scrollLeft = this._scrollLeft;\n                }\n            } else {\n                this._headerColsL.parentElement.scrollLeft = this._scrollLeft;\n                this._topPanelL.parentElement.scrollLeft = this._scrollLeft;\n                this._headerRowColsL.parentElement.scrollLeft = this._scrollLeft;\n                this._footerRowColsL.parentElement.scrollLeft = this._scrollLeft;\n                if (this._hasFrozenRows) {\n                    this._viewportTopL.scrollLeft = this._scrollLeft;\n                }\n            }\n        }\n\n        if (vScrollDist) {\n            this._vScrollDir = this._scrollTopPrev < this._scrollTop ? 1 : -1;\n            this._scrollTopPrev = this._scrollTop;\n\n            if (isMouseWheel) {\n                this._scrollContainerY.scrollTop = this._scrollTop;\n            }\n\n            if (this.hasFrozenColumns()) {\n                if (this._hasFrozenRows && !this._options.frozenBottom) {\n                    this._viewportBottomL.scrollTop = this._scrollTop;\n                } else {\n                    this._viewportTopL.scrollTop = this._scrollTop;\n                }\n            }\n\n            // switch virtual pages if needed\n            if (vScrollDist < this._viewportH) {\n                this.scrollTo(this._scrollTop + this._pageOffset);\n            } else {\n                var oldOffset = this._pageOffset;\n                if (this._realScrollHeight == this._viewportH) {\n                    this._page = 0;\n                } else {\n                    this._page = Math.min(this._numberOfPages - 1, Math.floor(this._scrollTop * ((this._virtualHeight - this._viewportH) / (this._realScrollHeight - this._viewportH)) * (1 / this._pageHeight)));\n                }\n                this._pageOffset = Math.round(this._page * this._jumpinessCoefficient);\n                if (oldOffset != this._pageOffset) {\n                    this.invalidateAllRows();\n                }\n            }\n        }\n\n        if (hScrollDist || vScrollDist) {\n            if (this._hRender) {\n                clearTimeout(this._hRender);\n            }\n\n            if (Math.abs(this._scrollTopRendered - this._scrollTop) > 20 ||\n                Math.abs(this._scrolLLeftRendered - this._scrollLeft) > 20) {\n                if (this._options.forceSyncScrolling || (\n                    Math.abs(this._scrollTopRendered - this._scrollTop) < this._viewportH &&\n                    Math.abs(this._scrolLLeftRendered - this._scrollLeft) < this._viewportW)) {\n                    this.render();\n                } else {\n                    this._hRender = setTimeout(this.render.bind(this), 50);\n                }\n\n                this.trigger(this.onViewportChanged);\n            }\n        }\n\n        this.trigger(this.onScroll, { scrollLeft: this._scrollLeft, scrollTop: this._scrollTop });\n\n        return !!(hScrollDist || vScrollDist);\n    }\n\n    private asyncPostProcessRows(): void {\n        var dataLength = this.getDataLength();\n        var cols = this._cols;\n        while (this._postProcessFromRow <= this._postProcessToRow) {\n            var row = (this._vScrollDir >= 0) ? this._postProcessFromRow++ : this._postProcessToRow--;\n            var cacheEntry = this._rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n\n            if (!this._postProcessedRows[row]) {\n                this._postProcessedRows[row] = {};\n            }\n\n            this.ensureCellNodesInRowsCache(row);\n            for (var x in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(x)) {\n                    continue;\n                }\n\n                var columnIdx = parseInt(x, 10);\n\n                var m = cols[columnIdx];\n                var processedStatus = this._postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=render\n                if (processedStatus !== 'R') {\n                    if (m.asyncPostRender || m.asyncPostRenderCleanup) {\n                        var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                        if (node) {\n                            m.asyncPostRender && m.asyncPostRender(node, row, this.getDataItem(row), m, processedStatus === 'C');\n                        }\n                    }\n                    this._postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n\n            if (this._options.asyncPostRenderDelay >= 0) {\n                this._hPostRender = setTimeout(this.asyncPostProcessRows.bind(this), this._options.asyncPostRenderDelay);\n                return;\n            }\n        }\n    }\n\n    private asyncPostProcessCleanupRows(): void {\n        var cols = this._cols;\n        while (this._postProcessCleanupQueue.length > 0) {\n            var groupId = this._postProcessCleanupQueue[0].groupId;\n\n            // loop through all queue members with this groupID\n            while (this._postProcessCleanupQueue.length > 0 && this._postProcessCleanupQueue[0].groupId == groupId) {\n                var entry = this._postProcessCleanupQueue.shift();\n                entry.rowNodeL && entry.rowNodeL.remove();\n                entry.rowNodeR && entry.rowNodeR.remove();\n                if (entry.cellNode != null) {\n                    var column = cols[entry.columnIdx];\n                    if (column && column.asyncPostRenderCleanup) {\n                        column.asyncPostRenderCleanup(entry.cellNode, entry.rowIdx, column);\n                        entry.cellNode.remove();\n                    }\n                }\n            }\n\n            // call this function again after the specified delay\n            if (this._options.asyncPostRenderDelay >= 0) {\n                this._hPostRenderCleanup = setTimeout(this.asyncPostProcessCleanupRows.bind(this), this._options.asyncPostCleanupDelay);\n                return;\n            }\n        }\n    }\n\n    private updateCellCssStylesOnRenderedRows(addedHash: CellStylesHash, removedHash: CellStylesHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in this._rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = this.getCellNode(parseInt(row, 10), this.getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = this.getCellNode(parseInt(row, 10), this.getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    addCellCssStyles(key: string, hash: CellStylesHash): void {\n        if (this._cellCssClasses[key]) {\n            throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n        }\n\n        this._cellCssClasses[key] = hash;\n        this.updateCellCssStylesOnRenderedRows(hash, null);\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: hash });\n    }\n\n    removeCellCssStyles(key: string): void {\n        if (!this._cellCssClasses[key]) {\n            return;\n        }\n\n        this.updateCellCssStylesOnRenderedRows(null, this._cellCssClasses[key]);\n        delete this._cellCssClasses[key];\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: null });\n    }\n\n    setCellCssStyles(key: string, hash: CellStylesHash): void {\n        var prevHash = this._cellCssClasses[key];\n\n        this._cellCssClasses[key] = hash;\n        this.updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n        this.trigger(this.onCellCssStylesChanged, { key: key, hash: hash });\n    }\n\n    getCellCssStyles(key: string): CellStylesHash {\n        return this._cellCssClasses[key];\n    }\n\n    flashCell(row: number, cell: number, speed?: number): void {\n        speed = speed || 100;\n        if (this._rowsCache[row]) {\n            var $cell = $(this.getCellNode(row, cell));\n            toggleCellClass(4);\n        }\n\n        var klass = this._options.cellFlashingCssClass;\n\n        function toggleCellClass(times: number) {\n            if (!times) {\n                return;\n            }\n            setTimeout(function () {\n                $cell.queue(function () {\n                    $cell.toggleClass(klass).dequeue();\n                    toggleCellClass(times - 1);\n                });\n            }, speed);\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n\n    private handleDragInit(e: JQueryEventObject, dd: any): boolean {\n        var cell = this.getCellFromEvent(e);\n        if (!cell || !this.cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n\n        var retval = this.trigger(this.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n\n    private handleDragStart(e: JQueryEventObject, dd: any): boolean {\n        var cell = this.getCellFromEvent(e);\n        if (!cell || !this.cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n\n        var retval = this.trigger(this.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n\n        return false;\n    }\n\n    private handleDrag(e: JQueryEventObject, dd: any): any {\n        return this.trigger(this.onDrag, dd, e);\n    }\n\n    private handleDragEnd(e: JQueryEventObject, dd: any): void {\n        this.trigger(this.onDragEnd, dd, e);\n    }\n\n    private handleKeyDown(e: JQueryKeyEventObject): void {\n        this.trigger(this.onKeyDown, { row: this._activeRow, cell: this._activeCell }, e);\n        var handled = e.isImmediatePropagationStopped();\n\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey) {\n                if (this._options.editable && this._currentEditor && this._currentEditor.keyCaptureList) {\n                    if (this._currentEditor.keyCaptureList.indexOf(e.which) >= 0) {\n                        return;\n                    }\n                }\n\n                if (e.which == keyCode.HOME) {\n                    if (e.ctrlKey) {\n                        this.navigateTop();\n                        handled = true;\n                    }\n                    else\n                        handled = this.navigateRowStart();\n                }\n                else if (e.which == keyCode.END) {\n                    if (e.ctrlKey) {\n                        this.navigateBottom();\n                        handled = true;\n                    }\n                    else\n                        handled = this.navigateRowEnd();\n                }\n            }\n        }\n\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n\n                if (this._options.editable && this._currentEditor && this._currentEditor.keyCaptureList) {\n                    if (this._currentEditor.keyCaptureList.indexOf(e.which) >= 0) {\n                        return;\n                    }\n                }\n\n                if (e.which == keyCode.ESCAPE) {\n                    if (!this.getEditorLock().isActive()) {\n                        return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    this.cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGEDOWN) {\n                    this.navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGEUP) {\n                    this.navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = this.navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = this.navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = this.navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = this.navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    if (this._options.enableTabKeyNavigation)\n                        handled = this.navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (this._options.editable) {\n                        if (this._currentEditor) {\n                            // adding new row\n                            if (this._activeRow === this.getDataLength()) {\n                                this.navigateDown();\n                            } else {\n                                this.commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (this.getEditorLock().commitCurrentEdit()) {\n                                this.makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = this.navigatePrev();\n            }\n        }\n\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                (e.originalEvent as JQueryKeyEventObject).keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            }\n            // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n\n    private handleClick(e: JQueryMouseEventObject): void {\n        if (!this._currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")) {\n                this.setFocus();\n            }\n        }\n\n        var cell = this.getCellFromEvent(e as any);\n        if (!cell || (this._currentEditor != null && this._activeRow == cell.row && this._activeCell == cell.cell)) {\n            return;\n        }\n\n        this.trigger(this.onClick, { row: cell.row, cell: cell.cell }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n\n        if (this.canCellBeActive(cell.row, cell.cell)) {\n            if (!this.getEditorLock().isActive() || this.getEditorLock().commitCurrentEdit()) {\n\n                var preClickModeOn = (e.target && e.target.classList.contains(preClickClassName));\n                var column = this._cols[cell.cell];\n                var suppressActiveCellChangedEvent = !!(this._options.editable && column && column.editor && this._options.suppressActiveCellChangeOnEdit);\n                this.setActiveCellInternal(this.getCellNode(cell.row, cell.cell), null, preClickModeOn, suppressActiveCellChangedEvent, e);\n            }\n        }\n    }\n\n    private handleContextMenu(e: JQueryMouseEventObject): void {\n        var $cell = $(e.target).closest(\".slick-cell\", this._container);\n        if ($cell.length === 0) {\n            return;\n        }\n\n        // are we editing this cell?\n        if (this._activeCellNode === $cell[0] && this._currentEditor != null) {\n            return;\n        }\n\n        this.trigger(this.onContextMenu, {}, e);\n    }\n\n    private handleDblClick(e: JQueryMouseEventObject): void {\n        var cell = this.getCellFromEvent(e as any);\n        if (!cell || (this._currentEditor != null && this._activeRow == cell.row && this._activeCell == cell.cell)) {\n            return;\n        }\n\n        this.trigger(this.onDblClick, { row: cell.row, cell: cell.cell }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n\n        if (this._options.editable) {\n            this.gotoCell(cell.row, cell.cell, true);\n        }\n    }\n\n    private handleHeaderMouseEnter(e: MouseEvent): void {\n        const column = this.getColumnFromNode(e.target as HTMLElement)\n        column && this.trigger(this.onHeaderMouseEnter, { column }, e);\n    }\n\n    private handleHeaderMouseLeave(e: MouseEvent): void {\n        const column = this.getColumnFromNode(e.target as HTMLElement)\n        column && this.trigger(this.onHeaderMouseLeave, { column }, e);\n    }\n\n    private handleHeaderContextMenu(e: JQueryMouseEventObject): void {\n        var header = e.target.closest(\".slick-header-column\");\n        var column = this.getColumnFromNode(header);\n        column && this.trigger(this.onHeaderContextMenu, { column }, e);\n    }\n\n    private handleHeaderClick(e: JQueryMouseEventObject): void {\n        var header = e.target.closest(\".slick-header-column\");\n        var column = this.getColumnFromNode(header);\n        column && this.trigger(this.onHeaderClick, { column: column }, e);\n    }\n\n    private handleMouseEnter(e: MouseEvent): void {\n        this.trigger(this.onMouseEnter, {}, e);\n    }\n\n    private handleMouseLeave(e: MouseEvent): void {\n        this.trigger(this.onMouseLeave, {}, e);\n    }\n\n    private cellExists(row: number, cell: number): boolean {\n        return !(row < 0 || row >= this.getDataLength() || cell < 0 || cell >= this._cols.length);\n    }\n\n    getCellFromPoint(x: number, y: number): { row: number; cell: number; } {\n        var row = this.getRowFromPosition(y);\n        var cell = 0;\n        var cols = this._cols;\n        var w = 0;\n        for (var i = 0; i < cols.length && w < x; i++) {\n            w += cols[i].width;\n            cell++;\n        }\n\n        if (cell < 0) {\n            cell = 0;\n        }\n\n        return { row: row, cell: cell - 1 };\n    }\n\n    getCellFromNode(cellNode: Element): number {\n        if (cellNode == null)\n            return null;\n\n        var c = (cellNode as HTMLElement).dataset.c;\n        if (c != null)\n            return parseInt(c, 10);\n\n        // read column number from .l<columnNumber> CSS class\n        var cls = /\\sl(\\d+)\\s/.exec(' ' + cellNode.className + ' ');\n        if (!cls) {\n            return null;\n        }\n        return parseInt(cls[1], 10);\n    }\n\n    getColumnFromNode(cellNode: Element): Column<TItem> {\n        if (cellNode == null)\n            return null;\n\n        var cell = this.getCellFromNode(cellNode);\n        if (cell === null && typeof $ !== \"undefined\")\n            return $(cell).data(\"column\") as Column<TItem>;\n\n        return this._cols[cell];\n    }\n\n    getRowFromNode(rowNode: Element): number {\n        if (rowNode != null) {\n            for (var row in this._rowsCache) {\n                var c = this._rowsCache[row];\n                if (c.rowNodeL === rowNode || c.rowNodeR === rowNode)\n                    return parseInt(row, 10);\n            }\n        }\n        return null;\n    }\n\n    private getFrozenRowOffset(row: number): any {\n        var offset =\n            (this._hasFrozenRows)\n                ? (this._options.frozenBottom)\n                    ? (row >= this._actualFrozenRow)\n                        ? (this._realScrollHeight < this._viewportTopH)\n                            ? (this._actualFrozenRow * this._options.rowHeight)\n                            : this._realScrollHeight\n                        : 0\n                    : (row >= this._actualFrozenRow)\n                        ? this._frozenRowsHeight\n                        : 0\n                : 0;\n\n        return offset;\n    }\n\n    getCellFromEvent(e: any): { row: number; cell: number; } {\n        var row, cell;\n        var cellEl = (e.target as HTMLElement).closest(\".slick-cell\") as HTMLElement;\n        if (!cellEl) {\n            return null;\n        }\n\n        row = this.getRowFromNode(cellEl.parentNode as HTMLElement);\n\n        if (this._hasFrozenRows) {\n\n            var bcr = cellEl.closest('.grid-canvas').getBoundingClientRect();\n\n            var rowOffset = 0;\n            var isBottom = cellEl.closest('.grid-canvas-bottom') != null;\n\n            if (isBottom) {\n                rowOffset = (this._options.frozenBottom) ? Math.round(parseFloat(getComputedStyle(this._canvasTopL).height)) : this._frozenRowsHeight;\n            }\n\n            row = this.getCellFromPoint(e.clientX - bcr[this._rtlS] - document.body.scrollLeft, e.clientY - bcr.top + document.body.scrollTop + rowOffset + document.body.scrollTop).row;\n        }\n\n        cell = this.getCellFromNode(cellEl);\n\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                \"row\": row,\n                \"cell\": cell\n            };\n        }\n    }\n\n    getCellNodeBox(row: number, cell: number): { top: number; right: number; bottom: number; left: number; } {\n        if (!this.cellExists(row, cell)) {\n            return null;\n        }\n\n        var frozenRowOffset = this.getFrozenRowOffset(row);\n        var cols = this._cols, frozenCols = this._frozenCols;\n        var y1 = this.getRowTop(row) - frozenRowOffset;\n        var y2 = y1 + this._options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += cols[i].width;\n            if (i == frozenCols - 1) {\n                x1 = 0;\n            }\n        }\n        var x2 = x1 + cols[cell].width;\n\n        return this._rtl ? {\n            top: y1,\n            right: x1,\n            bottom: y2,\n            left: x2\n        } : {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n\n    resetActiveCell(): void {\n        this.setActiveCellInternal(null, false);\n    }\n\n    focus(): void {\n        this.setFocus();\n    }\n\n    private setFocus(): void {\n        if (this._tabbingDirection == -1) {\n            this._focusSink1.focus();\n        } else {\n            this._focusSink2.focus();\n        }\n    }\n\n    scrollCellIntoView(row: number, cell: number, doPaging?: boolean): void {\n        this.scrollRowIntoView(row, doPaging);\n\n        if (cell < this._frozenCols)\n            return;\n\n        var colspan = this.getColspan(row, cell);\n        this.internalScrollColumnIntoView(this._colLeft[cell], this._colRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n\n    scrollColumnIntoView(cell: number): void {\n        this.internalScrollColumnIntoView(this._colLeft[cell], this._colRight[cell]);\n    }\n\n    internalScrollColumnIntoView(left: number, right: number): void {\n\n        var scrollRight = this._scrollLeft + parseFloat(getComputedStyle(this._scrollContainerX).width) -\n            (this._viewportHasVScroll ? this._scrollDims.width : 0);\n\n        var target;\n        if (left < this._scrollLeft)\n            target = left;\n        else if (right > scrollRight)\n            target = Math.min(left, right - this._scrollContainerX.clientWidth);\n        else\n            return;\n\n        this._scrollContainerX.scrollLeft = target;\n        this.handleScroll();\n        this.render();\n    }\n\n    private setActiveCellInternal(newCell: HTMLElement, opt_editMode?: boolean, preClickModeOn?: boolean, suppressActiveCellChangedEvent?: boolean, e?: any): void {\n        if (this._activeCellNode != null) {\n            this.makeActiveCellNormal();\n            this._activeCellNode.classList.remove(\"active\");\n            var c = this._rowsCache[this._activeRow];\n            if (c) {\n                c.rowNodeL && c.rowNodeL.classList.remove(\"active\");\n                c.rowNodeR && c.rowNodeR.classList.remove(\"active\");\n            }\n        }\n\n        this._activeCellNode = newCell;\n\n        if (this._activeCellNode != null) {\n            var bcl = this._activeCellNode.getBoundingClientRect();\n\n            var rowOffset = Math.floor(this._activeCellNode.closest('.grid-canvas').getBoundingClientRect().top + document.body.scrollTop);\n            var isBottom = this._activeCellNode.closest('.grid-canvas-bottom') != null;\n\n            if (this._hasFrozenRows && isBottom) {\n                rowOffset -= (this._options.frozenBottom)\n                    ? Math.round(parseFloat(getComputedStyle(this._canvasTopL).height))\n                    : this._frozenRowsHeight;\n            }\n\n            var cell = this.getCellFromPoint(bcl[this._rtlS] + document.body.scrollLeft, Math.ceil(bcl.top + document.body.scrollTop) - rowOffset);\n\n            this._activeRow = cell.row;\n            this._activeCell = this._activePosX = this.getCellFromNode(this._activeCellNode);\n\n            if (this._options.showCellSelection) {\n                this._activeCellNode.classList.add(\"active\");\n                var c = this._rowsCache[this._activeRow];\n                if (c) {\n                    c.rowNodeL && c.rowNodeL.classList.add(\"active\");\n                    c.rowNodeR && c.rowNodeR.classList.add(\"active\");\n                }\n            }\n\n            if (opt_editMode == null) {\n                opt_editMode = (this._activeRow == this.getDataLength()) || this._options.autoEdit;\n            }\n\n            if (this._options.editable && opt_editMode && this.isCellPotentiallyEditable(this._activeRow, this._activeCell)) {\n                clearTimeout(this._hEditorLoader);\n\n                if (this._options.asyncEditorLoading) {\n                    this._hEditorLoader = setTimeout(() => {\n                        this.makeActiveCellEditable(undefined, preClickModeOn, e);\n                    }, this._options.asyncEditorLoadDelay);\n                } else {\n                    this.makeActiveCellEditable(undefined, preClickModeOn, e);\n                }\n            }\n        } else {\n            this._activeRow = this._activeCell = null;\n        }\n\n        if (!suppressActiveCellChangedEvent) {\n            this.trigger(this.onActiveCellChanged, this.getActiveCell() as ArgsCell);\n        }\n    }\n\n    clearTextSelection(): void {\n        if ((document as any).selection && (document as any).selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                (document as any).selection.empty();\n            } catch (e) { }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n\n    private isCellPotentiallyEditable(row: number, cell: number): boolean {\n        var dataLength = this.getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !this.getDataItem(row)) {\n            return false;\n        }\n\n        // are we in the Add New row?  can we create new from this cell?\n        if (this._cols[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n\n        // does this cell have an editor?\n        if (!this.getEditor(row, cell)) {\n            return false;\n        }\n\n        return true;\n    }\n\n    private makeActiveCellNormal(): void {\n        if (!this._currentEditor) {\n            return;\n        }\n        this.trigger(this.onBeforeCellEditorDestroy, { editor: this._currentEditor });\n        this._currentEditor.destroy();\n        this._currentEditor = null;\n\n        if (this._activeCellNode) {\n            var d = this.getDataItem(this._activeRow);\n            this._activeCellNode.classList.remove(\"editable\", \"invalid\");\n            if (d) {\n                var column = this._cols[this._activeCell];\n                var fmtResult = d ? this.getFormatter(this._activeRow, column)(this._activeRow, this._activeCell,\n                    this.getDataItemValueForColumn(d, column), column, d) : \"\";\n                this.applyFormatResultToCellNode(fmtResult, this._activeCellNode);\n                this.invalidatePostProcessingResults(this._activeRow);\n            }\n        }\n\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            this.clearTextSelection();\n        }\n\n        this.getEditorLock().deactivate(this._editController);\n    }\n\n    editActiveCell(editor?: Editor): void {\n        this.makeActiveCellEditable(editor);\n    }\n\n    private makeActiveCellEditable(editor?: Editor, preClickModeOn?: boolean, e?: any): void {\n        if (!this._activeCellNode) {\n            return;\n        }\n        if (!this._options.editable) {\n            throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n        }\n\n        // cancel pending async call if there is one\n        clearTimeout(this._hEditorLoader);\n\n        if (!this.isCellPotentiallyEditable(this._activeRow, this._activeCell)) {\n            return;\n        }\n\n        var columnDef = this._cols[this._activeCell];\n        var item = this.getDataItem(this._activeRow);\n\n        if (this.trigger(this.onBeforeEditCell, { row: this._activeRow, cell: this._activeCell, item: item, column: columnDef }) === false) {\n            this.setFocus();\n            return;\n        }\n\n        this.getEditorLock().activate(this._editController);\n        this._activeCellNode.classList.add(\"editable\");\n\n        var useEditor = editor || this.getEditor(this._activeRow, this._activeCell);\n\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            this._activeCellNode.innerHTML = \"\";\n        }\n\n        var metadata = this._data.getItemMetadata && this._data.getItemMetadata(this._activeRow);\n        metadata = metadata && metadata.columns;\n        var columnMetaData = metadata && (metadata[columnDef.id] || metadata[this._activeCell]);\n\n        this._currentEditor = new useEditor({\n            grid: this,\n            gridPosition: this.absBox(this._container),\n            position: this.absBox(this._activeCellNode),\n            container: this._activeCellNode,\n            column: columnDef,\n            item: item || {},\n            event: e,\n            commitChanges: this.commitEditAndSetFocus,\n            cancelChanges: this.cancelEditAndSetFocus\n        });\n\n        if (item) {\n            this._currentEditor.loadValue(item);\n            if (preClickModeOn && this._currentEditor.preClick) {\n                this._currentEditor.preClick();\n            }\n        }\n\n        this._serializedEditorValue = this._currentEditor.serializeValue();\n\n        if (this._currentEditor.position) {\n            this.handleActiveCellPositionChange();\n        }\n    }\n\n    private commitEditAndSetFocus(): void {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (this.getEditorLock().commitCurrentEdit()) {\n            this.setFocus();\n            if (this._options.autoEdit) {\n                this.navigateDown();\n            }\n        }\n    }\n\n    private cancelEditAndSetFocus(): void {\n        if (this.getEditorLock().cancelCurrentEdit()) {\n            this.setFocus();\n        }\n    }\n\n    private absBox(elem: HTMLElement): Position {\n        var box: Position = {\n            top: elem.offsetTop,\n            bottom: 0,\n            width: elem.offsetWidth,\n            height: elem.offsetHeight,\n            visible: true\n        };\n\n        box[this._rtlS] = elem.offsetLeft;\n        box[this._rtlE] = 0;\n\n        box.bottom = box.top + box.height;\n        box[this._rtlE] = box[this._rtlS] + box.width;\n\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode as HTMLElement) != document.body) {\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && getComputedStyle(elem).overflowY !== \"visible\") {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && getComputedStyle(elem).overflowX != \"visible\") {\n                box.visible = box[this._rtlE] > elem.scrollLeft && box[this._rtlS] < elem.scrollLeft + elem.clientWidth;\n            }\n\n            box[this._rtlS] -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n\n            if (elem === offsetParent) {\n                box.right += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n\n            box.bottom = box.top + box.height;\n            box[this._rtlE] = box[this._rtlS] + box.width;\n        }\n\n        return box;\n    }\n\n    private getActiveCellPosition(): Position {\n        return this.absBox(this._activeCellNode);\n    }\n\n    getGridPosition(): Position {\n        return this.absBox(this._container);\n    }\n\n    private handleActiveCellPositionChange = (): void => {\n        if (!this._activeCellNode) {\n            return;\n        }\n\n        this.trigger(this.onActiveCellPositionChanged, {});\n\n        if (this._currentEditor) {\n            var cellBox = this.getActiveCellPosition();\n            if (this._currentEditor.show && this._currentEditor.hide) {\n                if (!cellBox.visible) {\n                    this._currentEditor.hide();\n                } else {\n                    this._currentEditor.show();\n                }\n            }\n\n            if (this._currentEditor.position) {\n                this._currentEditor.position(cellBox);\n            }\n        }\n    }\n\n    getCellEditor(): Editor {\n        return this._currentEditor;\n    }\n\n    getActiveCell(): RowCell {\n        if (!this._activeCellNode) {\n            return null;\n        } else {\n            return { row: this._activeRow, cell: this._activeCell };\n        }\n    }\n\n    getActiveCellNode(): HTMLElement {\n        return this._activeCellNode;\n    }\n\n    scrollActiveCellIntoView(): void {\n        if (this._activeRow != null && this._activeCell != null) {\n            this.scrollCellIntoView(this._activeRow, this._activeCell);\n        }\n    }\n\n    scrollRowIntoView(row: number, doPaging?: boolean): void {\n\n        if (!this._hasFrozenRows ||\n            (!this._options.frozenBottom && row > this._actualFrozenRow - 1) ||\n            (this._options.frozenBottom && row < this._actualFrozenRow - 1)) {\n\n            var viewportScrollH = Math.round(parseFloat(getComputedStyle(this._scrollContainerY).height));\n\n            var rowNumber = (this._hasFrozenRows && !this._options.frozenBottom ? row - this._options.frozenRow : row);\n\n            // if frozen row on top subtract number of frozen row\n            var rowAtTop = rowNumber * this._options.rowHeight;\n            var rowAtBottom = (rowNumber + 1) * this._options.rowHeight\n                - viewportScrollH\n                + (this._viewportHasHScroll ? this._scrollDims.height : 0);\n\n            // need to page down?\n            if ((rowNumber + 1) * this._options.rowHeight > this._scrollTop + viewportScrollH + this._pageOffset) {\n                this.scrollTo(doPaging ? rowAtTop : rowAtBottom);\n                this.render();\n            }\n            // or page up?\n            else if (rowNumber * this._options.rowHeight < this._scrollTop + this._pageOffset) {\n                this.scrollTo(doPaging ? rowAtBottom : rowAtTop);\n                this.render();\n            }\n        }\n    }\n\n    scrollRowToTop(row: number): void {\n        this.scrollTo(row * this._options.rowHeight);\n        this.render();\n    }\n\n    private scrollPage(dir: number): void {\n        var deltaRows = dir * this._numVisibleRows;\n        this.scrollTo((this.getRowFromPosition(this._scrollTop) + deltaRows) * this._options.rowHeight);\n        this.render();\n\n        if (this._options.enableCellNavigation && this._activeRow != null) {\n            var row = this._activeRow + deltaRows;\n            var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n\n            var cell = 0, prevCell = null;\n            var prevActivePosX = this._activePosX;\n            while (cell <= this._activePosX) {\n                if (this.canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += this.getColspan(row, cell);\n            }\n\n            if (prevCell != null) {\n                this.setActiveCellInternal(this.getCellNode(row, prevCell));\n                this._activePosX = prevActivePosX;\n            } else {\n                this.resetActiveCell();\n            }\n        }\n    }\n\n    navigatePageDown(): void {\n        this.scrollPage(1);\n    }\n\n    navigatePageUp(): void {\n        this.scrollPage(-1);\n    }\n\n    navigateTop(): void {\n        this.navigateToRow(0);\n    }\n\n    navigateBottom(): void {\n        this.navigateToRow(this.getDataLength() - 1);\n    }\n\n    navigateToRow(row: number) {\n        var dataLength = this.getDataLength();\n        if (!dataLength) {\n            return true;\n        }\n\n        if (row < 0)\n            row = 0;\n        else if (row >= dataLength)\n            row = dataLength - 1;\n\n        this.scrollCellIntoView(row, 0, true);\n\n        if (this._options.enableCellNavigation && this._activeRow != null) {\n            var cell = 0, prevCell = null;\n            var prevActivePosX = this._activePosX;\n            while (cell <= this._activePosX) {\n                if (this.canCellBeActive(row, cell))\n                    prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (prevCell != null) {\n                this.setActiveCellInternal(this.getCellNode(row, prevCell));\n                this._activePosX = prevActivePosX;\n            }\n            else\n                this.resetActiveCell();\n        }\n\n        return true;\n    }\n\n    getColspan(row: number, cell: number): number {\n        var itemMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row) as ItemMetadata;\n        if (!itemMetadata || !itemMetadata.columns) {\n            return 1;\n        }\n\n        var cols = this._cols;\n        var columnData = cols[cell] && (itemMetadata.columns[cols[cell].id] || itemMetadata.columns[cell]);\n        var colspan = (columnData && columnData.colspan);\n        if (colspan === \"*\") {\n            colspan = cols.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n\n        return colspan;\n    }\n\n    private findFirstFocusableCell(row: number): number {\n        var cell = 0;\n        var cols = this._cols;\n        while (cell < cols.length) {\n            if (this.canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += this.getColspan(row, cell);\n        }\n        return null;\n    }\n\n    private findLastFocusableCell(row: number): number {\n        var cell = 0;\n        var lastFocusableCell = null;\n        var cols = this._cols;\n        while (cell < cols.length) {\n            if (this.canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += this.getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n\n    private gotoRight(row?: number, cell?: number, posX?: number): GoToResult {\n        var cols = this._cols;\n        if (cell >= cols.length) {\n            return null;\n        }\n\n        do {\n            cell += this.getColspan(row, cell);\n        }\n        while (cell < cols.length && !this.canCellBeActive(row, cell));\n\n        if (cell < cols.length) {\n            return {\n                row: row,\n                cell: cell,\n                posX: cell\n            };\n        }\n        return null;\n    }\n\n    private gotoLeft(row?: number, cell?: number, posX?: number): GoToResult {\n        if (cell <= 0) {\n            return null;\n        }\n\n        var firstFocusableCell = this.findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n\n        var prev = {\n            row: row,\n            cell: firstFocusableCell,\n            posX: firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = this.gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n\n    private gotoDown(row?: number, cell?: number, posX?: number): GoToResult {\n        var prevCell;\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (this.canCellBeActive(row, prevCell)) {\n                return {\n                    row: row,\n                    cell: prevCell,\n                    posX: posX\n                };\n            }\n        }\n    }\n\n    private gotoUp(row?: number, cell?: number, posX?: number): GoToResult {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += this.getColspan(row, cell);\n            }\n\n            if (this.canCellBeActive(row, prevCell)) {\n                return {\n                    row: row,\n                    cell: prevCell,\n                    posX: posX\n                };\n            }\n        }\n    }\n\n    private gotoNext(row?: number, cell?: number, posX?: number): GoToResult {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (this.canCellBeActive(row, cell)) {\n                return {\n                    row: row,\n                    cell: cell,\n                    posX: cell\n                };\n            }\n        }\n\n        var pos = this.gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = this.getDataLengthIncludingAddNew();\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = this.findFirstFocusableCell(row);\n            if (firstFocusableCell != null) {\n                return {\n                    row: row,\n                    cell: firstFocusableCell,\n                    posX: firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n\n    private gotoPrev(row?: number, cell?: number, posX?: number): { row: number; cell: number; posX: number; } {\n        var cols = this._cols;\n        if (row == null && cell == null) {\n            row = this.getDataLengthIncludingAddNew() - 1;\n            cell = posX = cols.length - 1;\n            if (this.canCellBeActive(row, cell)) {\n                return {\n                    row: row,\n                    cell: cell,\n                    posX: cell\n                };\n            }\n        }\n\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = this.gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n\n            cell = 0;\n            lastSelectableCell = this.findLastFocusableCell(row);\n            if (lastSelectableCell != null) {\n                pos = {\n                    row: row,\n                    cell: lastSelectableCell,\n                    posX: lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n\n    private gotoRowStart(row: number) {\n        var newCell = this.findFirstFocusableCell(row);\n        if (newCell === null)\n            return null;\n\n        return {\n            row: row,\n            cell: newCell,\n            posX: newCell\n        };\n    }\n\n    private gotoRowEnd(row: number) {\n        var newCell = this.findLastFocusableCell(row);\n        if (newCell === null)\n            return null;\n\n        return {\n            row: row,\n            cell: newCell,\n            posX: newCell\n        };\n    }\n\n    navigateRight(): boolean {\n        return this.navigate(\"right\");\n    }\n\n    navigateLeft(): boolean {\n        return this.navigate(\"left\");\n    }\n\n    navigateDown(): boolean {\n        return this.navigate(\"down\");\n    }\n\n    navigateUp(): boolean {\n        return this.navigate(\"up\");\n    }\n\n    navigateNext(): boolean {\n        return this.navigate(\"next\");\n    }\n\n    navigatePrev(): boolean {\n        return this.navigate(\"prev\");\n    }\n\n    navigateRowStart(): boolean {\n        return this.navigate(\"home\");\n    }\n\n    navigateRowEnd(): boolean {\n        return this.navigate(\"end\");\n    }\n\n    /**\n     * @param {string} dir Navigation direction.\n     * @return {boolean} Whether navigation resulted in a change of active cell.\n     */\n    navigate(dir: string): boolean {\n        if (!this._options.enableCellNavigation) {\n            return false;\n        }\n\n        if (!this._activeCellNode && dir != \"prev\" && dir != \"next\") {\n            return false;\n        }\n\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        this.setFocus();\n\n        var tabbingDirections = {\n            up: -1,\n            down: 1,\n            prev: -1,\n            next: 1,\n            home: -1,\n            end: 1\n        };\n\n        tabbingDirections[this._rtlS] = -1;\n        tabbingDirections[this._rtlE] = 1;\n\n        this._tabbingDirection = tabbingDirections[dir];\n\n        var stepFunctions = {\n            up: this.gotoUp,\n            down: this.gotoDown,\n            prev: this.gotoPrev,\n            next: this.gotoNext,\n            home: this.gotoRowStart,\n            end: this.gotoRowEnd\n        };\n\n        stepFunctions[this._rtlS] = this.gotoLeft;\n        stepFunctions[this._rtlE] = this.gotoRight;\n\n        var stepFn = stepFunctions[dir].bind(this);\n        var pos = stepFn(this._activeRow, this._activeCell, this._activePosX);\n        if (pos) {\n            if (this._hasFrozenRows && this._options.frozenBottom && pos.row == this.getDataLength()) {\n                return;\n            }\n\n            var isAddNewRow = (pos.row == this.getDataLength());\n\n            if ((!this._options.frozenBottom && pos.row >= this._actualFrozenRow)\n                || (this._options.frozenBottom && pos.row < this._actualFrozenRow)\n            ) {\n                this.scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            }\n\n            this.setActiveCellInternal(this.getCellNode(pos.row, pos.cell))\n            this._activePosX = pos.posX;\n            return true;\n        } else {\n            this.setActiveCellInternal(this.getCellNode(this._activeRow, this._activeCell));\n            return false;\n        }\n    }\n\n    getCellNode(row: number, cell: number): HTMLElement {\n        if (this._rowsCache[row]) {\n            this.ensureCellNodesInRowsCache(row);\n            return this._rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n\n    setActiveCell(row: number, cell: number) {\n        if (!this._initialized) { return; }\n        var cols = this._cols;\n        if (row > this.getDataLength() || row < 0 || cell >= cols.length || cell < 0) {\n            return;\n        }\n\n        if (!this._options.enableCellNavigation) {\n            return;\n        }\n\n        this.scrollCellIntoView(row, cell, false);\n        this.setActiveCellInternal(this.getCellNode(row, cell), false);\n    }\n\n    private canCellBeActive(row: number, cell: number): boolean {\n        var cols = this._cols;\n        if (!this._options.enableCellNavigation || row >= this.getDataLengthIncludingAddNew() ||\n            row < 0 || cell >= cols.length || cell < 0) {\n            return false;\n        }\n\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === \"boolean\") {\n            return rowMetadata.focusable;\n        }\n\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && cols[cell] && columnMetadata[cols[cell].id] && typeof columnMetadata[cols[cell].id].focusable === \"boolean\") {\n            return columnMetadata[cols[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\") {\n            return columnMetadata[cell].focusable;\n        }\n\n        return cols[cell].focusable;\n    }\n\n    canCellBeSelected(row: number, cell: number) {\n        var cols = this._cols;\n        if (row >= this.getDataLength() || row < 0 || cell >= cols.length || cell < 0) {\n            return false;\n        }\n\n        var rowMetadata = this._data.getItemMetadata && this._data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === \"boolean\") {\n            return rowMetadata.selectable;\n        }\n\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[cols[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === \"boolean\") {\n            return columnMetadata.selectable;\n        }\n\n        return cols[cell].selectable;\n    }\n\n    gotoCell(row: number, cell: number, forceEdit?: boolean) {\n        if (!this._initialized) { return; }\n        if (!this.canCellBeActive(row, cell)) {\n            return;\n        }\n\n        if (!this.getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n\n        this.scrollCellIntoView(row, cell, false);\n\n        var newCell = this.getCellNode(row, cell);\n\n        // if selecting the 'add new' row, start editing right away\n        this.setActiveCellInternal(newCell, forceEdit || (row === this.getDataLength()) || this._options.autoEdit);\n\n        // if no editor was created, set the focus back on the grid\n        if (!this._currentEditor) {\n            this.setFocus();\n        }\n    }\n\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n\n    commitCurrentEdit(): boolean {\n        var item = this.getDataItem(this._activeRow);\n        var column = this._cols[this._activeCell];\n        var self = this;\n\n        if (this._currentEditor) {\n            if (this._currentEditor.isValueChanged()) {\n                var validationResults = this._currentEditor.validate();\n\n                if (validationResults.valid) {\n                    if (this._activeRow < this.getDataLength()) {\n                        var editCommand: EditCommand = {\n                            row: this._activeRow,\n                            cell: self._activeCell,\n                            editor: this._currentEditor,\n                            serializedValue: this._currentEditor.serializeValue(),\n                            prevSerializedValue: this._serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                self.updateRow(this.row);\n                                self.trigger(self.onCellChange, {\n                                    row: this.activeRow,\n                                    cell: self._activeCell,\n                                    item: item\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                self.updateRow(this.row);\n                                self.trigger(self.onCellChange, {\n                                    row: this.activeRow,\n                                    cell: self._activeCell,\n                                    item: item\n                                });\n                            }\n                        };\n\n                        if (this._options.editCommandHandler) {\n                            this.makeActiveCellNormal();\n                            this._options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            this.makeActiveCellNormal();\n                        }\n\n                    } else {\n                        var newItem = {} as TItem;\n                        this._currentEditor.applyValue(newItem, this._currentEditor.serializeValue());\n                        this.makeActiveCellNormal();\n                        this.trigger(this.onAddNewRow, { item: newItem, column: column });\n                    }\n\n                    // check whether the lock has been re-acquired by event handlers\n                    return !this.getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    this._activeCellNode.classList.remove(\"invalid\");\n                    this._activeCellNode.offsetWidth;  // force layout\n                    this._activeCellNode.classList.add(\"invalid\");\n\n                    this.trigger(this.onValidationError, {\n                        editor: this._currentEditor,\n                        cellNode: this._activeCellNode,\n                        validationResults: validationResults,\n                        row: this._activeRow,\n                        cell: this._activeCell,\n                        column: column\n                    });\n\n                    this._currentEditor.focus();\n                    return false;\n                }\n            }\n\n            this.makeActiveCellNormal();\n        }\n        return true;\n    }\n\n    private cancelCurrentEdit() {\n        this.makeActiveCellNormal();\n        return true;\n    }\n\n    private rowsToRanges(rows: number[]): Range[] {\n        var ranges = [];\n        var lastCell = this._cols.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n\n    getSelectedRows(): number[] {\n        if (!this._selectionModel) {\n            throw \"Selection model is not set\";\n        }\n        return this._selectedRows;\n    }\n\n    setSelectedRows(rows: number[]) {\n        if (!this._selectionModel) {\n            throw \"Selection model is not set\";\n        }\n        this._selectionModel.setSelectedRanges(this.rowsToRanges(rows));\n    }\n}\n"],
  "mappings": "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",
  "names": ["grid_exports", "__export", "Grid", "columnDefaults", "gridDefaults", "columnDefaults", "Event", "EventData", "GlobalEditorLock", "keyCode", "NonDataRow", "preClickClassName", "Range", "maxSupportedCssHeight", "scrollbarDimensions", "adjustFrozenColumnCompat", "columns", "options", "toFreeze", "i", "col", "attrEncode", "s", "defaultFormatter", "_r", "_c", "value", "htmlEncode", "disableSelection", "target", "getMaxSupportedCssHeight", "getScrollBarDimensions", "recalc", "c", "H", "tag", "attr", "children", "el", "k", "v", "simpleArrayEquals", "arr1", "arr2", "sortToDesiredOrderAndKeepRest", "idOrder", "orderById", "colIdxById", "result", "takeFrom", "j", "id", "addUiStateHover", "_a", "removeUiStateHover", "gridDefaults", "defaultFormatter", "GlobalEditorLock", "Grid", "container", "data", "columns", "options", "Event", "ranges", "previousSelectedRows", "hash", "cols", "j", "k", "simpleArrayEquals", "caller", "newSelectedAdditions", "i", "newSelectedDeletions", "_", "args", "paneBottomTop", "getScrollBarDimensions", "scrollLeft", "cellBox", "columnDefaults", "gridDefaults", "adjustFrozenColumnCompat", "H", "uisd", "spacerW", "headerRowL", "topPanelLS", "footerRowL", "headerRowR", "topPanelRS", "footerRowR", "vp", "disableSelection", "viewports", "hs", "e", "fs", "canvases", "canvas", "plugin", "name", "model", "scrollWidth", "frozenCols", "ii", "width", "availableWidth", "totalRowWidth", "forceColumnWidthsUpdate", "oldCanvasWidth", "oldCanvasWidthL", "oldCanvasWidthR", "widthChanged", "canvasWidthL", "canvasWidthR", "viewportMinus", "w", "elem", "x", "columnId", "title", "toolTip", "idx", "columnDef", "header", "child", "columnIdOrIdx", "headerRowTarget", "footerRowTarget", "frc", "el", "_$", "m", "footerRowCell", "total", "item", "NonDataRow", "htmlEncode", "totals", "key", "ltKey", "text", "self", "hc", "headerTarget", "addUiStateHover", "removeUiStateHover", "headerRowCell", "tgt", "colNode", "column", "sortOpts", "col", "columnScrollTimer", "scrollColumnsRight", "scrollColumnsLeft", "canDragScroll", "hasGrouping", "ui", "$headerDraggableGroupBy", "hasDroppedColumn", "cancel", "reorderedCols", "sortToDesiredOrderAndKeepRest", "$col", "c", "pageX", "columnElements", "minPageX", "maxPageX", "firstResizable", "lastResizable", "dd", "shrinkLeewayOnRight", "stretchLeewayOnRight", "shrinkLeewayOnLeft", "stretchLeewayOnLeft", "actualMinWidth", "d", "newCanvasWidthL", "newCanvasWidthR", "newWidth", "style", "p", "delta", "val", "dataLength", "frozenRows", "alwaysHS", "alwaysVS", "h", "v", "cs", "r", "rowHeight", "rules", "stylesheetFromUid", "sheets", "cssRules", "matches", "columnIdx", "selector", "ev", "evt", "EventData", "id", "widths", "shrinkLeeway", "prevTotal", "availWidth", "shrinkProportion", "absMinWidth", "shrinkSize", "growProportion", "currentWidth", "growSize", "reRender", "colsL", "headersL", "headersR", "rule", "ascending", "headerColumnEls", "hel", "si", "columnIndex", "l", "initCols", "defs", "initColById", "frozenColumns", "viewCols", "viewColById", "_a", "suppressRender", "suppressColumnSet", "suppressSetOverflow", "newData", "scrollToTop", "visible", "animate", "headerScroller", "row", "y", "oldOffset", "newScrollTop", "range", "rowMetadata", "colsMetadata", "colOverrides", "cell", "columnMetadata", "stringArrayL", "stringArrayR", "dataLoading", "rowCss", "metadata", "frozenRowOffset", "rowHtml", "colspan", "columnData", "sb", "_b", "_c", "klass", "fmtResult", "value", "attrEncode", "attrs", "ks", "rangeToKeep", "removeFrozenRow", "cacheEntry", "postProcessedRow", "rowIdx", "cellnode", "_d", "rows", "rl", "cellNode", "oldFmtCls", "oldFmtAtt", "keys", "node", "columnNamesH", "pagingInfo", "dataLengthIncludingAddNew", "numberOfRows", "oldH", "tempViewportH", "oldViewportHasVScroll", "getMaxSupportedCssHeight", "oldScrollTopInRange", "viewportTop", "viewportLeft", "buffer", "minBuffer", "lastChild", "totalCellsRemoved", "cellsToRemove", "cellToRemove", "stringArray", "processedRows", "cellsAdded", "totalCellsAdded", "btm", "processedRow", "needToReselectCell", "actualFrozen", "ctl", "ctr", "cbl", "cbr", "content", "rendered", "renderedFrozenRows", "deltaX", "deltaY", "handled", "isMouseWheel", "maxScrollDistanceY", "maxScrollDistanceX", "vScrollDist", "hScrollDist", "processedStatus", "groupId", "entry", "addedHash", "removedHash", "addedRowHash", "removedRowHash", "prevHash", "speed", "$cell", "toggleCellClass", "times", "retval", "keyCode", "error", "preClickModeOn", "preClickClassName", "suppressActiveCellChangedEvent", "cls", "rowNode", "offset", "cellEl", "bcr", "rowOffset", "isBottom", "y1", "y2", "x1", "x2", "doPaging", "left", "right", "scrollRight", "target", "newCell", "opt_editMode", "bcl", "sel", "editor", "useEditor", "columnMetaData", "box", "offsetParent", "viewportScrollH", "rowNumber", "rowAtTop", "rowAtBottom", "dir", "deltaRows", "prevCell", "prevActivePosX", "itemMetadata", "lastFocusableCell", "posX", "firstFocusableCell", "prev", "pos", "lastSelectableCell", "tabbingDirections", "stepFunctions", "stepFn", "isAddNewRow", "forceEdit", "validationResults", "editCommand", "newItem", "lastCell", "Range"]
}
